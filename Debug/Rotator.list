
Rotator.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000036a8  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000098  08003768  08003768  00013768  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003800  08003800  00020074  2**0
                  CONTENTS
  4 .ARM          00000008  08003800  08003800  00013800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08003808  08003808  00020074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003808  08003808  00013808  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800380c  0800380c  0001380c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000074  20000000  08003810  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e8  20000074  08003884  00020074  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000015c  08003884  0002015c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020074  2**0
                  CONTENTS, READONLY
 12 .debug_info   00012957  00000000  00000000  0002009c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003766  00000000  00000000  000329f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00009e31  00000000  00000000  00036159  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000a60  00000000  00000000  0003ff90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00001810  00000000  00000000  000409f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000148c1  00000000  00000000  00042200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00014b3a  00000000  00000000  00056ac1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000700f0  00000000  00000000  0006b5fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000db6eb  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001fc4  00000000  00000000  000db73c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000074 	.word	0x20000074
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08003750 	.word	0x08003750

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000078 	.word	0x20000078
 8000104:	08003750 	.word	0x08003750

08000108 <__gnu_thumb1_case_uqi>:
 8000108:	b402      	push	{r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0049      	lsls	r1, r1, #1
 8000110:	5c09      	ldrb	r1, [r1, r0]
 8000112:	0049      	lsls	r1, r1, #1
 8000114:	448e      	add	lr, r1
 8000116:	bc02      	pop	{r1}
 8000118:	4770      	bx	lr
 800011a:	46c0      	nop			; (mov r8, r8)

0800011c <__gnu_thumb1_case_shi>:
 800011c:	b403      	push	{r0, r1}
 800011e:	4671      	mov	r1, lr
 8000120:	0849      	lsrs	r1, r1, #1
 8000122:	0040      	lsls	r0, r0, #1
 8000124:	0049      	lsls	r1, r1, #1
 8000126:	5e09      	ldrsh	r1, [r1, r0]
 8000128:	0049      	lsls	r1, r1, #1
 800012a:	448e      	add	lr, r1
 800012c:	bc03      	pop	{r0, r1}
 800012e:	4770      	bx	lr

08000130 <__udivsi3>:
 8000130:	2200      	movs	r2, #0
 8000132:	0843      	lsrs	r3, r0, #1
 8000134:	428b      	cmp	r3, r1
 8000136:	d374      	bcc.n	8000222 <__udivsi3+0xf2>
 8000138:	0903      	lsrs	r3, r0, #4
 800013a:	428b      	cmp	r3, r1
 800013c:	d35f      	bcc.n	80001fe <__udivsi3+0xce>
 800013e:	0a03      	lsrs	r3, r0, #8
 8000140:	428b      	cmp	r3, r1
 8000142:	d344      	bcc.n	80001ce <__udivsi3+0x9e>
 8000144:	0b03      	lsrs	r3, r0, #12
 8000146:	428b      	cmp	r3, r1
 8000148:	d328      	bcc.n	800019c <__udivsi3+0x6c>
 800014a:	0c03      	lsrs	r3, r0, #16
 800014c:	428b      	cmp	r3, r1
 800014e:	d30d      	bcc.n	800016c <__udivsi3+0x3c>
 8000150:	22ff      	movs	r2, #255	; 0xff
 8000152:	0209      	lsls	r1, r1, #8
 8000154:	ba12      	rev	r2, r2
 8000156:	0c03      	lsrs	r3, r0, #16
 8000158:	428b      	cmp	r3, r1
 800015a:	d302      	bcc.n	8000162 <__udivsi3+0x32>
 800015c:	1212      	asrs	r2, r2, #8
 800015e:	0209      	lsls	r1, r1, #8
 8000160:	d065      	beq.n	800022e <__udivsi3+0xfe>
 8000162:	0b03      	lsrs	r3, r0, #12
 8000164:	428b      	cmp	r3, r1
 8000166:	d319      	bcc.n	800019c <__udivsi3+0x6c>
 8000168:	e000      	b.n	800016c <__udivsi3+0x3c>
 800016a:	0a09      	lsrs	r1, r1, #8
 800016c:	0bc3      	lsrs	r3, r0, #15
 800016e:	428b      	cmp	r3, r1
 8000170:	d301      	bcc.n	8000176 <__udivsi3+0x46>
 8000172:	03cb      	lsls	r3, r1, #15
 8000174:	1ac0      	subs	r0, r0, r3
 8000176:	4152      	adcs	r2, r2
 8000178:	0b83      	lsrs	r3, r0, #14
 800017a:	428b      	cmp	r3, r1
 800017c:	d301      	bcc.n	8000182 <__udivsi3+0x52>
 800017e:	038b      	lsls	r3, r1, #14
 8000180:	1ac0      	subs	r0, r0, r3
 8000182:	4152      	adcs	r2, r2
 8000184:	0b43      	lsrs	r3, r0, #13
 8000186:	428b      	cmp	r3, r1
 8000188:	d301      	bcc.n	800018e <__udivsi3+0x5e>
 800018a:	034b      	lsls	r3, r1, #13
 800018c:	1ac0      	subs	r0, r0, r3
 800018e:	4152      	adcs	r2, r2
 8000190:	0b03      	lsrs	r3, r0, #12
 8000192:	428b      	cmp	r3, r1
 8000194:	d301      	bcc.n	800019a <__udivsi3+0x6a>
 8000196:	030b      	lsls	r3, r1, #12
 8000198:	1ac0      	subs	r0, r0, r3
 800019a:	4152      	adcs	r2, r2
 800019c:	0ac3      	lsrs	r3, r0, #11
 800019e:	428b      	cmp	r3, r1
 80001a0:	d301      	bcc.n	80001a6 <__udivsi3+0x76>
 80001a2:	02cb      	lsls	r3, r1, #11
 80001a4:	1ac0      	subs	r0, r0, r3
 80001a6:	4152      	adcs	r2, r2
 80001a8:	0a83      	lsrs	r3, r0, #10
 80001aa:	428b      	cmp	r3, r1
 80001ac:	d301      	bcc.n	80001b2 <__udivsi3+0x82>
 80001ae:	028b      	lsls	r3, r1, #10
 80001b0:	1ac0      	subs	r0, r0, r3
 80001b2:	4152      	adcs	r2, r2
 80001b4:	0a43      	lsrs	r3, r0, #9
 80001b6:	428b      	cmp	r3, r1
 80001b8:	d301      	bcc.n	80001be <__udivsi3+0x8e>
 80001ba:	024b      	lsls	r3, r1, #9
 80001bc:	1ac0      	subs	r0, r0, r3
 80001be:	4152      	adcs	r2, r2
 80001c0:	0a03      	lsrs	r3, r0, #8
 80001c2:	428b      	cmp	r3, r1
 80001c4:	d301      	bcc.n	80001ca <__udivsi3+0x9a>
 80001c6:	020b      	lsls	r3, r1, #8
 80001c8:	1ac0      	subs	r0, r0, r3
 80001ca:	4152      	adcs	r2, r2
 80001cc:	d2cd      	bcs.n	800016a <__udivsi3+0x3a>
 80001ce:	09c3      	lsrs	r3, r0, #7
 80001d0:	428b      	cmp	r3, r1
 80001d2:	d301      	bcc.n	80001d8 <__udivsi3+0xa8>
 80001d4:	01cb      	lsls	r3, r1, #7
 80001d6:	1ac0      	subs	r0, r0, r3
 80001d8:	4152      	adcs	r2, r2
 80001da:	0983      	lsrs	r3, r0, #6
 80001dc:	428b      	cmp	r3, r1
 80001de:	d301      	bcc.n	80001e4 <__udivsi3+0xb4>
 80001e0:	018b      	lsls	r3, r1, #6
 80001e2:	1ac0      	subs	r0, r0, r3
 80001e4:	4152      	adcs	r2, r2
 80001e6:	0943      	lsrs	r3, r0, #5
 80001e8:	428b      	cmp	r3, r1
 80001ea:	d301      	bcc.n	80001f0 <__udivsi3+0xc0>
 80001ec:	014b      	lsls	r3, r1, #5
 80001ee:	1ac0      	subs	r0, r0, r3
 80001f0:	4152      	adcs	r2, r2
 80001f2:	0903      	lsrs	r3, r0, #4
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d301      	bcc.n	80001fc <__udivsi3+0xcc>
 80001f8:	010b      	lsls	r3, r1, #4
 80001fa:	1ac0      	subs	r0, r0, r3
 80001fc:	4152      	adcs	r2, r2
 80001fe:	08c3      	lsrs	r3, r0, #3
 8000200:	428b      	cmp	r3, r1
 8000202:	d301      	bcc.n	8000208 <__udivsi3+0xd8>
 8000204:	00cb      	lsls	r3, r1, #3
 8000206:	1ac0      	subs	r0, r0, r3
 8000208:	4152      	adcs	r2, r2
 800020a:	0883      	lsrs	r3, r0, #2
 800020c:	428b      	cmp	r3, r1
 800020e:	d301      	bcc.n	8000214 <__udivsi3+0xe4>
 8000210:	008b      	lsls	r3, r1, #2
 8000212:	1ac0      	subs	r0, r0, r3
 8000214:	4152      	adcs	r2, r2
 8000216:	0843      	lsrs	r3, r0, #1
 8000218:	428b      	cmp	r3, r1
 800021a:	d301      	bcc.n	8000220 <__udivsi3+0xf0>
 800021c:	004b      	lsls	r3, r1, #1
 800021e:	1ac0      	subs	r0, r0, r3
 8000220:	4152      	adcs	r2, r2
 8000222:	1a41      	subs	r1, r0, r1
 8000224:	d200      	bcs.n	8000228 <__udivsi3+0xf8>
 8000226:	4601      	mov	r1, r0
 8000228:	4152      	adcs	r2, r2
 800022a:	4610      	mov	r0, r2
 800022c:	4770      	bx	lr
 800022e:	e7ff      	b.n	8000230 <__udivsi3+0x100>
 8000230:	b501      	push	{r0, lr}
 8000232:	2000      	movs	r0, #0
 8000234:	f000 f8f0 	bl	8000418 <__aeabi_idiv0>
 8000238:	bd02      	pop	{r1, pc}
 800023a:	46c0      	nop			; (mov r8, r8)

0800023c <__aeabi_uidivmod>:
 800023c:	2900      	cmp	r1, #0
 800023e:	d0f7      	beq.n	8000230 <__udivsi3+0x100>
 8000240:	e776      	b.n	8000130 <__udivsi3>
 8000242:	4770      	bx	lr

08000244 <__divsi3>:
 8000244:	4603      	mov	r3, r0
 8000246:	430b      	orrs	r3, r1
 8000248:	d47f      	bmi.n	800034a <__divsi3+0x106>
 800024a:	2200      	movs	r2, #0
 800024c:	0843      	lsrs	r3, r0, #1
 800024e:	428b      	cmp	r3, r1
 8000250:	d374      	bcc.n	800033c <__divsi3+0xf8>
 8000252:	0903      	lsrs	r3, r0, #4
 8000254:	428b      	cmp	r3, r1
 8000256:	d35f      	bcc.n	8000318 <__divsi3+0xd4>
 8000258:	0a03      	lsrs	r3, r0, #8
 800025a:	428b      	cmp	r3, r1
 800025c:	d344      	bcc.n	80002e8 <__divsi3+0xa4>
 800025e:	0b03      	lsrs	r3, r0, #12
 8000260:	428b      	cmp	r3, r1
 8000262:	d328      	bcc.n	80002b6 <__divsi3+0x72>
 8000264:	0c03      	lsrs	r3, r0, #16
 8000266:	428b      	cmp	r3, r1
 8000268:	d30d      	bcc.n	8000286 <__divsi3+0x42>
 800026a:	22ff      	movs	r2, #255	; 0xff
 800026c:	0209      	lsls	r1, r1, #8
 800026e:	ba12      	rev	r2, r2
 8000270:	0c03      	lsrs	r3, r0, #16
 8000272:	428b      	cmp	r3, r1
 8000274:	d302      	bcc.n	800027c <__divsi3+0x38>
 8000276:	1212      	asrs	r2, r2, #8
 8000278:	0209      	lsls	r1, r1, #8
 800027a:	d065      	beq.n	8000348 <__divsi3+0x104>
 800027c:	0b03      	lsrs	r3, r0, #12
 800027e:	428b      	cmp	r3, r1
 8000280:	d319      	bcc.n	80002b6 <__divsi3+0x72>
 8000282:	e000      	b.n	8000286 <__divsi3+0x42>
 8000284:	0a09      	lsrs	r1, r1, #8
 8000286:	0bc3      	lsrs	r3, r0, #15
 8000288:	428b      	cmp	r3, r1
 800028a:	d301      	bcc.n	8000290 <__divsi3+0x4c>
 800028c:	03cb      	lsls	r3, r1, #15
 800028e:	1ac0      	subs	r0, r0, r3
 8000290:	4152      	adcs	r2, r2
 8000292:	0b83      	lsrs	r3, r0, #14
 8000294:	428b      	cmp	r3, r1
 8000296:	d301      	bcc.n	800029c <__divsi3+0x58>
 8000298:	038b      	lsls	r3, r1, #14
 800029a:	1ac0      	subs	r0, r0, r3
 800029c:	4152      	adcs	r2, r2
 800029e:	0b43      	lsrs	r3, r0, #13
 80002a0:	428b      	cmp	r3, r1
 80002a2:	d301      	bcc.n	80002a8 <__divsi3+0x64>
 80002a4:	034b      	lsls	r3, r1, #13
 80002a6:	1ac0      	subs	r0, r0, r3
 80002a8:	4152      	adcs	r2, r2
 80002aa:	0b03      	lsrs	r3, r0, #12
 80002ac:	428b      	cmp	r3, r1
 80002ae:	d301      	bcc.n	80002b4 <__divsi3+0x70>
 80002b0:	030b      	lsls	r3, r1, #12
 80002b2:	1ac0      	subs	r0, r0, r3
 80002b4:	4152      	adcs	r2, r2
 80002b6:	0ac3      	lsrs	r3, r0, #11
 80002b8:	428b      	cmp	r3, r1
 80002ba:	d301      	bcc.n	80002c0 <__divsi3+0x7c>
 80002bc:	02cb      	lsls	r3, r1, #11
 80002be:	1ac0      	subs	r0, r0, r3
 80002c0:	4152      	adcs	r2, r2
 80002c2:	0a83      	lsrs	r3, r0, #10
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d301      	bcc.n	80002cc <__divsi3+0x88>
 80002c8:	028b      	lsls	r3, r1, #10
 80002ca:	1ac0      	subs	r0, r0, r3
 80002cc:	4152      	adcs	r2, r2
 80002ce:	0a43      	lsrs	r3, r0, #9
 80002d0:	428b      	cmp	r3, r1
 80002d2:	d301      	bcc.n	80002d8 <__divsi3+0x94>
 80002d4:	024b      	lsls	r3, r1, #9
 80002d6:	1ac0      	subs	r0, r0, r3
 80002d8:	4152      	adcs	r2, r2
 80002da:	0a03      	lsrs	r3, r0, #8
 80002dc:	428b      	cmp	r3, r1
 80002de:	d301      	bcc.n	80002e4 <__divsi3+0xa0>
 80002e0:	020b      	lsls	r3, r1, #8
 80002e2:	1ac0      	subs	r0, r0, r3
 80002e4:	4152      	adcs	r2, r2
 80002e6:	d2cd      	bcs.n	8000284 <__divsi3+0x40>
 80002e8:	09c3      	lsrs	r3, r0, #7
 80002ea:	428b      	cmp	r3, r1
 80002ec:	d301      	bcc.n	80002f2 <__divsi3+0xae>
 80002ee:	01cb      	lsls	r3, r1, #7
 80002f0:	1ac0      	subs	r0, r0, r3
 80002f2:	4152      	adcs	r2, r2
 80002f4:	0983      	lsrs	r3, r0, #6
 80002f6:	428b      	cmp	r3, r1
 80002f8:	d301      	bcc.n	80002fe <__divsi3+0xba>
 80002fa:	018b      	lsls	r3, r1, #6
 80002fc:	1ac0      	subs	r0, r0, r3
 80002fe:	4152      	adcs	r2, r2
 8000300:	0943      	lsrs	r3, r0, #5
 8000302:	428b      	cmp	r3, r1
 8000304:	d301      	bcc.n	800030a <__divsi3+0xc6>
 8000306:	014b      	lsls	r3, r1, #5
 8000308:	1ac0      	subs	r0, r0, r3
 800030a:	4152      	adcs	r2, r2
 800030c:	0903      	lsrs	r3, r0, #4
 800030e:	428b      	cmp	r3, r1
 8000310:	d301      	bcc.n	8000316 <__divsi3+0xd2>
 8000312:	010b      	lsls	r3, r1, #4
 8000314:	1ac0      	subs	r0, r0, r3
 8000316:	4152      	adcs	r2, r2
 8000318:	08c3      	lsrs	r3, r0, #3
 800031a:	428b      	cmp	r3, r1
 800031c:	d301      	bcc.n	8000322 <__divsi3+0xde>
 800031e:	00cb      	lsls	r3, r1, #3
 8000320:	1ac0      	subs	r0, r0, r3
 8000322:	4152      	adcs	r2, r2
 8000324:	0883      	lsrs	r3, r0, #2
 8000326:	428b      	cmp	r3, r1
 8000328:	d301      	bcc.n	800032e <__divsi3+0xea>
 800032a:	008b      	lsls	r3, r1, #2
 800032c:	1ac0      	subs	r0, r0, r3
 800032e:	4152      	adcs	r2, r2
 8000330:	0843      	lsrs	r3, r0, #1
 8000332:	428b      	cmp	r3, r1
 8000334:	d301      	bcc.n	800033a <__divsi3+0xf6>
 8000336:	004b      	lsls	r3, r1, #1
 8000338:	1ac0      	subs	r0, r0, r3
 800033a:	4152      	adcs	r2, r2
 800033c:	1a41      	subs	r1, r0, r1
 800033e:	d200      	bcs.n	8000342 <__divsi3+0xfe>
 8000340:	4601      	mov	r1, r0
 8000342:	4152      	adcs	r2, r2
 8000344:	4610      	mov	r0, r2
 8000346:	4770      	bx	lr
 8000348:	e05d      	b.n	8000406 <__divsi3+0x1c2>
 800034a:	0fca      	lsrs	r2, r1, #31
 800034c:	d000      	beq.n	8000350 <__divsi3+0x10c>
 800034e:	4249      	negs	r1, r1
 8000350:	1003      	asrs	r3, r0, #32
 8000352:	d300      	bcc.n	8000356 <__divsi3+0x112>
 8000354:	4240      	negs	r0, r0
 8000356:	4053      	eors	r3, r2
 8000358:	2200      	movs	r2, #0
 800035a:	469c      	mov	ip, r3
 800035c:	0903      	lsrs	r3, r0, #4
 800035e:	428b      	cmp	r3, r1
 8000360:	d32d      	bcc.n	80003be <__divsi3+0x17a>
 8000362:	0a03      	lsrs	r3, r0, #8
 8000364:	428b      	cmp	r3, r1
 8000366:	d312      	bcc.n	800038e <__divsi3+0x14a>
 8000368:	22fc      	movs	r2, #252	; 0xfc
 800036a:	0189      	lsls	r1, r1, #6
 800036c:	ba12      	rev	r2, r2
 800036e:	0a03      	lsrs	r3, r0, #8
 8000370:	428b      	cmp	r3, r1
 8000372:	d30c      	bcc.n	800038e <__divsi3+0x14a>
 8000374:	0189      	lsls	r1, r1, #6
 8000376:	1192      	asrs	r2, r2, #6
 8000378:	428b      	cmp	r3, r1
 800037a:	d308      	bcc.n	800038e <__divsi3+0x14a>
 800037c:	0189      	lsls	r1, r1, #6
 800037e:	1192      	asrs	r2, r2, #6
 8000380:	428b      	cmp	r3, r1
 8000382:	d304      	bcc.n	800038e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	d03a      	beq.n	80003fe <__divsi3+0x1ba>
 8000388:	1192      	asrs	r2, r2, #6
 800038a:	e000      	b.n	800038e <__divsi3+0x14a>
 800038c:	0989      	lsrs	r1, r1, #6
 800038e:	09c3      	lsrs	r3, r0, #7
 8000390:	428b      	cmp	r3, r1
 8000392:	d301      	bcc.n	8000398 <__divsi3+0x154>
 8000394:	01cb      	lsls	r3, r1, #7
 8000396:	1ac0      	subs	r0, r0, r3
 8000398:	4152      	adcs	r2, r2
 800039a:	0983      	lsrs	r3, r0, #6
 800039c:	428b      	cmp	r3, r1
 800039e:	d301      	bcc.n	80003a4 <__divsi3+0x160>
 80003a0:	018b      	lsls	r3, r1, #6
 80003a2:	1ac0      	subs	r0, r0, r3
 80003a4:	4152      	adcs	r2, r2
 80003a6:	0943      	lsrs	r3, r0, #5
 80003a8:	428b      	cmp	r3, r1
 80003aa:	d301      	bcc.n	80003b0 <__divsi3+0x16c>
 80003ac:	014b      	lsls	r3, r1, #5
 80003ae:	1ac0      	subs	r0, r0, r3
 80003b0:	4152      	adcs	r2, r2
 80003b2:	0903      	lsrs	r3, r0, #4
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d301      	bcc.n	80003bc <__divsi3+0x178>
 80003b8:	010b      	lsls	r3, r1, #4
 80003ba:	1ac0      	subs	r0, r0, r3
 80003bc:	4152      	adcs	r2, r2
 80003be:	08c3      	lsrs	r3, r0, #3
 80003c0:	428b      	cmp	r3, r1
 80003c2:	d301      	bcc.n	80003c8 <__divsi3+0x184>
 80003c4:	00cb      	lsls	r3, r1, #3
 80003c6:	1ac0      	subs	r0, r0, r3
 80003c8:	4152      	adcs	r2, r2
 80003ca:	0883      	lsrs	r3, r0, #2
 80003cc:	428b      	cmp	r3, r1
 80003ce:	d301      	bcc.n	80003d4 <__divsi3+0x190>
 80003d0:	008b      	lsls	r3, r1, #2
 80003d2:	1ac0      	subs	r0, r0, r3
 80003d4:	4152      	adcs	r2, r2
 80003d6:	d2d9      	bcs.n	800038c <__divsi3+0x148>
 80003d8:	0843      	lsrs	r3, r0, #1
 80003da:	428b      	cmp	r3, r1
 80003dc:	d301      	bcc.n	80003e2 <__divsi3+0x19e>
 80003de:	004b      	lsls	r3, r1, #1
 80003e0:	1ac0      	subs	r0, r0, r3
 80003e2:	4152      	adcs	r2, r2
 80003e4:	1a41      	subs	r1, r0, r1
 80003e6:	d200      	bcs.n	80003ea <__divsi3+0x1a6>
 80003e8:	4601      	mov	r1, r0
 80003ea:	4663      	mov	r3, ip
 80003ec:	4152      	adcs	r2, r2
 80003ee:	105b      	asrs	r3, r3, #1
 80003f0:	4610      	mov	r0, r2
 80003f2:	d301      	bcc.n	80003f8 <__divsi3+0x1b4>
 80003f4:	4240      	negs	r0, r0
 80003f6:	2b00      	cmp	r3, #0
 80003f8:	d500      	bpl.n	80003fc <__divsi3+0x1b8>
 80003fa:	4249      	negs	r1, r1
 80003fc:	4770      	bx	lr
 80003fe:	4663      	mov	r3, ip
 8000400:	105b      	asrs	r3, r3, #1
 8000402:	d300      	bcc.n	8000406 <__divsi3+0x1c2>
 8000404:	4240      	negs	r0, r0
 8000406:	b501      	push	{r0, lr}
 8000408:	2000      	movs	r0, #0
 800040a:	f000 f805 	bl	8000418 <__aeabi_idiv0>
 800040e:	bd02      	pop	{r1, pc}

08000410 <__aeabi_idivmod>:
 8000410:	2900      	cmp	r1, #0
 8000412:	d0f8      	beq.n	8000406 <__divsi3+0x1c2>
 8000414:	e716      	b.n	8000244 <__divsi3>
 8000416:	4770      	bx	lr

08000418 <__aeabi_idiv0>:
 8000418:	4770      	bx	lr
 800041a:	46c0      	nop			; (mov r8, r8)

0800041c <__aeabi_uldivmod>:
 800041c:	2b00      	cmp	r3, #0
 800041e:	d111      	bne.n	8000444 <__aeabi_uldivmod+0x28>
 8000420:	2a00      	cmp	r2, #0
 8000422:	d10f      	bne.n	8000444 <__aeabi_uldivmod+0x28>
 8000424:	2900      	cmp	r1, #0
 8000426:	d100      	bne.n	800042a <__aeabi_uldivmod+0xe>
 8000428:	2800      	cmp	r0, #0
 800042a:	d002      	beq.n	8000432 <__aeabi_uldivmod+0x16>
 800042c:	2100      	movs	r1, #0
 800042e:	43c9      	mvns	r1, r1
 8000430:	0008      	movs	r0, r1
 8000432:	b407      	push	{r0, r1, r2}
 8000434:	4802      	ldr	r0, [pc, #8]	; (8000440 <__aeabi_uldivmod+0x24>)
 8000436:	a102      	add	r1, pc, #8	; (adr r1, 8000440 <__aeabi_uldivmod+0x24>)
 8000438:	1840      	adds	r0, r0, r1
 800043a:	9002      	str	r0, [sp, #8]
 800043c:	bd03      	pop	{r0, r1, pc}
 800043e:	46c0      	nop			; (mov r8, r8)
 8000440:	ffffffd9 	.word	0xffffffd9
 8000444:	b403      	push	{r0, r1}
 8000446:	4668      	mov	r0, sp
 8000448:	b501      	push	{r0, lr}
 800044a:	9802      	ldr	r0, [sp, #8]
 800044c:	f000 f834 	bl	80004b8 <__udivmoddi4>
 8000450:	9b01      	ldr	r3, [sp, #4]
 8000452:	469e      	mov	lr, r3
 8000454:	b002      	add	sp, #8
 8000456:	bc0c      	pop	{r2, r3}
 8000458:	4770      	bx	lr
 800045a:	46c0      	nop			; (mov r8, r8)

0800045c <__aeabi_lmul>:
 800045c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800045e:	46ce      	mov	lr, r9
 8000460:	4647      	mov	r7, r8
 8000462:	b580      	push	{r7, lr}
 8000464:	0007      	movs	r7, r0
 8000466:	4699      	mov	r9, r3
 8000468:	0c3b      	lsrs	r3, r7, #16
 800046a:	469c      	mov	ip, r3
 800046c:	0413      	lsls	r3, r2, #16
 800046e:	0c1b      	lsrs	r3, r3, #16
 8000470:	001d      	movs	r5, r3
 8000472:	000e      	movs	r6, r1
 8000474:	4661      	mov	r1, ip
 8000476:	0400      	lsls	r0, r0, #16
 8000478:	0c14      	lsrs	r4, r2, #16
 800047a:	0c00      	lsrs	r0, r0, #16
 800047c:	4345      	muls	r5, r0
 800047e:	434b      	muls	r3, r1
 8000480:	4360      	muls	r0, r4
 8000482:	4361      	muls	r1, r4
 8000484:	18c0      	adds	r0, r0, r3
 8000486:	0c2c      	lsrs	r4, r5, #16
 8000488:	1820      	adds	r0, r4, r0
 800048a:	468c      	mov	ip, r1
 800048c:	4283      	cmp	r3, r0
 800048e:	d903      	bls.n	8000498 <__aeabi_lmul+0x3c>
 8000490:	2380      	movs	r3, #128	; 0x80
 8000492:	025b      	lsls	r3, r3, #9
 8000494:	4698      	mov	r8, r3
 8000496:	44c4      	add	ip, r8
 8000498:	4649      	mov	r1, r9
 800049a:	4379      	muls	r1, r7
 800049c:	4372      	muls	r2, r6
 800049e:	0c03      	lsrs	r3, r0, #16
 80004a0:	4463      	add	r3, ip
 80004a2:	042d      	lsls	r5, r5, #16
 80004a4:	0c2d      	lsrs	r5, r5, #16
 80004a6:	18c9      	adds	r1, r1, r3
 80004a8:	0400      	lsls	r0, r0, #16
 80004aa:	1940      	adds	r0, r0, r5
 80004ac:	1889      	adds	r1, r1, r2
 80004ae:	bcc0      	pop	{r6, r7}
 80004b0:	46b9      	mov	r9, r7
 80004b2:	46b0      	mov	r8, r6
 80004b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80004b6:	46c0      	nop			; (mov r8, r8)

080004b8 <__udivmoddi4>:
 80004b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004ba:	4657      	mov	r7, sl
 80004bc:	464e      	mov	r6, r9
 80004be:	4645      	mov	r5, r8
 80004c0:	46de      	mov	lr, fp
 80004c2:	b5e0      	push	{r5, r6, r7, lr}
 80004c4:	0004      	movs	r4, r0
 80004c6:	000d      	movs	r5, r1
 80004c8:	4692      	mov	sl, r2
 80004ca:	4699      	mov	r9, r3
 80004cc:	b083      	sub	sp, #12
 80004ce:	428b      	cmp	r3, r1
 80004d0:	d830      	bhi.n	8000534 <__udivmoddi4+0x7c>
 80004d2:	d02d      	beq.n	8000530 <__udivmoddi4+0x78>
 80004d4:	4649      	mov	r1, r9
 80004d6:	4650      	mov	r0, sl
 80004d8:	f000 f8d8 	bl	800068c <__clzdi2>
 80004dc:	0029      	movs	r1, r5
 80004de:	0006      	movs	r6, r0
 80004e0:	0020      	movs	r0, r4
 80004e2:	f000 f8d3 	bl	800068c <__clzdi2>
 80004e6:	1a33      	subs	r3, r6, r0
 80004e8:	4698      	mov	r8, r3
 80004ea:	3b20      	subs	r3, #32
 80004ec:	469b      	mov	fp, r3
 80004ee:	d433      	bmi.n	8000558 <__udivmoddi4+0xa0>
 80004f0:	465a      	mov	r2, fp
 80004f2:	4653      	mov	r3, sl
 80004f4:	4093      	lsls	r3, r2
 80004f6:	4642      	mov	r2, r8
 80004f8:	001f      	movs	r7, r3
 80004fa:	4653      	mov	r3, sl
 80004fc:	4093      	lsls	r3, r2
 80004fe:	001e      	movs	r6, r3
 8000500:	42af      	cmp	r7, r5
 8000502:	d83a      	bhi.n	800057a <__udivmoddi4+0xc2>
 8000504:	42af      	cmp	r7, r5
 8000506:	d100      	bne.n	800050a <__udivmoddi4+0x52>
 8000508:	e078      	b.n	80005fc <__udivmoddi4+0x144>
 800050a:	465b      	mov	r3, fp
 800050c:	1ba4      	subs	r4, r4, r6
 800050e:	41bd      	sbcs	r5, r7
 8000510:	2b00      	cmp	r3, #0
 8000512:	da00      	bge.n	8000516 <__udivmoddi4+0x5e>
 8000514:	e075      	b.n	8000602 <__udivmoddi4+0x14a>
 8000516:	2200      	movs	r2, #0
 8000518:	2300      	movs	r3, #0
 800051a:	9200      	str	r2, [sp, #0]
 800051c:	9301      	str	r3, [sp, #4]
 800051e:	2301      	movs	r3, #1
 8000520:	465a      	mov	r2, fp
 8000522:	4093      	lsls	r3, r2
 8000524:	9301      	str	r3, [sp, #4]
 8000526:	2301      	movs	r3, #1
 8000528:	4642      	mov	r2, r8
 800052a:	4093      	lsls	r3, r2
 800052c:	9300      	str	r3, [sp, #0]
 800052e:	e028      	b.n	8000582 <__udivmoddi4+0xca>
 8000530:	4282      	cmp	r2, r0
 8000532:	d9cf      	bls.n	80004d4 <__udivmoddi4+0x1c>
 8000534:	2200      	movs	r2, #0
 8000536:	2300      	movs	r3, #0
 8000538:	9200      	str	r2, [sp, #0]
 800053a:	9301      	str	r3, [sp, #4]
 800053c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800053e:	2b00      	cmp	r3, #0
 8000540:	d001      	beq.n	8000546 <__udivmoddi4+0x8e>
 8000542:	601c      	str	r4, [r3, #0]
 8000544:	605d      	str	r5, [r3, #4]
 8000546:	9800      	ldr	r0, [sp, #0]
 8000548:	9901      	ldr	r1, [sp, #4]
 800054a:	b003      	add	sp, #12
 800054c:	bcf0      	pop	{r4, r5, r6, r7}
 800054e:	46bb      	mov	fp, r7
 8000550:	46b2      	mov	sl, r6
 8000552:	46a9      	mov	r9, r5
 8000554:	46a0      	mov	r8, r4
 8000556:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000558:	4642      	mov	r2, r8
 800055a:	2320      	movs	r3, #32
 800055c:	1a9b      	subs	r3, r3, r2
 800055e:	4652      	mov	r2, sl
 8000560:	40da      	lsrs	r2, r3
 8000562:	4641      	mov	r1, r8
 8000564:	0013      	movs	r3, r2
 8000566:	464a      	mov	r2, r9
 8000568:	408a      	lsls	r2, r1
 800056a:	0017      	movs	r7, r2
 800056c:	4642      	mov	r2, r8
 800056e:	431f      	orrs	r7, r3
 8000570:	4653      	mov	r3, sl
 8000572:	4093      	lsls	r3, r2
 8000574:	001e      	movs	r6, r3
 8000576:	42af      	cmp	r7, r5
 8000578:	d9c4      	bls.n	8000504 <__udivmoddi4+0x4c>
 800057a:	2200      	movs	r2, #0
 800057c:	2300      	movs	r3, #0
 800057e:	9200      	str	r2, [sp, #0]
 8000580:	9301      	str	r3, [sp, #4]
 8000582:	4643      	mov	r3, r8
 8000584:	2b00      	cmp	r3, #0
 8000586:	d0d9      	beq.n	800053c <__udivmoddi4+0x84>
 8000588:	07fb      	lsls	r3, r7, #31
 800058a:	0872      	lsrs	r2, r6, #1
 800058c:	431a      	orrs	r2, r3
 800058e:	4646      	mov	r6, r8
 8000590:	087b      	lsrs	r3, r7, #1
 8000592:	e00e      	b.n	80005b2 <__udivmoddi4+0xfa>
 8000594:	42ab      	cmp	r3, r5
 8000596:	d101      	bne.n	800059c <__udivmoddi4+0xe4>
 8000598:	42a2      	cmp	r2, r4
 800059a:	d80c      	bhi.n	80005b6 <__udivmoddi4+0xfe>
 800059c:	1aa4      	subs	r4, r4, r2
 800059e:	419d      	sbcs	r5, r3
 80005a0:	2001      	movs	r0, #1
 80005a2:	1924      	adds	r4, r4, r4
 80005a4:	416d      	adcs	r5, r5
 80005a6:	2100      	movs	r1, #0
 80005a8:	3e01      	subs	r6, #1
 80005aa:	1824      	adds	r4, r4, r0
 80005ac:	414d      	adcs	r5, r1
 80005ae:	2e00      	cmp	r6, #0
 80005b0:	d006      	beq.n	80005c0 <__udivmoddi4+0x108>
 80005b2:	42ab      	cmp	r3, r5
 80005b4:	d9ee      	bls.n	8000594 <__udivmoddi4+0xdc>
 80005b6:	3e01      	subs	r6, #1
 80005b8:	1924      	adds	r4, r4, r4
 80005ba:	416d      	adcs	r5, r5
 80005bc:	2e00      	cmp	r6, #0
 80005be:	d1f8      	bne.n	80005b2 <__udivmoddi4+0xfa>
 80005c0:	9800      	ldr	r0, [sp, #0]
 80005c2:	9901      	ldr	r1, [sp, #4]
 80005c4:	465b      	mov	r3, fp
 80005c6:	1900      	adds	r0, r0, r4
 80005c8:	4169      	adcs	r1, r5
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	db24      	blt.n	8000618 <__udivmoddi4+0x160>
 80005ce:	002b      	movs	r3, r5
 80005d0:	465a      	mov	r2, fp
 80005d2:	4644      	mov	r4, r8
 80005d4:	40d3      	lsrs	r3, r2
 80005d6:	002a      	movs	r2, r5
 80005d8:	40e2      	lsrs	r2, r4
 80005da:	001c      	movs	r4, r3
 80005dc:	465b      	mov	r3, fp
 80005de:	0015      	movs	r5, r2
 80005e0:	2b00      	cmp	r3, #0
 80005e2:	db2a      	blt.n	800063a <__udivmoddi4+0x182>
 80005e4:	0026      	movs	r6, r4
 80005e6:	409e      	lsls	r6, r3
 80005e8:	0033      	movs	r3, r6
 80005ea:	0026      	movs	r6, r4
 80005ec:	4647      	mov	r7, r8
 80005ee:	40be      	lsls	r6, r7
 80005f0:	0032      	movs	r2, r6
 80005f2:	1a80      	subs	r0, r0, r2
 80005f4:	4199      	sbcs	r1, r3
 80005f6:	9000      	str	r0, [sp, #0]
 80005f8:	9101      	str	r1, [sp, #4]
 80005fa:	e79f      	b.n	800053c <__udivmoddi4+0x84>
 80005fc:	42a3      	cmp	r3, r4
 80005fe:	d8bc      	bhi.n	800057a <__udivmoddi4+0xc2>
 8000600:	e783      	b.n	800050a <__udivmoddi4+0x52>
 8000602:	4642      	mov	r2, r8
 8000604:	2320      	movs	r3, #32
 8000606:	2100      	movs	r1, #0
 8000608:	1a9b      	subs	r3, r3, r2
 800060a:	2200      	movs	r2, #0
 800060c:	9100      	str	r1, [sp, #0]
 800060e:	9201      	str	r2, [sp, #4]
 8000610:	2201      	movs	r2, #1
 8000612:	40da      	lsrs	r2, r3
 8000614:	9201      	str	r2, [sp, #4]
 8000616:	e786      	b.n	8000526 <__udivmoddi4+0x6e>
 8000618:	4642      	mov	r2, r8
 800061a:	2320      	movs	r3, #32
 800061c:	1a9b      	subs	r3, r3, r2
 800061e:	002a      	movs	r2, r5
 8000620:	4646      	mov	r6, r8
 8000622:	409a      	lsls	r2, r3
 8000624:	0023      	movs	r3, r4
 8000626:	40f3      	lsrs	r3, r6
 8000628:	4644      	mov	r4, r8
 800062a:	4313      	orrs	r3, r2
 800062c:	002a      	movs	r2, r5
 800062e:	40e2      	lsrs	r2, r4
 8000630:	001c      	movs	r4, r3
 8000632:	465b      	mov	r3, fp
 8000634:	0015      	movs	r5, r2
 8000636:	2b00      	cmp	r3, #0
 8000638:	dad4      	bge.n	80005e4 <__udivmoddi4+0x12c>
 800063a:	4642      	mov	r2, r8
 800063c:	002f      	movs	r7, r5
 800063e:	2320      	movs	r3, #32
 8000640:	0026      	movs	r6, r4
 8000642:	4097      	lsls	r7, r2
 8000644:	1a9b      	subs	r3, r3, r2
 8000646:	40de      	lsrs	r6, r3
 8000648:	003b      	movs	r3, r7
 800064a:	4333      	orrs	r3, r6
 800064c:	e7cd      	b.n	80005ea <__udivmoddi4+0x132>
 800064e:	46c0      	nop			; (mov r8, r8)

08000650 <__clzsi2>:
 8000650:	211c      	movs	r1, #28
 8000652:	2301      	movs	r3, #1
 8000654:	041b      	lsls	r3, r3, #16
 8000656:	4298      	cmp	r0, r3
 8000658:	d301      	bcc.n	800065e <__clzsi2+0xe>
 800065a:	0c00      	lsrs	r0, r0, #16
 800065c:	3910      	subs	r1, #16
 800065e:	0a1b      	lsrs	r3, r3, #8
 8000660:	4298      	cmp	r0, r3
 8000662:	d301      	bcc.n	8000668 <__clzsi2+0x18>
 8000664:	0a00      	lsrs	r0, r0, #8
 8000666:	3908      	subs	r1, #8
 8000668:	091b      	lsrs	r3, r3, #4
 800066a:	4298      	cmp	r0, r3
 800066c:	d301      	bcc.n	8000672 <__clzsi2+0x22>
 800066e:	0900      	lsrs	r0, r0, #4
 8000670:	3904      	subs	r1, #4
 8000672:	a202      	add	r2, pc, #8	; (adr r2, 800067c <__clzsi2+0x2c>)
 8000674:	5c10      	ldrb	r0, [r2, r0]
 8000676:	1840      	adds	r0, r0, r1
 8000678:	4770      	bx	lr
 800067a:	46c0      	nop			; (mov r8, r8)
 800067c:	02020304 	.word	0x02020304
 8000680:	01010101 	.word	0x01010101
	...

0800068c <__clzdi2>:
 800068c:	b510      	push	{r4, lr}
 800068e:	2900      	cmp	r1, #0
 8000690:	d103      	bne.n	800069a <__clzdi2+0xe>
 8000692:	f7ff ffdd 	bl	8000650 <__clzsi2>
 8000696:	3020      	adds	r0, #32
 8000698:	e002      	b.n	80006a0 <__clzdi2+0x14>
 800069a:	0008      	movs	r0, r1
 800069c:	f7ff ffd8 	bl	8000650 <__clzsi2>
 80006a0:	bd10      	pop	{r4, pc}
 80006a2:	46c0      	nop			; (mov r8, r8)

080006a4 <sendInternal.constprop.0.isra.0>:
#endif /* USE_BUSY_FLAG */
}
#endif

#ifdef USE_I2C_BUS
static HAL_StatusTypeDef sendInternal(uint8_t lcd_addr, uint8_t data, uint8_t flags)
 80006a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80006a6:	0005      	movs	r5, r0
 80006a8:	000e      	movs	r6, r1
{
    HAL_StatusTypeDef res;
    for(;;)
    {
        res = HAL_I2C_IsDeviceReady(&LCD_I2C_PORT, lcd_addr, 1, HAL_MAX_DELAY);
 80006aa:	2301      	movs	r3, #1
 80006ac:	4c13      	ldr	r4, [pc, #76]	; (80006fc <sendInternal.constprop.0.isra.0+0x58>)
 80006ae:	2201      	movs	r2, #1
 80006b0:	217e      	movs	r1, #126	; 0x7e
 80006b2:	0020      	movs	r0, r4
 80006b4:	425b      	negs	r3, r3
 80006b6:	f001 fcdb 	bl	8002070 <HAL_I2C_IsDeviceReady>
        if(res == HAL_OK)
 80006ba:	2800      	cmp	r0, #0
 80006bc:	d1f5      	bne.n	80006aa <sendInternal.constprop.0.isra.0+0x6>

    uint8_t up = data & 0xF0;
    uint8_t lo = (data << 4) & 0xF0;

    uint8_t data_arr[4];
    data_arr[0] = up|flags|current_status_backlight|PIN_EN;
 80006be:	4b10      	ldr	r3, [pc, #64]	; (8000700 <sendInternal.constprop.0.isra.0+0x5c>)
    uint8_t up = data & 0xF0;
 80006c0:	0028      	movs	r0, r5
 80006c2:	7819      	ldrb	r1, [r3, #0]
 80006c4:	230f      	movs	r3, #15
 80006c6:	4398      	bics	r0, r3
    data_arr[0] = up|flags|current_status_backlight|PIN_EN;
 80006c8:	3b0b      	subs	r3, #11
 80006ca:	4331      	orrs	r1, r6
 80006cc:	001e      	movs	r6, r3
    uint8_t lo = (data << 4) & 0xF0;
 80006ce:	409d      	lsls	r5, r3
    data_arr[0] = up|flags|current_status_backlight|PIN_EN;
 80006d0:	aa03      	add	r2, sp, #12
 80006d2:	4308      	orrs	r0, r1
    data_arr[1] = up|flags|current_status_backlight;
 80006d4:	7050      	strb	r0, [r2, #1]
    data_arr[0] = up|flags|current_status_backlight|PIN_EN;
 80006d6:	4306      	orrs	r6, r0
    data_arr[2] = lo|flags|current_status_backlight|PIN_EN;
 80006d8:	0018      	movs	r0, r3
 80006da:	4329      	orrs	r1, r5
 80006dc:	b2c9      	uxtb	r1, r1
    data_arr[3] = lo|flags|current_status_backlight;
 80006de:	70d1      	strb	r1, [r2, #3]
    data_arr[2] = lo|flags|current_status_backlight|PIN_EN;
 80006e0:	4308      	orrs	r0, r1

    res = HAL_I2C_Master_Transmit(&LCD_I2C_PORT, lcd_addr, data_arr, sizeof(data_arr), HAL_MAX_DELAY);
 80006e2:	2101      	movs	r1, #1
 80006e4:	4249      	negs	r1, r1
    data_arr[0] = up|flags|current_status_backlight|PIN_EN;
 80006e6:	7016      	strb	r6, [r2, #0]
    data_arr[2] = lo|flags|current_status_backlight|PIN_EN;
 80006e8:	7090      	strb	r0, [r2, #2]
    res = HAL_I2C_Master_Transmit(&LCD_I2C_PORT, lcd_addr, data_arr, sizeof(data_arr), HAL_MAX_DELAY);
 80006ea:	9100      	str	r1, [sp, #0]
 80006ec:	0020      	movs	r0, r4
 80006ee:	317f      	adds	r1, #127	; 0x7f
 80006f0:	f001 fc2c 	bl	8001f4c <HAL_I2C_Master_Transmit>
    HAL_Delay(BUSY_CYCLE_TIME);
 80006f4:	2005      	movs	r0, #5
 80006f6:	f001 f8fd 	bl	80018f4 <HAL_Delay>
    return res;
}
 80006fa:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 80006fc:	200000a8 	.word	0x200000a8
 8000700:	20000090 	.word	0x20000090

08000704 <cursorShift.part.0>:
/*!	\details	"Cursor shift" shifts the cursor position to the right or left,
 * 				without writing or reading display data.
 * 				This function is used to correct or search the display.
 * 				In a 2-line display, the cursor moves to the second line
 * 				when it passes the 40th digit of the first line. */
void cursorShift(uint8_t direction)
 8000704:	b510      	push	{r4, lr}

	switch (direction)
	{
		/* To left */
		case LEFT  :
			sendInternal(LCD_I2C_ADDRESS_8B, 0x10u, 0);
 8000706:	2100      	movs	r1, #0
 8000708:	2010      	movs	r0, #16
 800070a:	f7ff ffcb 	bl	80006a4 <sendInternal.constprop.0.isra.0>
		default:
			/* Ignore this command */
			break;
	}
#endif
}
 800070e:	bd10      	pop	{r4, pc}

08000710 <lcdClrScr>:
{
 8000710:	b510      	push	{r4, lr}
	sendInternal(LCD_I2C_ADDRESS_8B, 0x01u, 0);
 8000712:	2100      	movs	r1, #0
 8000714:	2001      	movs	r0, #1
 8000716:	f7ff ffc5 	bl	80006a4 <sendInternal.constprop.0.isra.0>
}
 800071a:	bd10      	pop	{r4, pc}

0800071c <lcdReturn>:
{
 800071c:	b510      	push	{r4, lr}
	sendInternal(LCD_I2C_ADDRESS_8B, 0x02u, 0);
 800071e:	2100      	movs	r1, #0
 8000720:	2002      	movs	r0, #2
 8000722:	f7ff ffbf 	bl	80006a4 <sendInternal.constprop.0.isra.0>
}
 8000726:	bd10      	pop	{r4, pc}

08000728 <cursorShift>:
{
 8000728:	b510      	push	{r4, lr}
	switch (direction)
 800072a:	283c      	cmp	r0, #60	; 0x3c
 800072c:	d002      	beq.n	8000734 <cursorShift+0xc>
 800072e:	283e      	cmp	r0, #62	; 0x3e
 8000730:	d003      	beq.n	800073a <cursorShift+0x12>
}
 8000732:	bd10      	pop	{r4, pc}
 8000734:	f7ff ffe6 	bl	8000704 <cursorShift.part.0>
 8000738:	e7fb      	b.n	8000732 <cursorShift+0xa>
			sendInternal(LCD_I2C_ADDRESS_8B, 0x14u, 0);
 800073a:	2100      	movs	r1, #0
 800073c:	2014      	movs	r0, #20
 800073e:	f7ff ffb1 	bl	80006a4 <sendInternal.constprop.0.isra.0>
}
 8000742:	e7f6      	b.n	8000732 <cursorShift+0xa>

08000744 <lcdGoto>:
/*!	\details	Go to the specified (DDRAM/CGRAM) memory address.*/
void lcdGoto(uint8_t line, uint8_t address)
{
	/* Send a command to LCD. */
#ifdef USE_I2C_BUS
	switch (line)
 8000744:	3801      	subs	r0, #1
{
 8000746:	b510      	push	{r4, lr}
	switch (line)
 8000748:	2804      	cmp	r0, #4
 800074a:	d809      	bhi.n	8000760 <lcdGoto+0x1c>
 800074c:	f7ff fcdc 	bl	8000108 <__gnu_thumb1_case_uqi>
 8000750:	0d0b0903 	.word	0x0d0b0903
 8000754:	0f          	.byte	0x0f
 8000755:	00          	.byte	0x00
	{
		/* Set DDRAM address. */
		case LCD_1st_LINE: sendInternal(LCD_I2C_ADDRESS_8B, 0x80u | START_ADDRESS_1st_LINE | address, 0); break;
 8000756:	2080      	movs	r0, #128	; 0x80
		case LCD_2nd_LINE: sendInternal(LCD_I2C_ADDRESS_8B, 0x80u | START_ADDRESS_2nd_LINE | address, 0); break;
		case LCD_3rd_LINE: sendInternal(LCD_I2C_ADDRESS_8B, 0x80u | START_ADDRESS_3rd_LINE | address, 0); break;
		case LCD_4th_LINE: sendInternal(LCD_I2C_ADDRESS_8B, 0x80u | START_ADDRESS_4th_LINE | address, 0); break;

		/* Set CGRAM address. */
		case CGRAM : sendInternal(LCD_I2C_ADDRESS_8B, 0x40u | address, 0); break;
 8000758:	4308      	orrs	r0, r1
 800075a:	2100      	movs	r1, #0
 800075c:	f7ff ffa2 	bl	80006a4 <sendInternal.constprop.0.isra.0>
		default:
			/* Ignore this command */
			break;
	}
#endif
}
 8000760:	bd10      	pop	{r4, pc}
		case LCD_2nd_LINE: sendInternal(LCD_I2C_ADDRESS_8B, 0x80u | START_ADDRESS_2nd_LINE | address, 0); break;
 8000762:	20c0      	movs	r0, #192	; 0xc0
 8000764:	e7f8      	b.n	8000758 <lcdGoto+0x14>
		case LCD_3rd_LINE: sendInternal(LCD_I2C_ADDRESS_8B, 0x80u | START_ADDRESS_3rd_LINE | address, 0); break;
 8000766:	2090      	movs	r0, #144	; 0x90
 8000768:	e7f6      	b.n	8000758 <lcdGoto+0x14>
		case LCD_4th_LINE: sendInternal(LCD_I2C_ADDRESS_8B, 0x80u | START_ADDRESS_4th_LINE | address, 0); break;
 800076a:	20d0      	movs	r0, #208	; 0xd0
 800076c:	e7f4      	b.n	8000758 <lcdGoto+0x14>
		case CGRAM : sendInternal(LCD_I2C_ADDRESS_8B, 0x40u | address, 0); break;
 800076e:	2040      	movs	r0, #64	; 0x40
 8000770:	e7f2      	b.n	8000758 <lcdGoto+0x14>

08000772 <lcdSetMode>:

/*!	\details	Change LCD settings. */
void lcdSetMode(uint8_t param)
{
 8000772:	b510      	push	{r4, lr}
	/* Send a command to LCD. */
#ifdef USE_I2C_BUS
	sendInternal(LCD_I2C_ADDRESS_8B, param, 0);
 8000774:	2100      	movs	r1, #0
 8000776:	f7ff ff95 	bl	80006a4 <sendInternal.constprop.0.isra.0>
#else
	CLR(LCD_RS_OUT, LCD_RS);
	lcdWrite(param);
#endif
}
 800077a:	bd10      	pop	{r4, pc}

0800077c <lcdPutc>:

/*!	\details	Write a single char to the current memory space (DDRAM/CGRAM). */
void lcdPutc(uint8_t data)
{
 800077c:	b510      	push	{r4, lr}
	/* Send data to LCD. */
#ifdef USE_I2C_BUS
	sendInternal(LCD_I2C_ADDRESS_8B, data, PIN_RS);
 800077e:	2101      	movs	r1, #1
 8000780:	f7ff ff90 	bl	80006a4 <sendInternal.constprop.0.isra.0>
	 * After execution of the CGRAM/DDRAM data write/read instruction, the RAM address counter is incremented
	 * or decremented by 1. The RAM address counter is updated after the busy flag turns off.
	 * tADD is the time elapsed after the busy flag turns off until the address counter is updated. */
	lcd10usDelay(AC_UPDATE_TIME);	/* Update RAM address counter delay. */
#endif
}
 8000784:	bd10      	pop	{r4, pc}

08000786 <lcdPuts>:

/*!	\details	Writes ANSI-C string to LCD (DDRAM memory space). */
//void lcdPuts(const uint8_t *str)
void lcdPuts(const char *str)
{
 8000786:	b510      	push	{r4, lr}
 8000788:	0004      	movs	r4, r0
	/* Send a ANSI-C string to LCD. */
	while ('\0' != *str)
 800078a:	7820      	ldrb	r0, [r4, #0]
 800078c:	2800      	cmp	r0, #0
 800078e:	d100      	bne.n	8000792 <lcdPuts+0xc>
			lcdPutc(*str);
		}
		/* Get the next symbol. */
		str++;
	}
}
 8000790:	bd10      	pop	{r4, pc}
		if(('\n' == *str))
 8000792:	280a      	cmp	r0, #10
 8000794:	d105      	bne.n	80007a2 <lcdPuts+0x1c>
			lcdGoto(LCD_2nd_LINE, 0u);
 8000796:	2100      	movs	r1, #0
 8000798:	3808      	subs	r0, #8
 800079a:	f7ff ffd3 	bl	8000744 <lcdGoto>
		str++;
 800079e:	3401      	adds	r4, #1
 80007a0:	e7f3      	b.n	800078a <lcdPuts+0x4>
		else if(('\r' == *str))
 80007a2:	280d      	cmp	r0, #13
 80007a4:	d102      	bne.n	80007ac <lcdPuts+0x26>
			lcdReturn();
 80007a6:	f7ff ffb9 	bl	800071c <lcdReturn>
 80007aa:	e7f8      	b.n	800079e <lcdPuts+0x18>
		else if(('\t' == *str))
 80007ac:	2809      	cmp	r0, #9
 80007ae:	d10c      	bne.n	80007ca <lcdPuts+0x44>
				cursorShift(RIGHT);
 80007b0:	3035      	adds	r0, #53	; 0x35
 80007b2:	f7ff ffb9 	bl	8000728 <cursorShift>
 80007b6:	203e      	movs	r0, #62	; 0x3e
 80007b8:	f7ff ffb6 	bl	8000728 <cursorShift>
 80007bc:	203e      	movs	r0, #62	; 0x3e
 80007be:	f7ff ffb3 	bl	8000728 <cursorShift>
 80007c2:	203e      	movs	r0, #62	; 0x3e
 80007c4:	f7ff ffb0 	bl	8000728 <cursorShift>
			for(i=0u; i<TAB_SPACE; i++)
 80007c8:	e7e9      	b.n	800079e <lcdPuts+0x18>
			lcdPutc(*str);
 80007ca:	f7ff ffd7 	bl	800077c <lcdPutc>
 80007ce:	e7e6      	b.n	800079e <lcdPuts+0x18>

080007d0 <lcdItos>:
	return retval;
}

/*!	\brief	Display a integer number: +/- 2147483647. */
void lcdItos(int32_t value)
{
 80007d0:	b570      	push	{r4, r5, r6, lr}
 80007d2:	1e05      	subs	r5, r0, #0
	int32_t i;

	if (value < 0)
 80007d4:	da03      	bge.n	80007de <lcdItos+0xe>
	{
		lcdPutc('-');
 80007d6:	202d      	movs	r0, #45	; 0x2d
 80007d8:	f7ff ffd0 	bl	800077c <lcdPutc>
		value = -value;
 80007dc:	426d      	negs	r5, r5
	}

	i = 1;
 80007de:	2401      	movs	r4, #1
	while ((value / i) > 9)
	{
		i *= 10;
 80007e0:	260a      	movs	r6, #10
	while ((value / i) > 9)
 80007e2:	0021      	movs	r1, r4
 80007e4:	0028      	movs	r0, r5
 80007e6:	f7ff fd2d 	bl	8000244 <__divsi3>
 80007ea:	2809      	cmp	r0, #9
 80007ec:	dc0c      	bgt.n	8000808 <lcdItos+0x38>
	}

	lcdPutc(value/i + '0');	/* Display at least one symbol */
 80007ee:	3030      	adds	r0, #48	; 0x30
 80007f0:	b2c0      	uxtb	r0, r0
 80007f2:	f7ff ffc3 	bl	800077c <lcdPutc>
	i /= 10;
 80007f6:	0020      	movs	r0, r4
 80007f8:	210a      	movs	r1, #10
 80007fa:	f7ff fd23 	bl	8000244 <__divsi3>

	while (i > 0)
	{
		lcdPutc('0' + ((value % (i*10)) / i));
 80007fe:	260a      	movs	r6, #10
	i /= 10;
 8000800:	0004      	movs	r4, r0
	while (i > 0)
 8000802:	2c00      	cmp	r4, #0
 8000804:	d102      	bne.n	800080c <lcdItos+0x3c>
		i /= 10;
	}
}
 8000806:	bd70      	pop	{r4, r5, r6, pc}
		i *= 10;
 8000808:	4374      	muls	r4, r6
 800080a:	e7ea      	b.n	80007e2 <lcdItos+0x12>
		lcdPutc('0' + ((value % (i*10)) / i));
 800080c:	0031      	movs	r1, r6
 800080e:	0028      	movs	r0, r5
 8000810:	4361      	muls	r1, r4
 8000812:	f7ff fdfd 	bl	8000410 <__aeabi_idivmod>
 8000816:	0008      	movs	r0, r1
 8000818:	0021      	movs	r1, r4
 800081a:	f7ff fd13 	bl	8000244 <__divsi3>
 800081e:	3030      	adds	r0, #48	; 0x30
 8000820:	b2c0      	uxtb	r0, r0
 8000822:	f7ff ffab 	bl	800077c <lcdPutc>
		i /= 10;
 8000826:	0020      	movs	r0, r4
 8000828:	210a      	movs	r1, #10
 800082a:	f7ff fd0b 	bl	8000244 <__divsi3>
 800082e:	0004      	movs	r4, r0
 8000830:	e7e7      	b.n	8000802 <lcdItos+0x32>

08000832 <lcdInit>:
#endif

/*!	\brief	Initialize the LCD.
 * 	\note	This library use the 4-bit interface. */
void lcdInit(void)
{
 8000832:	b510      	push	{r4, lr}
	HAL_Delay(1);
	lcdConfig(0x02);
	HAL_Delay(1);
#endif
#endif
	lcdConfig(DEFAULT_DISPLAY_CONFIG);
 8000834:	2028      	movs	r0, #40	; 0x28
 8000836:	f7ff ff9c 	bl	8000772 <lcdSetMode>
	lcdSetMode(DEFAULT_VIEW_MODE);
 800083a:	200c      	movs	r0, #12
 800083c:	f7ff ff99 	bl	8000772 <lcdSetMode>
	lcdSetMode(DEFAULT_ENTRY_MODE);
 8000840:	2006      	movs	r0, #6
 8000842:	f7ff ff96 	bl	8000772 <lcdSetMode>
	lcdClrScr();
 8000846:	f7ff ff63 	bl	8000710 <lcdClrScr>
	lcdReturn();
 800084a:	f7ff ff67 	bl	800071c <lcdReturn>
	#if (USE_PROGRESS_BAR)
		lcdInitBar();
	#endif
}
 800084e:	bd10      	pop	{r4, pc}

08000850 <lcdBackLightOn>:

#ifdef USE_I2C_BUS
void lcdBackLightOn(void)
{
	current_status_backlight = (1 << 3);
 8000850:	2208      	movs	r2, #8
{
 8000852:	b510      	push	{r4, lr}
	current_status_backlight = (1 << 3);
 8000854:	4b03      	ldr	r3, [pc, #12]	; (8000864 <lcdBackLightOn+0x14>)
	sendInternal(LCD_I2C_ADDRESS_8B, 0x0Fu, 0);
 8000856:	2100      	movs	r1, #0
 8000858:	200f      	movs	r0, #15
	current_status_backlight = (1 << 3);
 800085a:	701a      	strb	r2, [r3, #0]
	sendInternal(LCD_I2C_ADDRESS_8B, 0x0Fu, 0);
 800085c:	f7ff ff22 	bl	80006a4 <sendInternal.constprop.0.isra.0>
}
 8000860:	bd10      	pop	{r4, pc}
 8000862:	46c0      	nop			; (mov r8, r8)
 8000864:	20000090 	.word	0x20000090

08000868 <LL_IOP_GRP1_EnableClock>:
  * @retval None
*/
__STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->IOPENR, Periphs);
 8000868:	4b05      	ldr	r3, [pc, #20]	; (8000880 <LL_IOP_GRP1_EnableClock+0x18>)
{
 800086a:	b082      	sub	sp, #8
  SET_BIT(RCC->IOPENR, Periphs);
 800086c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800086e:	4302      	orrs	r2, r0
 8000870:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 8000872:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000874:	4018      	ands	r0, r3
 8000876:	9001      	str	r0, [sp, #4]
  (void)tmpreg;
 8000878:	9b01      	ldr	r3, [sp, #4]
}
 800087a:	b002      	add	sp, #8
 800087c:	4770      	bx	lr
 800087e:	46c0      	nop			; (mov r8, r8)
 8000880:	40021000 	.word	0x40021000

08000884 <ShowWarning>:
	gradus = man_azimuth = 0;
	WriteToEEPROM(EEPROM_ADDRESS_START, gradus);
    WriteToEEPROM(EEPROM_ADDRESS_START+sizeof(gradus), man_azimuth);
}

void ShowWarning() {
 8000884:	b510      	push	{r4, lr}
	lcdClrScr();
 8000886:	f7ff ff43 	bl	8000710 <lcdClrScr>
	lcdGoto(LCD_1st_LINE, 1);
 800088a:	2101      	movs	r1, #1
 800088c:	0008      	movs	r0, r1
 800088e:	f7ff ff59 	bl	8000744 <lcdGoto>
	lcdPuts("TURN ON 12VDC!!");
 8000892:	4804      	ldr	r0, [pc, #16]	; (80008a4 <ShowWarning+0x20>)
 8000894:	f7ff ff77 	bl	8000786 <lcdPuts>
	lcdGoto(LCD_2nd_LINE, 16);
 8000898:	2110      	movs	r1, #16
 800089a:	2002      	movs	r0, #2
 800089c:	f7ff ff52 	bl	8000744 <lcdGoto>
}
 80008a0:	bd10      	pop	{r4, pc}
 80008a2:	46c0      	nop			; (mov r8, r8)
 80008a4:	08003768 	.word	0x08003768

080008a8 <ConvertCharToGradus>:
	lcdGoto(LCD_1st_LINE, 16);
	ConvertGradusToChar(gradus);

}

uint32_t ConvertCharToGradus() {
 80008a8:	b510      	push	{r4, lr}
	uint8_t hund = 0;
	uint8_t dec = 0;
	uint8_t one = 0;
	uint8_t ostatok = 0;
	uint32_t rezult = 0;
	hund = str_rx[1] - 48;
 80008aa:	4b0e      	ldr	r3, [pc, #56]	; (80008e4 <ConvertCharToGradus+0x3c>)
	dec = str_rx[2] - 48;
	one = str_rx[3] - 48;
	rezult = hund * 100 + dec * 10 + one;
 80008ac:	220a      	movs	r2, #10
	hund = str_rx[1] - 48;
 80008ae:	785c      	ldrb	r4, [r3, #1]
	ostatok = rezult % 3;
 80008b0:	2103      	movs	r1, #3
	hund = str_rx[1] - 48;
 80008b2:	3c30      	subs	r4, #48	; 0x30
	rezult = hund * 100 + dec * 10 + one;
 80008b4:	b2e0      	uxtb	r0, r4
 80008b6:	2464      	movs	r4, #100	; 0x64
 80008b8:	4344      	muls	r4, r0
	dec = str_rx[2] - 48;
 80008ba:	7898      	ldrb	r0, [r3, #2]
 80008bc:	3830      	subs	r0, #48	; 0x30
	rezult = hund * 100 + dec * 10 + one;
 80008be:	b2c0      	uxtb	r0, r0
 80008c0:	4350      	muls	r0, r2
	str_rx[0] = 0;
 80008c2:	2200      	movs	r2, #0
	rezult = hund * 100 + dec * 10 + one;
 80008c4:	1824      	adds	r4, r4, r0
	one = str_rx[3] - 48;
 80008c6:	78d8      	ldrb	r0, [r3, #3]
	str_rx[0] = 0;
 80008c8:	701a      	strb	r2, [r3, #0]
	one = str_rx[3] - 48;
 80008ca:	3830      	subs	r0, #48	; 0x30
	rezult = hund * 100 + dec * 10 + one;
 80008cc:	b2c0      	uxtb	r0, r0
 80008ce:	1824      	adds	r4, r4, r0
	ostatok = rezult % 3;
 80008d0:	0020      	movs	r0, r4
	str_rx[1] = 0;
 80008d2:	705a      	strb	r2, [r3, #1]
	str_rx[2] = 0;
 80008d4:	709a      	strb	r2, [r3, #2]
	str_rx[3] = 0;
 80008d6:	70da      	strb	r2, [r3, #3]
	str_rx[4] = 0;
 80008d8:	711a      	strb	r2, [r3, #4]
	str_rx[5] = 0;
 80008da:	715a      	strb	r2, [r3, #5]
	ostatok = rezult % 3;
 80008dc:	f7ff fcae 	bl	800023c <__aeabi_uidivmod>
	if (ostatok == 0)
		return rezult;
	else
		return (rezult - ostatok);
 80008e0:	1a60      	subs	r0, r4, r1

}
 80008e2:	bd10      	pop	{r4, pc}
 80008e4:	20000100 	.word	0x20000100

080008e8 <ConvertGradusToChar>:
	}

}

void ConvertGradusToChar (uint32_t grad)
{
 80008e8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80008ea:	0005      	movs	r5, r0
	uint8_t hund=0;
	uint8_t dec=0;
	uint8_t one=0;
	if (grad >= 100)
 80008ec:	2863      	cmp	r0, #99	; 0x63
 80008ee:	d924      	bls.n	800093a <ConvertGradusToChar+0x52>
		{
		hund = grad / 100;
 80008f0:	2164      	movs	r1, #100	; 0x64
 80008f2:	f7ff fc1d 	bl	8000130 <__udivsi3>
		dec = (grad % 100)/10;
 80008f6:	2164      	movs	r1, #100	; 0x64
		hund = grad / 100;
 80008f8:	b2c6      	uxtb	r6, r0
		dec = (grad % 100)/10;
 80008fa:	0028      	movs	r0, r5
 80008fc:	f7ff fc9e 	bl	800023c <__aeabi_uidivmod>
 8000900:	0008      	movs	r0, r1
 8000902:	210a      	movs	r1, #10
 8000904:	f7ff fc14 	bl	8000130 <__udivsi3>
 8000908:	b2c4      	uxtb	r4, r0
 800090a:	0021      	movs	r1, r4
	{
		hund = 0;
		dec = 0;
		one = grad;
	}
	if ((grad>9)&&(grad<100))
 800090c:	002b      	movs	r3, r5
 800090e:	3b0a      	subs	r3, #10
 8000910:	2b59      	cmp	r3, #89	; 0x59
 8000912:	d80a      	bhi.n	800092a <ConvertGradusToChar+0x42>
	{
		hund = 0;
		dec = grad/10;
 8000914:	210a      	movs	r1, #10
 8000916:	0028      	movs	r0, r5
 8000918:	f7ff fc0a 	bl	8000130 <__udivsi3>
		one = grad % 10;
 800091c:	210a      	movs	r1, #10
		dec = grad/10;
 800091e:	b2c4      	uxtb	r4, r0
		one = grad % 10;
 8000920:	0028      	movs	r0, r5
 8000922:	f7ff fc8b 	bl	800023c <__aeabi_uidivmod>
		hund = 0;
 8000926:	2600      	movs	r6, #0
		one = grad % 10;
 8000928:	b2c9      	uxtb	r1, r1
	}
	sprintf (str_tx, "+0%d%d%d\r\n",hund,dec,one);
 800092a:	0032      	movs	r2, r6
 800092c:	9100      	str	r1, [sp, #0]
 800092e:	0023      	movs	r3, r4
 8000930:	4907      	ldr	r1, [pc, #28]	; (8000950 <ConvertGradusToChar+0x68>)
 8000932:	4808      	ldr	r0, [pc, #32]	; (8000954 <ConvertGradusToChar+0x6c>)
 8000934:	f002 faa2 	bl	8002e7c <siprintf>
}
 8000938:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
	if (grad < 10)
 800093a:	2809      	cmp	r0, #9
 800093c:	d803      	bhi.n	8000946 <ConvertGradusToChar+0x5e>
		dec = 0;
 800093e:	2400      	movs	r4, #0
		one = grad;
 8000940:	b2c1      	uxtb	r1, r0
		hund = 0;
 8000942:	0026      	movs	r6, r4
 8000944:	e7e2      	b.n	800090c <ConvertGradusToChar+0x24>
	uint8_t dec=0;
 8000946:	2100      	movs	r1, #0
 8000948:	000c      	movs	r4, r1
	uint8_t hund=0;
 800094a:	000e      	movs	r6, r1
 800094c:	e7de      	b.n	800090c <ConvertGradusToChar+0x24>
 800094e:	46c0      	nop			; (mov r8, r8)
 8000950:	08003778 	.word	0x08003778
 8000954:	2000010a 	.word	0x2000010a

08000958 <RotateFromUSART>:
 {
 8000958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	man_azimuth = grad;
 800095a:	4f5e      	ldr	r7, [pc, #376]	; (8000ad4 <RotateFromUSART+0x17c>)
 800095c:	6038      	str	r0, [r7, #0]
	if (man_azimuth >= 180) dir_azimuth = man_azimuth - 360; else dir_azimuth = man_azimuth;
 800095e:	28b3      	cmp	r0, #179	; 0xb3
 8000960:	d901      	bls.n	8000966 <RotateFromUSART+0xe>
 8000962:	3869      	subs	r0, #105	; 0x69
 8000964:	38ff      	subs	r0, #255	; 0xff
    if (gradus >= 180) dir_gradus = gradus - 360; else dir_gradus = gradus;
 8000966:	4c5c      	ldr	r4, [pc, #368]	; (8000ad8 <RotateFromUSART+0x180>)
 8000968:	4d5c      	ldr	r5, [pc, #368]	; (8000adc <RotateFromUSART+0x184>)
 800096a:	6823      	ldr	r3, [r4, #0]
 800096c:	6028      	str	r0, [r5, #0]
 800096e:	2bb3      	cmp	r3, #179	; 0xb3
 8000970:	d901      	bls.n	8000976 <RotateFromUSART+0x1e>
 8000972:	3b69      	subs	r3, #105	; 0x69
 8000974:	3bff      	subs	r3, #255	; 0xff
 8000976:	4e5a      	ldr	r6, [pc, #360]	; (8000ae0 <RotateFromUSART+0x188>)
    lcdGoto(LCD_2nd_LINE,13);
 8000978:	210d      	movs	r1, #13
 800097a:	2002      	movs	r0, #2
 800097c:	6033      	str	r3, [r6, #0]
 800097e:	f7ff fee1 	bl	8000744 <lcdGoto>
    lcdPuts("   ");
 8000982:	4858      	ldr	r0, [pc, #352]	; (8000ae4 <RotateFromUSART+0x18c>)
 8000984:	f7ff feff 	bl	8000786 <lcdPuts>
    lcdGoto(LCD_2nd_LINE,13);
 8000988:	210d      	movs	r1, #13
 800098a:	2002      	movs	r0, #2
 800098c:	f7ff feda 	bl	8000744 <lcdGoto>
    lcdItos(man_azimuth);
 8000990:	6838      	ldr	r0, [r7, #0]
 8000992:	f7ff ff1d 	bl	80007d0 <lcdItos>
    lcdGoto(LCD_2nd_LINE,16);
 8000996:	2110      	movs	r1, #16
 8000998:	2002      	movs	r0, #2
 800099a:	f7ff fed3 	bl	8000744 <lcdGoto>
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
{
  WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
 800099e:	2380      	movs	r3, #128	; 0x80
 80009a0:	2202      	movs	r2, #2
 80009a2:	05db      	lsls	r3, r3, #23
 80009a4:	4252      	negs	r2, r2
 80009a6:	611a      	str	r2, [r3, #16]
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 80009a8:	6819      	ldr	r1, [r3, #0]
 80009aa:	3203      	adds	r2, #3
 80009ac:	4311      	orrs	r1, r2
 80009ae:	6019      	str	r1, [r3, #0]
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableIT_UPDATE(TIM_TypeDef *TIMx)
{
  SET_BIT(TIMx->DIER, TIM_DIER_UIE);
 80009b0:	68d9      	ldr	r1, [r3, #12]
 80009b2:	430a      	orrs	r2, r1
 80009b4:	60da      	str	r2, [r3, #12]
	if (dir_azimuth > dir_gradus) {
 80009b6:	682b      	ldr	r3, [r5, #0]
 80009b8:	6832      	ldr	r2, [r6, #0]
 80009ba:	4293      	cmp	r3, r2
 80009bc:	dd54      	ble.n	8000a68 <RotateFromUSART+0x110>
		time_on_cw = HAL_GetTick();
 80009be:	f000 ff93 	bl	80018e8 <HAL_GetTick>
 80009c2:	4f49      	ldr	r7, [pc, #292]	; (8000ae8 <RotateFromUSART+0x190>)
 80009c4:	6038      	str	r0, [r7, #0]
		while (dir_gradus < dir_azimuth) {
 80009c6:	6833      	ldr	r3, [r6, #0]
 80009c8:	682a      	ldr	r2, [r5, #0]
 80009ca:	4293      	cmp	r3, r2
 80009cc:	da27      	bge.n	8000a1e <RotateFromUSART+0xc6>
			lcdGoto(LCD_1st_LINE, 13);
 80009ce:	210d      	movs	r1, #13
 80009d0:	2001      	movs	r0, #1
 80009d2:	f7ff feb7 	bl	8000744 <lcdGoto>
			lcdPuts("   ");
 80009d6:	4843      	ldr	r0, [pc, #268]	; (8000ae4 <RotateFromUSART+0x18c>)
 80009d8:	f7ff fed5 	bl	8000786 <lcdPuts>
			lcdGoto(LCD_1st_LINE, 13);
 80009dc:	210d      	movs	r1, #13
 80009de:	2001      	movs	r0, #1
 80009e0:	f7ff feb0 	bl	8000744 <lcdGoto>
			lcdItos(gradus);
 80009e4:	6820      	ldr	r0, [r4, #0]
 80009e6:	f7ff fef3 	bl	80007d0 <lcdItos>
			lcdGoto(LCD_1st_LINE, 16);
 80009ea:	2110      	movs	r1, #16
 80009ec:	2001      	movs	r0, #1
 80009ee:	f7ff fea9 	bl	8000744 <lcdGoto>
  *         @arg @ref LL_GPIO_PIN_ALL
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
  WRITE_REG(GPIOx->BRR, PinMask);
 80009f2:	22a0      	movs	r2, #160	; 0xa0
 80009f4:	2302      	movs	r3, #2
 80009f6:	05d2      	lsls	r2, r2, #23
 80009f8:	6293      	str	r3, [r2, #40]	; 0x28
  WRITE_REG(GPIOx->BSRR, PinMask);
 80009fa:	333e      	adds	r3, #62	; 0x3e
 80009fc:	6193      	str	r3, [r2, #24]
			LL_mDelay(50);
 80009fe:	2032      	movs	r0, #50	; 0x32
 8000a00:	f002 f9f4 	bl	8002dec <LL_mDelay>
			if ((HAL_GetTick() - time_on_cw) > 10000)
 8000a04:	f000 ff70 	bl	80018e8 <HAL_GetTick>
 8000a08:	683b      	ldr	r3, [r7, #0]
 8000a0a:	1ac0      	subs	r0, r0, r3
 8000a0c:	4b37      	ldr	r3, [pc, #220]	; (8000aec <RotateFromUSART+0x194>)
 8000a0e:	4298      	cmp	r0, r3
 8000a10:	d805      	bhi.n	8000a1e <RotateFromUSART+0xc6>
			if (flag_stop==1) {flag_stop =0; break;}
 8000a12:	4b37      	ldr	r3, [pc, #220]	; (8000af0 <RotateFromUSART+0x198>)
 8000a14:	781a      	ldrb	r2, [r3, #0]
 8000a16:	2a01      	cmp	r2, #1
 8000a18:	d1d5      	bne.n	80009c6 <RotateFromUSART+0x6e>
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	701a      	strb	r2, [r3, #0]
 8000a1e:	23a0      	movs	r3, #160	; 0xa0
 8000a20:	2202      	movs	r2, #2
 8000a22:	05db      	lsls	r3, r3, #23
 8000a24:	619a      	str	r2, [r3, #24]
  WRITE_REG(GPIOx->BRR, PinMask);
 8000a26:	323e      	adds	r2, #62	; 0x3e
 8000a28:	629a      	str	r2, [r3, #40]	; 0x28
  CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 8000a2a:	2380      	movs	r3, #128	; 0x80
 8000a2c:	2101      	movs	r1, #1
 8000a2e:	05db      	lsls	r3, r3, #23
 8000a30:	681a      	ldr	r2, [r3, #0]
	lcdGoto(LCD_1st_LINE, 13);
 8000a32:	2001      	movs	r0, #1
 8000a34:	438a      	bics	r2, r1
 8000a36:	601a      	str	r2, [r3, #0]
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_DisableIT_UPDATE(TIM_TypeDef *TIMx)
{
  CLEAR_BIT(TIMx->DIER, TIM_DIER_UIE);
 8000a38:	68da      	ldr	r2, [r3, #12]
 8000a3a:	438a      	bics	r2, r1
 8000a3c:	60da      	str	r2, [r3, #12]
 8000a3e:	210d      	movs	r1, #13
 8000a40:	f7ff fe80 	bl	8000744 <lcdGoto>
	lcdPuts("   ");
 8000a44:	4827      	ldr	r0, [pc, #156]	; (8000ae4 <RotateFromUSART+0x18c>)
 8000a46:	f7ff fe9e 	bl	8000786 <lcdPuts>
	lcdGoto(LCD_1st_LINE, 13);
 8000a4a:	210d      	movs	r1, #13
 8000a4c:	2001      	movs	r0, #1
 8000a4e:	f7ff fe79 	bl	8000744 <lcdGoto>
	lcdItos(gradus);
 8000a52:	6820      	ldr	r0, [r4, #0]
 8000a54:	f7ff febc 	bl	80007d0 <lcdItos>
	lcdGoto(LCD_1st_LINE, 16);
 8000a58:	2110      	movs	r1, #16
 8000a5a:	2001      	movs	r0, #1
 8000a5c:	f7ff fe72 	bl	8000744 <lcdGoto>
	ConvertGradusToChar(gradus);
 8000a60:	6820      	ldr	r0, [r4, #0]
 8000a62:	f7ff ff41 	bl	80008e8 <ConvertGradusToChar>
}
 8000a66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		time_on_ccw = HAL_GetTick();
 8000a68:	f000 ff3e 	bl	80018e8 <HAL_GetTick>
 8000a6c:	4f21      	ldr	r7, [pc, #132]	; (8000af4 <RotateFromUSART+0x19c>)
 8000a6e:	6038      	str	r0, [r7, #0]
		while (dir_gradus > dir_azimuth) {
 8000a70:	6833      	ldr	r3, [r6, #0]
 8000a72:	682a      	ldr	r2, [r5, #0]
 8000a74:	4293      	cmp	r3, r2
 8000a76:	dd27      	ble.n	8000ac8 <RotateFromUSART+0x170>
			lcdGoto(LCD_1st_LINE, 13);
 8000a78:	210d      	movs	r1, #13
 8000a7a:	2001      	movs	r0, #1
 8000a7c:	f7ff fe62 	bl	8000744 <lcdGoto>
			lcdPuts("   ");
 8000a80:	4818      	ldr	r0, [pc, #96]	; (8000ae4 <RotateFromUSART+0x18c>)
 8000a82:	f7ff fe80 	bl	8000786 <lcdPuts>
			lcdGoto(LCD_1st_LINE, 13);
 8000a86:	210d      	movs	r1, #13
 8000a88:	2001      	movs	r0, #1
 8000a8a:	f7ff fe5b 	bl	8000744 <lcdGoto>
			lcdItos(gradus);
 8000a8e:	6820      	ldr	r0, [r4, #0]
 8000a90:	f7ff fe9e 	bl	80007d0 <lcdItos>
			lcdGoto(LCD_1st_LINE, 16);
 8000a94:	2110      	movs	r1, #16
 8000a96:	2001      	movs	r0, #1
 8000a98:	f7ff fe54 	bl	8000744 <lcdGoto>
 8000a9c:	22a0      	movs	r2, #160	; 0xa0
 8000a9e:	2302      	movs	r3, #2
 8000aa0:	05d2      	lsls	r2, r2, #23
 8000aa2:	6293      	str	r3, [r2, #40]	; 0x28
  WRITE_REG(GPIOx->BSRR, PinMask);
 8000aa4:	337e      	adds	r3, #126	; 0x7e
 8000aa6:	6193      	str	r3, [r2, #24]
			LL_mDelay(50);
 8000aa8:	2032      	movs	r0, #50	; 0x32
 8000aaa:	f002 f99f 	bl	8002dec <LL_mDelay>
			if ((HAL_GetTick() - time_on_ccw) > 10000)
 8000aae:	f000 ff1b 	bl	80018e8 <HAL_GetTick>
 8000ab2:	683b      	ldr	r3, [r7, #0]
 8000ab4:	1ac0      	subs	r0, r0, r3
 8000ab6:	4b0d      	ldr	r3, [pc, #52]	; (8000aec <RotateFromUSART+0x194>)
 8000ab8:	4298      	cmp	r0, r3
 8000aba:	d805      	bhi.n	8000ac8 <RotateFromUSART+0x170>
			if (flag_stop==1) {flag_stop =0; break;}
 8000abc:	4b0c      	ldr	r3, [pc, #48]	; (8000af0 <RotateFromUSART+0x198>)
 8000abe:	781a      	ldrb	r2, [r3, #0]
 8000ac0:	2a01      	cmp	r2, #1
 8000ac2:	d1d5      	bne.n	8000a70 <RotateFromUSART+0x118>
 8000ac4:	2200      	movs	r2, #0
 8000ac6:	701a      	strb	r2, [r3, #0]
 8000ac8:	23a0      	movs	r3, #160	; 0xa0
 8000aca:	2202      	movs	r2, #2
 8000acc:	05db      	lsls	r3, r3, #23
 8000ace:	619a      	str	r2, [r3, #24]
  WRITE_REG(GPIOx->BRR, PinMask);
 8000ad0:	327e      	adds	r2, #126	; 0x7e
 8000ad2:	e7a9      	b.n	8000a28 <RotateFromUSART+0xd0>
 8000ad4:	200000fc 	.word	0x200000fc
 8000ad8:	200000a4 	.word	0x200000a4
 8000adc:	20000094 	.word	0x20000094
 8000ae0:	20000098 	.word	0x20000098
 8000ae4:	08003783 	.word	0x08003783
 8000ae8:	20000124 	.word	0x20000124
 8000aec:	00002710 	.word	0x00002710
 8000af0:	200000a0 	.word	0x200000a0
 8000af4:	20000120 	.word	0x20000120

08000af8 <USART2_Send>:

void USART2_Send (char chr){
	while (!(USART2->ISR & USART_ISR_TC));
 8000af8:	2240      	movs	r2, #64	; 0x40
 8000afa:	4b03      	ldr	r3, [pc, #12]	; (8000b08 <USART2_Send+0x10>)
 8000afc:	69d9      	ldr	r1, [r3, #28]
 8000afe:	4211      	tst	r1, r2
 8000b00:	d0fc      	beq.n	8000afc <USART2_Send+0x4>
	USART2->TDR = chr;
 8000b02:	6298      	str	r0, [r3, #40]	; 0x28
}
 8000b04:	4770      	bx	lr
 8000b06:	46c0      	nop			; (mov r8, r8)
 8000b08:	40004400 	.word	0x40004400

08000b0c <USART2_Send_String>:

void USART2_Send_String (char* str){
 8000b0c:	b570      	push	{r4, r5, r6, lr}
 8000b0e:	0005      	movs	r5, r0
	uint8_t i = 0;
 8000b10:	2400      	movs	r4, #0
	while(str[i])
 8000b12:	5d28      	ldrb	r0, [r5, r4]
 8000b14:	2800      	cmp	r0, #0
 8000b16:	d100      	bne.n	8000b1a <USART2_Send_String+0xe>
	USART2_Send (str[i++]);
}
 8000b18:	bd70      	pop	{r4, r5, r6, pc}
	USART2_Send (str[i++]);
 8000b1a:	3401      	adds	r4, #1
 8000b1c:	b2e4      	uxtb	r4, r4
 8000b1e:	f7ff ffeb 	bl	8000af8 <USART2_Send>
 8000b22:	e7f6      	b.n	8000b12 <USART2_Send_String+0x6>

08000b24 <CheckUSART>:
{
 8000b24:	b510      	push	{r4, lr}
	if (flag_status == 1)
 8000b26:	4b0f      	ldr	r3, [pc, #60]	; (8000b64 <CheckUSART+0x40>)
 8000b28:	781a      	ldrb	r2, [r3, #0]
 8000b2a:	2a01      	cmp	r2, #1
 8000b2c:	d10f      	bne.n	8000b4e <CheckUSART+0x2a>
		flag_status=0;
 8000b2e:	2400      	movs	r4, #0
 8000b30:	701c      	strb	r4, [r3, #0]
		ConvertGradusToChar(gradus);
 8000b32:	4b0d      	ldr	r3, [pc, #52]	; (8000b68 <CheckUSART+0x44>)
 8000b34:	6818      	ldr	r0, [r3, #0]
 8000b36:	f7ff fed7 	bl	80008e8 <ConvertGradusToChar>
		str_rx[0]=0;
 8000b3a:	4b0c      	ldr	r3, [pc, #48]	; (8000b6c <CheckUSART+0x48>)
		USART2_Send_String(str_tx);
 8000b3c:	480c      	ldr	r0, [pc, #48]	; (8000b70 <CheckUSART+0x4c>)
		str_rx[0]=0;
 8000b3e:	701c      	strb	r4, [r3, #0]
		str_rx[1]=0;
 8000b40:	705c      	strb	r4, [r3, #1]
		str_rx[2]=0;
 8000b42:	709c      	strb	r4, [r3, #2]
		str_rx[3]=0;
 8000b44:	70dc      	strb	r4, [r3, #3]
		str_rx[4]=0;
 8000b46:	711c      	strb	r4, [r3, #4]
		str_rx[5]=0;
 8000b48:	715c      	strb	r4, [r3, #5]
		USART2_Send_String(str_tx);
 8000b4a:	f7ff ffdf 	bl	8000b0c <USART2_Send_String>
	if (flag_move == 1)
 8000b4e:	4b09      	ldr	r3, [pc, #36]	; (8000b74 <CheckUSART+0x50>)
 8000b50:	781a      	ldrb	r2, [r3, #0]
 8000b52:	2a01      	cmp	r2, #1
 8000b54:	d105      	bne.n	8000b62 <CheckUSART+0x3e>
		flag_move = 0;
 8000b56:	2200      	movs	r2, #0
 8000b58:	701a      	strb	r2, [r3, #0]
		RotateFromUSART(ConvertCharToGradus());
 8000b5a:	f7ff fea5 	bl	80008a8 <ConvertCharToGradus>
 8000b5e:	f7ff fefb 	bl	8000958 <RotateFromUSART>
}
 8000b62:	bd10      	pop	{r4, pc}
 8000b64:	2000009f 	.word	0x2000009f
 8000b68:	200000a4 	.word	0x200000a4
 8000b6c:	20000100 	.word	0x20000100
 8000b70:	2000010a 	.word	0x2000010a
 8000b74:	2000009e 	.word	0x2000009e

08000b78 <ShowStartAzimuth>:
	WriteToEEPROM(EEPROM_ADDRESS_START, gradus);
	WriteToEEPROM(EEPROM_ADDRESS_START+sizeof(gradus), man_azimuth);
}

void ShowStartAzimuth ()
{
 8000b78:	b510      	push	{r4, lr}
	lcdClrScr();
 8000b7a:	f7ff fdc9 	bl	8000710 <lcdClrScr>
	lcdGoto(LCD_1st_LINE,1);
 8000b7e:	2101      	movs	r1, #1
 8000b80:	0008      	movs	r0, r1
 8000b82:	f7ff fddf 	bl	8000744 <lcdGoto>
	lcdPuts("CUR AZIMUTH");
 8000b86:	480f      	ldr	r0, [pc, #60]	; (8000bc4 <ShowStartAzimuth+0x4c>)
 8000b88:	f7ff fdfd 	bl	8000786 <lcdPuts>
	lcdGoto(LCD_1st_LINE,13);
 8000b8c:	210d      	movs	r1, #13
 8000b8e:	2001      	movs	r0, #1
 8000b90:	f7ff fdd8 	bl	8000744 <lcdGoto>
  }
}

uint32_t ReadFromEEPROM (uint32_t address)
{
  return (*(__IO uint32_t *)address);
 8000b94:	4b0c      	ldr	r3, [pc, #48]	; (8000bc8 <ShowStartAzimuth+0x50>)
 8000b96:	6818      	ldr	r0, [r3, #0]
	lcdItos(ReadFromEEPROM(EEPROM_ADDRESS_START));
 8000b98:	f7ff fe1a 	bl	80007d0 <lcdItos>
	lcdGoto(LCD_2nd_LINE,1);
 8000b9c:	2101      	movs	r1, #1
 8000b9e:	2002      	movs	r0, #2
 8000ba0:	f7ff fdd0 	bl	8000744 <lcdGoto>
	lcdPuts("ANT AZIMUTH");
 8000ba4:	4809      	ldr	r0, [pc, #36]	; (8000bcc <ShowStartAzimuth+0x54>)
 8000ba6:	f7ff fdee 	bl	8000786 <lcdPuts>
	lcdGoto(LCD_2nd_LINE,13);
 8000baa:	210d      	movs	r1, #13
 8000bac:	2002      	movs	r0, #2
 8000bae:	f7ff fdc9 	bl	8000744 <lcdGoto>
  return (*(__IO uint32_t *)address);
 8000bb2:	4b07      	ldr	r3, [pc, #28]	; (8000bd0 <ShowStartAzimuth+0x58>)
 8000bb4:	6818      	ldr	r0, [r3, #0]
	lcdItos(ReadFromEEPROM(EEPROM_ADDRESS_START+sizeof(gradus)));
 8000bb6:	f7ff fe0b 	bl	80007d0 <lcdItos>
	lcdGoto(LCD_2nd_LINE,16);
 8000bba:	2110      	movs	r1, #16
 8000bbc:	2002      	movs	r0, #2
 8000bbe:	f7ff fdc1 	bl	8000744 <lcdGoto>
}
 8000bc2:	bd10      	pop	{r4, pc}
 8000bc4:	08003787 	.word	0x08003787
 8000bc8:	08080000 	.word	0x08080000
 8000bcc:	08003793 	.word	0x08003793
 8000bd0:	08080004 	.word	0x08080004

08000bd4 <ReadCWButton>:
	if (HAL_GPIO_ReadPin(BTN_UP_GPIO_Port, BTN_UP_Pin) == GPIO_PIN_RESET
 8000bd4:	2180      	movs	r1, #128	; 0x80
void ReadCWButton() {
 8000bd6:	b570      	push	{r4, r5, r6, lr}
	if (HAL_GPIO_ReadPin(BTN_UP_GPIO_Port, BTN_UP_Pin) == GPIO_PIN_RESET
 8000bd8:	4820      	ldr	r0, [pc, #128]	; (8000c5c <ReadCWButton+0x88>)
 8000bda:	01c9      	lsls	r1, r1, #7
 8000bdc:	f001 f87a 	bl	8001cd4 <HAL_GPIO_ReadPin>
 8000be0:	4d1f      	ldr	r5, [pc, #124]	; (8000c60 <ReadCWButton+0x8c>)
 8000be2:	2800      	cmp	r0, #0
 8000be4:	d132      	bne.n	8000c4c <ReadCWButton+0x78>
			&& flag_key1_press) {
 8000be6:	782b      	ldrb	r3, [r5, #0]
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d107      	bne.n	8000bfc <ReadCWButton+0x28>
	if (!flag_key1_press && (HAL_GetTick() - time_key1_press) > 200) {
 8000bec:	f000 fe7c 	bl	80018e8 <HAL_GetTick>
 8000bf0:	4b1c      	ldr	r3, [pc, #112]	; (8000c64 <ReadCWButton+0x90>)
 8000bf2:	681b      	ldr	r3, [r3, #0]
 8000bf4:	1ac0      	subs	r0, r0, r3
 8000bf6:	28c8      	cmp	r0, #200	; 0xc8
 8000bf8:	d82c      	bhi.n	8000c54 <ReadCWButton+0x80>
}
 8000bfa:	bd70      	pop	{r4, r5, r6, pc}
		if (man_azimuth==(360-step)) man_azimuth=0;
 8000bfc:	2366      	movs	r3, #102	; 0x66
 8000bfe:	4c1a      	ldr	r4, [pc, #104]	; (8000c68 <ReadCWButton+0x94>)
 8000c00:	33ff      	adds	r3, #255	; 0xff
 8000c02:	6822      	ldr	r2, [r4, #0]
		flag_key1_press = 0;
 8000c04:	7028      	strb	r0, [r5, #0]
		if (man_azimuth==(360-step)) man_azimuth=0;
 8000c06:	429a      	cmp	r2, r3
 8000c08:	d100      	bne.n	8000c0c <ReadCWButton+0x38>
 8000c0a:	6020      	str	r0, [r4, #0]
		isPushCW = 1;
 8000c0c:	2201      	movs	r2, #1
		man_azimuth=man_azimuth+step;
 8000c0e:	6823      	ldr	r3, [r4, #0]
		lcdGoto(LCD_2nd_LINE,13);
 8000c10:	210d      	movs	r1, #13
		man_azimuth=man_azimuth+step;
 8000c12:	3303      	adds	r3, #3
 8000c14:	6023      	str	r3, [r4, #0]
		isPushCW = 1;
 8000c16:	4b15      	ldr	r3, [pc, #84]	; (8000c6c <ReadCWButton+0x98>)
		lcdGoto(LCD_2nd_LINE,13);
 8000c18:	2002      	movs	r0, #2
		isPushCW = 1;
 8000c1a:	601a      	str	r2, [r3, #0]
 8000c1c:	23a0      	movs	r3, #160	; 0xa0
 8000c1e:	323f      	adds	r2, #63	; 0x3f
 8000c20:	05db      	lsls	r3, r3, #23
 8000c22:	629a      	str	r2, [r3, #40]	; 0x28
		lcdGoto(LCD_2nd_LINE,13);
 8000c24:	f7ff fd8e 	bl	8000744 <lcdGoto>
		lcdPuts("   ");
 8000c28:	4811      	ldr	r0, [pc, #68]	; (8000c70 <ReadCWButton+0x9c>)
 8000c2a:	f7ff fdac 	bl	8000786 <lcdPuts>
		lcdGoto(LCD_2nd_LINE,13);
 8000c2e:	210d      	movs	r1, #13
 8000c30:	2002      	movs	r0, #2
 8000c32:	f7ff fd87 	bl	8000744 <lcdGoto>
	    lcdItos(man_azimuth);
 8000c36:	6820      	ldr	r0, [r4, #0]
 8000c38:	f7ff fdca 	bl	80007d0 <lcdItos>
	    lcdGoto(LCD_2nd_LINE,16);
 8000c3c:	2110      	movs	r1, #16
 8000c3e:	2002      	movs	r0, #2
 8000c40:	f7ff fd80 	bl	8000744 <lcdGoto>
		time_key1_press = HAL_GetTick();
 8000c44:	f000 fe50 	bl	80018e8 <HAL_GetTick>
 8000c48:	4b06      	ldr	r3, [pc, #24]	; (8000c64 <ReadCWButton+0x90>)
 8000c4a:	6018      	str	r0, [r3, #0]
	if (!flag_key1_press && (HAL_GetTick() - time_key1_press) > 200) {
 8000c4c:	782b      	ldrb	r3, [r5, #0]
 8000c4e:	2b00      	cmp	r3, #0
 8000c50:	d1d3      	bne.n	8000bfa <ReadCWButton+0x26>
 8000c52:	e7cb      	b.n	8000bec <ReadCWButton+0x18>
		flag_key1_press = 1;
 8000c54:	2301      	movs	r3, #1
 8000c56:	702b      	strb	r3, [r5, #0]
}
 8000c58:	e7cf      	b.n	8000bfa <ReadCWButton+0x26>
 8000c5a:	46c0      	nop			; (mov r8, r8)
 8000c5c:	50000800 	.word	0x50000800
 8000c60:	20000000 	.word	0x20000000
 8000c64:	20000114 	.word	0x20000114
 8000c68:	200000fc 	.word	0x200000fc
 8000c6c:	200000f8 	.word	0x200000f8
 8000c70:	08003783 	.word	0x08003783

08000c74 <ReadCCWButton>:
	if (HAL_GPIO_ReadPin(BTN_DWN_GPIO_Port, BTN_DWN_Pin) == GPIO_PIN_RESET
 8000c74:	2180      	movs	r1, #128	; 0x80
void ReadCCWButton() {
 8000c76:	b570      	push	{r4, r5, r6, lr}
	if (HAL_GPIO_ReadPin(BTN_DWN_GPIO_Port, BTN_DWN_Pin) == GPIO_PIN_RESET
 8000c78:	4820      	ldr	r0, [pc, #128]	; (8000cfc <ReadCCWButton+0x88>)
 8000c7a:	0209      	lsls	r1, r1, #8
 8000c7c:	f001 f82a 	bl	8001cd4 <HAL_GPIO_ReadPin>
 8000c80:	4d1f      	ldr	r5, [pc, #124]	; (8000d00 <ReadCCWButton+0x8c>)
 8000c82:	2800      	cmp	r0, #0
 8000c84:	d132      	bne.n	8000cec <ReadCCWButton+0x78>
			&& flag_key2_press) {
 8000c86:	782b      	ldrb	r3, [r5, #0]
 8000c88:	2b00      	cmp	r3, #0
 8000c8a:	d107      	bne.n	8000c9c <ReadCCWButton+0x28>
	if (!flag_key2_press && (HAL_GetTick() - time_key2_press) > 200) {
 8000c8c:	f000 fe2c 	bl	80018e8 <HAL_GetTick>
 8000c90:	4b1c      	ldr	r3, [pc, #112]	; (8000d04 <ReadCCWButton+0x90>)
 8000c92:	681b      	ldr	r3, [r3, #0]
 8000c94:	1ac0      	subs	r0, r0, r3
 8000c96:	28c8      	cmp	r0, #200	; 0xc8
 8000c98:	d82c      	bhi.n	8000cf4 <ReadCCWButton+0x80>
}
 8000c9a:	bd70      	pop	{r4, r5, r6, pc}
		if (man_azimuth==0) man_azimuth=360-step;
 8000c9c:	4c1a      	ldr	r4, [pc, #104]	; (8000d08 <ReadCCWButton+0x94>)
		flag_key2_press = 0;
 8000c9e:	7028      	strb	r0, [r5, #0]
		if (man_azimuth==0) man_azimuth=360-step;
 8000ca0:	6823      	ldr	r3, [r4, #0]
 8000ca2:	2b00      	cmp	r3, #0
 8000ca4:	d102      	bne.n	8000cac <ReadCCWButton+0x38>
 8000ca6:	2366      	movs	r3, #102	; 0x66
 8000ca8:	33ff      	adds	r3, #255	; 0xff
 8000caa:	6023      	str	r3, [r4, #0]
		isPushCW = 0;
 8000cac:	2200      	movs	r2, #0
		man_azimuth=man_azimuth-step;
 8000cae:	6823      	ldr	r3, [r4, #0]
  WRITE_REG(GPIOx->BSRR, PinMask);
 8000cb0:	2602      	movs	r6, #2
 8000cb2:	3b03      	subs	r3, #3
 8000cb4:	6023      	str	r3, [r4, #0]
		isPushCW = 0;
 8000cb6:	4b15      	ldr	r3, [pc, #84]	; (8000d0c <ReadCCWButton+0x98>)
		lcdGoto(LCD_2nd_LINE,13);
 8000cb8:	210d      	movs	r1, #13
		isPushCW = 0;
 8000cba:	601a      	str	r2, [r3, #0]
 8000cbc:	23a0      	movs	r3, #160	; 0xa0
 8000cbe:	05db      	lsls	r3, r3, #23
 8000cc0:	619e      	str	r6, [r3, #24]
		lcdGoto(LCD_2nd_LINE,13);
 8000cc2:	0030      	movs	r0, r6
 8000cc4:	f7ff fd3e 	bl	8000744 <lcdGoto>
		lcdPuts("   ");
 8000cc8:	4811      	ldr	r0, [pc, #68]	; (8000d10 <ReadCCWButton+0x9c>)
 8000cca:	f7ff fd5c 	bl	8000786 <lcdPuts>
		lcdGoto(LCD_2nd_LINE,13);
 8000cce:	210d      	movs	r1, #13
 8000cd0:	0030      	movs	r0, r6
 8000cd2:	f7ff fd37 	bl	8000744 <lcdGoto>
	    lcdItos(man_azimuth);
 8000cd6:	6820      	ldr	r0, [r4, #0]
 8000cd8:	f7ff fd7a 	bl	80007d0 <lcdItos>
	    lcdGoto(LCD_2nd_LINE,16);
 8000cdc:	2110      	movs	r1, #16
 8000cde:	0030      	movs	r0, r6
 8000ce0:	f7ff fd30 	bl	8000744 <lcdGoto>
		time_key2_press = HAL_GetTick();
 8000ce4:	f000 fe00 	bl	80018e8 <HAL_GetTick>
 8000ce8:	4b06      	ldr	r3, [pc, #24]	; (8000d04 <ReadCCWButton+0x90>)
 8000cea:	6018      	str	r0, [r3, #0]
	if (!flag_key2_press && (HAL_GetTick() - time_key2_press) > 200) {
 8000cec:	782b      	ldrb	r3, [r5, #0]
 8000cee:	2b00      	cmp	r3, #0
 8000cf0:	d1d3      	bne.n	8000c9a <ReadCCWButton+0x26>
 8000cf2:	e7cb      	b.n	8000c8c <ReadCCWButton+0x18>
		flag_key2_press = 1;
 8000cf4:	2301      	movs	r3, #1
 8000cf6:	702b      	strb	r3, [r5, #0]
}
 8000cf8:	e7cf      	b.n	8000c9a <ReadCCWButton+0x26>
 8000cfa:	46c0      	nop			; (mov r8, r8)
 8000cfc:	50000800 	.word	0x50000800
 8000d00:	20000001 	.word	0x20000001
 8000d04:	20000118 	.word	0x20000118
 8000d08:	200000fc 	.word	0x200000fc
 8000d0c:	200000f8 	.word	0x200000f8
 8000d10:	08003783 	.word	0x08003783

08000d14 <ReadStartButton>:
void ReadStartButton() {
 8000d14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if (HAL_GPIO_ReadPin(BTN_START_GPIO_Port, BTN_START_Pin) == GPIO_PIN_RESET
 8000d16:	2102      	movs	r1, #2
 8000d18:	485b      	ldr	r0, [pc, #364]	; (8000e88 <ReadStartButton+0x174>)
 8000d1a:	f000 ffdb 	bl	8001cd4 <HAL_GPIO_ReadPin>
 8000d1e:	2800      	cmp	r0, #0
 8000d20:	d000      	beq.n	8000d24 <ReadStartButton+0x10>
 8000d22:	e075      	b.n	8000e10 <ReadStartButton+0xfc>
			&& flag_key3_press) {
 8000d24:	4b59      	ldr	r3, [pc, #356]	; (8000e8c <ReadStartButton+0x178>)
 8000d26:	781b      	ldrb	r3, [r3, #0]
 8000d28:	2b00      	cmp	r3, #0
 8000d2a:	d108      	bne.n	8000d3e <ReadStartButton+0x2a>
	if (!flag_key3_press && (HAL_GetTick() - time_key3_press) > 200) {
 8000d2c:	f000 fddc 	bl	80018e8 <HAL_GetTick>
 8000d30:	4b57      	ldr	r3, [pc, #348]	; (8000e90 <ReadStartButton+0x17c>)
 8000d32:	681b      	ldr	r3, [r3, #0]
 8000d34:	1ac0      	subs	r0, r0, r3
 8000d36:	28c8      	cmp	r0, #200	; 0xc8
 8000d38:	d900      	bls.n	8000d3c <ReadStartButton+0x28>
 8000d3a:	e0a0      	b.n	8000e7e <ReadStartButton+0x16a>
}
 8000d3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		flag_key3_press = 0;
 8000d3e:	4b53      	ldr	r3, [pc, #332]	; (8000e8c <ReadStartButton+0x178>)
  WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
 8000d40:	2202      	movs	r2, #2
 8000d42:	7018      	strb	r0, [r3, #0]
 8000d44:	2380      	movs	r3, #128	; 0x80
 8000d46:	4252      	negs	r2, r2
 8000d48:	05db      	lsls	r3, r3, #23
 8000d4a:	611a      	str	r2, [r3, #16]
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 8000d4c:	6819      	ldr	r1, [r3, #0]
 8000d4e:	3203      	adds	r2, #3
 8000d50:	4311      	orrs	r1, r2
 8000d52:	6019      	str	r1, [r3, #0]
  SET_BIT(TIMx->DIER, TIM_DIER_UIE);
 8000d54:	68d9      	ldr	r1, [r3, #12]
		if (dir_azimuth > dir_gradus) {
 8000d56:	4c4f      	ldr	r4, [pc, #316]	; (8000e94 <ReadStartButton+0x180>)
 8000d58:	4d4f      	ldr	r5, [pc, #316]	; (8000e98 <ReadStartButton+0x184>)
 8000d5a:	430a      	orrs	r2, r1
 8000d5c:	60da      	str	r2, [r3, #12]
 8000d5e:	6823      	ldr	r3, [r4, #0]
 8000d60:	682a      	ldr	r2, [r5, #0]
 8000d62:	4293      	cmp	r3, r2
 8000d64:	dd5a      	ble.n	8000e1c <ReadStartButton+0x108>
			time_on_cw = HAL_GetTick();
 8000d66:	f000 fdbf 	bl	80018e8 <HAL_GetTick>
  WRITE_REG(GPIOx->BRR, PinMask);
 8000d6a:	27a0      	movs	r7, #160	; 0xa0
 8000d6c:	4e4b      	ldr	r6, [pc, #300]	; (8000e9c <ReadStartButton+0x188>)
 8000d6e:	05ff      	lsls	r7, r7, #23
 8000d70:	6030      	str	r0, [r6, #0]
			while (dir_gradus < dir_azimuth) {
 8000d72:	682b      	ldr	r3, [r5, #0]
 8000d74:	6822      	ldr	r2, [r4, #0]
 8000d76:	4293      	cmp	r3, r2
 8000d78:	da20      	bge.n	8000dbc <ReadStartButton+0xa8>
				lcdGoto(LCD_1st_LINE, 13);
 8000d7a:	210d      	movs	r1, #13
 8000d7c:	2001      	movs	r0, #1
 8000d7e:	f7ff fce1 	bl	8000744 <lcdGoto>
				lcdPuts("   ");
 8000d82:	4847      	ldr	r0, [pc, #284]	; (8000ea0 <ReadStartButton+0x18c>)
 8000d84:	f7ff fcff 	bl	8000786 <lcdPuts>
				lcdGoto(LCD_1st_LINE, 13);
 8000d88:	210d      	movs	r1, #13
 8000d8a:	2001      	movs	r0, #1
 8000d8c:	f7ff fcda 	bl	8000744 <lcdGoto>
				lcdItos(gradus);
 8000d90:	4b44      	ldr	r3, [pc, #272]	; (8000ea4 <ReadStartButton+0x190>)
 8000d92:	6818      	ldr	r0, [r3, #0]
 8000d94:	f7ff fd1c 	bl	80007d0 <lcdItos>
				lcdGoto(LCD_1st_LINE, 16);
 8000d98:	2110      	movs	r1, #16
 8000d9a:	2001      	movs	r0, #1
 8000d9c:	f7ff fcd2 	bl	8000744 <lcdGoto>
 8000da0:	2302      	movs	r3, #2
 8000da2:	62bb      	str	r3, [r7, #40]	; 0x28
  WRITE_REG(GPIOx->BSRR, PinMask);
 8000da4:	333e      	adds	r3, #62	; 0x3e
 8000da6:	61bb      	str	r3, [r7, #24]
				LL_mDelay(50);
 8000da8:	2032      	movs	r0, #50	; 0x32
 8000daa:	f002 f81f 	bl	8002dec <LL_mDelay>
				if ((HAL_GetTick() - time_on_cw) > 10000)
 8000dae:	f000 fd9b 	bl	80018e8 <HAL_GetTick>
 8000db2:	6833      	ldr	r3, [r6, #0]
 8000db4:	1ac0      	subs	r0, r0, r3
 8000db6:	4b3c      	ldr	r3, [pc, #240]	; (8000ea8 <ReadStartButton+0x194>)
 8000db8:	4298      	cmp	r0, r3
 8000dba:	d9da      	bls.n	8000d72 <ReadStartButton+0x5e>
 8000dbc:	23a0      	movs	r3, #160	; 0xa0
 8000dbe:	2202      	movs	r2, #2
 8000dc0:	05db      	lsls	r3, r3, #23
 8000dc2:	619a      	str	r2, [r3, #24]
  WRITE_REG(GPIOx->BRR, PinMask);
 8000dc4:	323e      	adds	r2, #62	; 0x3e
 8000dc6:	629a      	str	r2, [r3, #40]	; 0x28
  CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 8000dc8:	2380      	movs	r3, #128	; 0x80
 8000dca:	2101      	movs	r1, #1
 8000dcc:	05db      	lsls	r3, r3, #23
 8000dce:	681a      	ldr	r2, [r3, #0]
		lcdGoto(LCD_1st_LINE, 13);
 8000dd0:	2001      	movs	r0, #1
 8000dd2:	438a      	bics	r2, r1
 8000dd4:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(TIMx->DIER, TIM_DIER_UIE);
 8000dd6:	68da      	ldr	r2, [r3, #12]
 8000dd8:	438a      	bics	r2, r1
 8000dda:	60da      	str	r2, [r3, #12]
 8000ddc:	210d      	movs	r1, #13
 8000dde:	f7ff fcb1 	bl	8000744 <lcdGoto>
		lcdPuts("   ");
 8000de2:	482f      	ldr	r0, [pc, #188]	; (8000ea0 <ReadStartButton+0x18c>)
 8000de4:	f7ff fccf 	bl	8000786 <lcdPuts>
		lcdGoto(LCD_1st_LINE, 13);
 8000de8:	210d      	movs	r1, #13
 8000dea:	2001      	movs	r0, #1
 8000dec:	f7ff fcaa 	bl	8000744 <lcdGoto>
		lcdItos(gradus);
 8000df0:	4b2c      	ldr	r3, [pc, #176]	; (8000ea4 <ReadStartButton+0x190>)
 8000df2:	6818      	ldr	r0, [r3, #0]
 8000df4:	f7ff fcec 	bl	80007d0 <lcdItos>
		lcdGoto(LCD_1st_LINE, 16);
 8000df8:	2110      	movs	r1, #16
 8000dfa:	2001      	movs	r0, #1
 8000dfc:	f7ff fca2 	bl	8000744 <lcdGoto>
		ConvertGradusToChar(gradus);
 8000e00:	4b28      	ldr	r3, [pc, #160]	; (8000ea4 <ReadStartButton+0x190>)
 8000e02:	6818      	ldr	r0, [r3, #0]
 8000e04:	f7ff fd70 	bl	80008e8 <ConvertGradusToChar>
		time_key3_press = HAL_GetTick();
 8000e08:	f000 fd6e 	bl	80018e8 <HAL_GetTick>
 8000e0c:	4b20      	ldr	r3, [pc, #128]	; (8000e90 <ReadStartButton+0x17c>)
 8000e0e:	6018      	str	r0, [r3, #0]
	if (!flag_key3_press && (HAL_GetTick() - time_key3_press) > 200) {
 8000e10:	4b1e      	ldr	r3, [pc, #120]	; (8000e8c <ReadStartButton+0x178>)
 8000e12:	781b      	ldrb	r3, [r3, #0]
 8000e14:	2b00      	cmp	r3, #0
 8000e16:	d000      	beq.n	8000e1a <ReadStartButton+0x106>
 8000e18:	e790      	b.n	8000d3c <ReadStartButton+0x28>
 8000e1a:	e787      	b.n	8000d2c <ReadStartButton+0x18>
			time_on_ccw = HAL_GetTick();
 8000e1c:	f000 fd64 	bl	80018e8 <HAL_GetTick>
 8000e20:	27a0      	movs	r7, #160	; 0xa0
 8000e22:	4e22      	ldr	r6, [pc, #136]	; (8000eac <ReadStartButton+0x198>)
 8000e24:	05ff      	lsls	r7, r7, #23
 8000e26:	6030      	str	r0, [r6, #0]
			while (dir_gradus > dir_azimuth) {
 8000e28:	682b      	ldr	r3, [r5, #0]
 8000e2a:	6822      	ldr	r2, [r4, #0]
 8000e2c:	4293      	cmp	r3, r2
 8000e2e:	dd20      	ble.n	8000e72 <ReadStartButton+0x15e>
				lcdGoto(LCD_1st_LINE, 13);
 8000e30:	210d      	movs	r1, #13
 8000e32:	2001      	movs	r0, #1
 8000e34:	f7ff fc86 	bl	8000744 <lcdGoto>
				lcdPuts("   ");
 8000e38:	4819      	ldr	r0, [pc, #100]	; (8000ea0 <ReadStartButton+0x18c>)
 8000e3a:	f7ff fca4 	bl	8000786 <lcdPuts>
				lcdGoto(LCD_1st_LINE, 13);
 8000e3e:	210d      	movs	r1, #13
 8000e40:	2001      	movs	r0, #1
 8000e42:	f7ff fc7f 	bl	8000744 <lcdGoto>
				lcdItos(gradus);
 8000e46:	4b17      	ldr	r3, [pc, #92]	; (8000ea4 <ReadStartButton+0x190>)
 8000e48:	6818      	ldr	r0, [r3, #0]
 8000e4a:	f7ff fcc1 	bl	80007d0 <lcdItos>
				lcdGoto(LCD_1st_LINE, 16);
 8000e4e:	2110      	movs	r1, #16
 8000e50:	2001      	movs	r0, #1
 8000e52:	f7ff fc77 	bl	8000744 <lcdGoto>
 8000e56:	2302      	movs	r3, #2
 8000e58:	62bb      	str	r3, [r7, #40]	; 0x28
  WRITE_REG(GPIOx->BSRR, PinMask);
 8000e5a:	337e      	adds	r3, #126	; 0x7e
 8000e5c:	61bb      	str	r3, [r7, #24]
				LL_mDelay(50);
 8000e5e:	2032      	movs	r0, #50	; 0x32
 8000e60:	f001 ffc4 	bl	8002dec <LL_mDelay>
				if ((HAL_GetTick() - time_on_ccw) > 10000)
 8000e64:	f000 fd40 	bl	80018e8 <HAL_GetTick>
 8000e68:	6833      	ldr	r3, [r6, #0]
 8000e6a:	1ac0      	subs	r0, r0, r3
 8000e6c:	4b0e      	ldr	r3, [pc, #56]	; (8000ea8 <ReadStartButton+0x194>)
 8000e6e:	4298      	cmp	r0, r3
 8000e70:	d9da      	bls.n	8000e28 <ReadStartButton+0x114>
 8000e72:	23a0      	movs	r3, #160	; 0xa0
 8000e74:	2202      	movs	r2, #2
 8000e76:	05db      	lsls	r3, r3, #23
 8000e78:	619a      	str	r2, [r3, #24]
  WRITE_REG(GPIOx->BRR, PinMask);
 8000e7a:	327e      	adds	r2, #126	; 0x7e
 8000e7c:	e7a3      	b.n	8000dc6 <ReadStartButton+0xb2>
		flag_key3_press = 1;
 8000e7e:	2301      	movs	r3, #1
 8000e80:	4a02      	ldr	r2, [pc, #8]	; (8000e8c <ReadStartButton+0x178>)
 8000e82:	7013      	strb	r3, [r2, #0]
}
 8000e84:	e75a      	b.n	8000d3c <ReadStartButton+0x28>
 8000e86:	46c0      	nop			; (mov r8, r8)
 8000e88:	50000400 	.word	0x50000400
 8000e8c:	20000002 	.word	0x20000002
 8000e90:	2000011c 	.word	0x2000011c
 8000e94:	20000094 	.word	0x20000094
 8000e98:	20000098 	.word	0x20000098
 8000e9c:	20000124 	.word	0x20000124
 8000ea0:	08003783 	.word	0x08003783
 8000ea4:	200000a4 	.word	0x200000a4
 8000ea8:	00002710 	.word	0x00002710
 8000eac:	20000120 	.word	0x20000120

08000eb0 <WriteToEEPROM>:
{
 8000eb0:	b570      	push	{r4, r5, r6, lr}
 8000eb2:	0004      	movs	r4, r0
 8000eb4:	000d      	movs	r5, r1
    flash_ok = HAL_FLASHEx_DATAEEPROM_Unlock();
 8000eb6:	f000 fe03 	bl	8001ac0 <HAL_FLASHEx_DATAEEPROM_Unlock>
  while (flash_ok != HAL_OK)
 8000eba:	2800      	cmp	r0, #0
 8000ebc:	d1fb      	bne.n	8000eb6 <WriteToEEPROM+0x6>
    flash_ok = HAL_FLASHEx_DATAEEPROM_Erase (address);
 8000ebe:	0020      	movs	r0, r4
 8000ec0:	f000 fe20 	bl	8001b04 <HAL_FLASHEx_DATAEEPROM_Erase>
  while (flash_ok != HAL_OK)
 8000ec4:	2800      	cmp	r0, #0
 8000ec6:	d1fa      	bne.n	8000ebe <WriteToEEPROM+0xe>
    flash_ok = HAL_FLASHEx_DATAEEPROM_Program (FLASH_TYPEPROGRAMDATA_WORD, address, value);
 8000ec8:	002a      	movs	r2, r5
 8000eca:	0021      	movs	r1, r4
 8000ecc:	2002      	movs	r0, #2
 8000ece:	f000 fe2b 	bl	8001b28 <HAL_FLASHEx_DATAEEPROM_Program>
  while (flash_ok != HAL_OK)
 8000ed2:	2800      	cmp	r0, #0
 8000ed4:	d1f8      	bne.n	8000ec8 <WriteToEEPROM+0x18>
    flash_ok = HAL_FLASHEx_DATAEEPROM_Lock ();
 8000ed6:	f000 fe0b 	bl	8001af0 <HAL_FLASHEx_DATAEEPROM_Lock>
  while (flash_ok != HAL_OK)
 8000eda:	2800      	cmp	r0, #0
 8000edc:	d1fb      	bne.n	8000ed6 <WriteToEEPROM+0x26>
}
 8000ede:	bd70      	pop	{r4, r5, r6, pc}

08000ee0 <SetDefault>:
void SetDefault(){
 8000ee0:	b510      	push	{r4, lr}
		LL_mDelay(300);
 8000ee2:	2496      	movs	r4, #150	; 0x96
 8000ee4:	0064      	lsls	r4, r4, #1
	while (HAL_GPIO_ReadPin(BTN_START_GPIO_Port, BTN_START_Pin) == GPIO_PIN_RESET){
 8000ee6:	2102      	movs	r1, #2
 8000ee8:	4811      	ldr	r0, [pc, #68]	; (8000f30 <SetDefault+0x50>)
 8000eea:	f000 fef3 	bl	8001cd4 <HAL_GPIO_ReadPin>
 8000eee:	2800      	cmp	r0, #0
 8000ef0:	d00c      	beq.n	8000f0c <SetDefault+0x2c>
	gradus = man_azimuth = 0;
 8000ef2:	2100      	movs	r1, #0
 8000ef4:	4c0f      	ldr	r4, [pc, #60]	; (8000f34 <SetDefault+0x54>)
 8000ef6:	4b10      	ldr	r3, [pc, #64]	; (8000f38 <SetDefault+0x58>)
	WriteToEEPROM(EEPROM_ADDRESS_START, gradus);
 8000ef8:	4810      	ldr	r0, [pc, #64]	; (8000f3c <SetDefault+0x5c>)
	gradus = man_azimuth = 0;
 8000efa:	6019      	str	r1, [r3, #0]
 8000efc:	6021      	str	r1, [r4, #0]
	WriteToEEPROM(EEPROM_ADDRESS_START, gradus);
 8000efe:	f7ff ffd7 	bl	8000eb0 <WriteToEEPROM>
    WriteToEEPROM(EEPROM_ADDRESS_START+sizeof(gradus), man_azimuth);
 8000f02:	6821      	ldr	r1, [r4, #0]
 8000f04:	480e      	ldr	r0, [pc, #56]	; (8000f40 <SetDefault+0x60>)
 8000f06:	f7ff ffd3 	bl	8000eb0 <WriteToEEPROM>
}
 8000f0a:	bd10      	pop	{r4, pc}
		lcdClrScr();
 8000f0c:	f7ff fc00 	bl	8000710 <lcdClrScr>
		lcdGoto(LCD_1st_LINE, 3);
 8000f10:	2103      	movs	r1, #3
 8000f12:	2001      	movs	r0, #1
 8000f14:	f7ff fc16 	bl	8000744 <lcdGoto>
		lcdPuts("GO TO ZERO");
 8000f18:	480a      	ldr	r0, [pc, #40]	; (8000f44 <SetDefault+0x64>)
 8000f1a:	f7ff fc34 	bl	8000786 <lcdPuts>
		lcdGoto(LCD_2nd_LINE, 16);
 8000f1e:	2110      	movs	r1, #16
 8000f20:	2002      	movs	r0, #2
 8000f22:	f7ff fc0f 	bl	8000744 <lcdGoto>
		LL_mDelay(300);
 8000f26:	0020      	movs	r0, r4
 8000f28:	f001 ff60 	bl	8002dec <LL_mDelay>
 8000f2c:	e7db      	b.n	8000ee6 <SetDefault+0x6>
 8000f2e:	46c0      	nop			; (mov r8, r8)
 8000f30:	50000400 	.word	0x50000400
 8000f34:	200000fc 	.word	0x200000fc
 8000f38:	200000a4 	.word	0x200000a4
 8000f3c:	08080000 	.word	0x08080000
 8000f40:	08080004 	.word	0x08080004
 8000f44:	0800379f 	.word	0x0800379f

08000f48 <SaveSettings>:
	WriteToEEPROM(EEPROM_ADDRESS_START, gradus);
 8000f48:	4b05      	ldr	r3, [pc, #20]	; (8000f60 <SaveSettings+0x18>)
{
 8000f4a:	b510      	push	{r4, lr}
	WriteToEEPROM(EEPROM_ADDRESS_START, gradus);
 8000f4c:	6819      	ldr	r1, [r3, #0]
 8000f4e:	4805      	ldr	r0, [pc, #20]	; (8000f64 <SaveSettings+0x1c>)
 8000f50:	f7ff ffae 	bl	8000eb0 <WriteToEEPROM>
	WriteToEEPROM(EEPROM_ADDRESS_START+sizeof(gradus), man_azimuth);
 8000f54:	4b04      	ldr	r3, [pc, #16]	; (8000f68 <SaveSettings+0x20>)
 8000f56:	4805      	ldr	r0, [pc, #20]	; (8000f6c <SaveSettings+0x24>)
 8000f58:	6819      	ldr	r1, [r3, #0]
 8000f5a:	f7ff ffa9 	bl	8000eb0 <WriteToEEPROM>
}
 8000f5e:	bd10      	pop	{r4, pc}
 8000f60:	200000a4 	.word	0x200000a4
 8000f64:	08080000 	.word	0x08080000
 8000f68:	200000fc 	.word	0x200000fc
 8000f6c:	08080004 	.word	0x08080004

08000f70 <CheckADC>:
__STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
{
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 8000f70:	2001      	movs	r0, #1
{
 8000f72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f74:	4c17      	ldr	r4, [pc, #92]	; (8000fd4 <CheckADC+0x64>)
 8000f76:	4a18      	ldr	r2, [pc, #96]	; (8000fd8 <CheckADC+0x68>)
 8000f78:	68a3      	ldr	r3, [r4, #8]
 8000f7a:	4013      	ands	r3, r2
 8000f7c:	4303      	orrs	r3, r0
 8000f7e:	60a3      	str	r3, [r4, #8]
__STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
{
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 8000f80:	68a3      	ldr	r3, [r4, #8]
 8000f82:	401a      	ands	r2, r3
 8000f84:	2304      	movs	r3, #4
 8000f86:	4313      	orrs	r3, r2
 8000f88:	60a3      	str	r3, [r4, #8]
    LL_mDelay(1);
 8000f8a:	f001 ff2f 	bl	8002dec <LL_mDelay>
  * @param  ADCx ADC instance
  * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
  */
__STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
{
  return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
 8000f8e:	6c23      	ldr	r3, [r4, #64]	; 0x40
    if ((adc_value < 3500)&&(flag_adc == 0)) {
 8000f90:	4a12      	ldr	r2, [pc, #72]	; (8000fdc <CheckADC+0x6c>)
    adc_value = LL_ADC_REG_ReadConversionData12(ADC1);
 8000f92:	4c13      	ldr	r4, [pc, #76]	; (8000fe0 <CheckADC+0x70>)
 8000f94:	b29b      	uxth	r3, r3
 8000f96:	8023      	strh	r3, [r4, #0]
    if ((adc_value < 3500)&&(flag_adc == 0)) {
 8000f98:	4293      	cmp	r3, r2
 8000f9a:	d80e      	bhi.n	8000fba <CheckADC+0x4a>
 8000f9c:	4d11      	ldr	r5, [pc, #68]	; (8000fe4 <CheckADC+0x74>)
 8000f9e:	782f      	ldrb	r7, [r5, #0]
 8000fa0:	2f00      	cmp	r7, #0
 8000fa2:	d116      	bne.n	8000fd2 <CheckADC+0x62>
    	if (flag_eeprom==1){
 8000fa4:	4e10      	ldr	r6, [pc, #64]	; (8000fe8 <CheckADC+0x78>)
 8000fa6:	7833      	ldrb	r3, [r6, #0]
 8000fa8:	2b01      	cmp	r3, #1
 8000faa:	d102      	bne.n	8000fb2 <CheckADC+0x42>
    		SaveSettings();
 8000fac:	f7ff ffcc 	bl	8000f48 <SaveSettings>
    		flag_eeprom=0;
 8000fb0:	7037      	strb	r7, [r6, #0]
    	flag_adc = 1;
 8000fb2:	2301      	movs	r3, #1
 8000fb4:	702b      	strb	r3, [r5, #0]
    	ShowWarning();
 8000fb6:	f7ff fc65 	bl	8000884 <ShowWarning>
    if ((adc_value > 3500)&&(flag_adc == 1)) {
 8000fba:	4b0c      	ldr	r3, [pc, #48]	; (8000fec <CheckADC+0x7c>)
 8000fbc:	8822      	ldrh	r2, [r4, #0]
 8000fbe:	429a      	cmp	r2, r3
 8000fc0:	d907      	bls.n	8000fd2 <CheckADC+0x62>
 8000fc2:	4c08      	ldr	r4, [pc, #32]	; (8000fe4 <CheckADC+0x74>)
 8000fc4:	7823      	ldrb	r3, [r4, #0]
 8000fc6:	2b01      	cmp	r3, #1
 8000fc8:	d103      	bne.n	8000fd2 <CheckADC+0x62>
    	ShowStartAzimuth();
 8000fca:	f7ff fdd5 	bl	8000b78 <ShowStartAzimuth>
    	flag_adc = 0;
 8000fce:	2300      	movs	r3, #0
 8000fd0:	7023      	strb	r3, [r4, #0]
}
 8000fd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fd4:	40012400 	.word	0x40012400
 8000fd8:	7fffffe8 	.word	0x7fffffe8
 8000fdc:	00000dab 	.word	0x00000dab
 8000fe0:	20000092 	.word	0x20000092
 8000fe4:	2000009c 	.word	0x2000009c
 8000fe8:	2000009d 	.word	0x2000009d
 8000fec:	00000dac 	.word	0x00000dac

08000ff0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ff0:	b510      	push	{r4, lr}
 8000ff2:	b098      	sub	sp, #96	; 0x60
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ff4:	2220      	movs	r2, #32
 8000ff6:	2100      	movs	r1, #0
 8000ff8:	a80c      	add	r0, sp, #48	; 0x30
 8000ffa:	f001 ff37 	bl	8002e6c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ffe:	2214      	movs	r2, #20
 8001000:	2100      	movs	r1, #0
 8001002:	4668      	mov	r0, sp
 8001004:	f001 ff32 	bl	8002e6c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001008:	2218      	movs	r2, #24
 800100a:	2100      	movs	r1, #0
 800100c:	a805      	add	r0, sp, #20
 800100e:	f001 ff2d 	bl	8002e6c <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001012:	491e      	ldr	r1, [pc, #120]	; (800108c <SystemClock_Config+0x9c>)
 8001014:	4a1e      	ldr	r2, [pc, #120]	; (8001090 <SystemClock_Config+0xa0>)
 8001016:	680b      	ldr	r3, [r1, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSE;
  RCC_OscInitStruct.LSEState = RCC_LSE_OFF;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001018:	2401      	movs	r4, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800101a:	401a      	ands	r2, r3
 800101c:	2380      	movs	r3, #128	; 0x80
 800101e:	011b      	lsls	r3, r3, #4
 8001020:	4313      	orrs	r3, r2
 8001022:	600b      	str	r3, [r1, #0]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSE;
 8001024:	2306      	movs	r3, #6
 8001026:	930b      	str	r3, [sp, #44]	; 0x2c
  RCC_OscInitStruct.LSEState = RCC_LSE_OFF;
 8001028:	2300      	movs	r3, #0
 800102a:	930d      	str	r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800102c:	9315      	str	r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 800102e:	2380      	movs	r3, #128	; 0x80
 8001030:	02db      	lsls	r3, r3, #11
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001032:	2210      	movs	r2, #16
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 8001034:	9316      	str	r3, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8001036:	2380      	movs	r3, #128	; 0x80
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001038:	920f      	str	r2, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 800103a:	03db      	lsls	r3, r3, #15
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800103c:	3a0e      	subs	r2, #14
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800103e:	a80b      	add	r0, sp, #44	; 0x2c
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001040:	940e      	str	r4, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001042:	9214      	str	r2, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8001044:	9317      	str	r3, [sp, #92]	; 0x5c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001046:	f001 f949 	bl	80022dc <HAL_RCC_OscConfig>
 800104a:	2800      	cmp	r0, #0
 800104c:	d001      	beq.n	8001052 <SystemClock_Config+0x62>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800104e:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001050:	e7fe      	b.n	8001050 <SystemClock_Config+0x60>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001052:	230f      	movs	r3, #15
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001054:	9002      	str	r0, [sp, #8]
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001056:	9300      	str	r3, [sp, #0]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001058:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800105a:	3b0c      	subs	r3, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800105c:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 800105e:	0021      	movs	r1, r4
 8001060:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001062:	9301      	str	r3, [sp, #4]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001064:	f001 fb88 	bl	8002778 <HAL_RCC_ClockConfig>
 8001068:	2800      	cmp	r0, #0
 800106a:	d001      	beq.n	8001070 <SystemClock_Config+0x80>
 800106c:	b672      	cpsid	i
  while (1)
 800106e:	e7fe      	b.n	800106e <SystemClock_Config+0x7e>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_I2C1;
 8001070:	230a      	movs	r3, #10
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8001072:	9007      	str	r0, [sp, #28]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8001074:	9009      	str	r0, [sp, #36]	; 0x24
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001076:	a805      	add	r0, sp, #20
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_I2C1;
 8001078:	9305      	str	r3, [sp, #20]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800107a:	f001 fc51 	bl	8002920 <HAL_RCCEx_PeriphCLKConfig>
 800107e:	2800      	cmp	r0, #0
 8001080:	d001      	beq.n	8001086 <SystemClock_Config+0x96>
 8001082:	b672      	cpsid	i
  while (1)
 8001084:	e7fe      	b.n	8001084 <SystemClock_Config+0x94>
}
 8001086:	b018      	add	sp, #96	; 0x60
 8001088:	bd10      	pop	{r4, pc}
 800108a:	46c0      	nop			; (mov r8, r8)
 800108c:	40007000 	.word	0x40007000
 8001090:	ffffe7ff 	.word	0xffffe7ff

08001094 <main>:
{
 8001094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001096:	b097      	sub	sp, #92	; 0x5c
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001098:	af0f      	add	r7, sp, #60	; 0x3c
  HAL_Init();
 800109a:	f000 fc05 	bl	80018a8 <HAL_Init>
  SystemClock_Config();
 800109e:	f7ff ffa7 	bl	8000ff0 <SystemClock_Config>
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 80010a2:	2218      	movs	r2, #24
 80010a4:	2100      	movs	r1, #0
 80010a6:	0038      	movs	r0, r7
 80010a8:	f001 fee0 	bl	8002e6c <memset>
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOC);
 80010ac:	2004      	movs	r0, #4
 80010ae:	f7ff fbdb 	bl	8000868 <LL_IOP_GRP1_EnableClock>
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 80010b2:	2001      	movs	r0, #1
 80010b4:	f7ff fbd8 	bl	8000868 <LL_IOP_GRP1_EnableClock>
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOB);
 80010b8:	2002      	movs	r0, #2
 80010ba:	f7ff fbd5 	bl	8000868 <LL_IOP_GRP1_EnableClock>
  WRITE_REG(GPIOx->BSRR, PinMask);
 80010be:	23a0      	movs	r3, #160	; 0xa0
 80010c0:	2202      	movs	r2, #2
  WRITE_REG(GPIOx->BRR, PinMask);
 80010c2:	2540      	movs	r5, #64	; 0x40
 80010c4:	2120      	movs	r1, #32
 80010c6:	2080      	movs	r0, #128	; 0x80
  WRITE_REG(GPIOx->BSRR, PinMask);
 80010c8:	05db      	lsls	r3, r3, #23
 80010ca:	619a      	str	r2, [r3, #24]
  WRITE_REG(GPIOx->BRR, PinMask);
 80010cc:	6299      	str	r1, [r3, #40]	; 0x28
 80010ce:	629d      	str	r5, [r3, #40]	; 0x28
 80010d0:	6298      	str	r0, [r3, #40]	; 0x28
  GPIO_InitStruct.Pin = BTN_UP_Pin;
 80010d2:	2380      	movs	r3, #128	; 0x80
  GPIO_InitStruct.Mode = LL_GPIO_MODE_INPUT;
 80010d4:	2400      	movs	r4, #0
  GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 80010d6:	2601      	movs	r6, #1
  GPIO_InitStruct.Pin = BTN_UP_Pin;
 80010d8:	01db      	lsls	r3, r3, #7
 80010da:	930f      	str	r3, [sp, #60]	; 0x3c
  LL_GPIO_Init(BTN_UP_GPIO_Port, &GPIO_InitStruct);
 80010dc:	0039      	movs	r1, r7
 80010de:	4831      	ldr	r0, [pc, #196]	; (80011a4 <main+0x110>)
  GPIO_InitStruct.Mode = LL_GPIO_MODE_INPUT;
 80010e0:	607c      	str	r4, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 80010e2:	613e      	str	r6, [r7, #16]
  LL_GPIO_Init(BTN_UP_GPIO_Port, &GPIO_InitStruct);
 80010e4:	f001 fd0c 	bl	8002b00 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = BTN_DWN_Pin;
 80010e8:	2380      	movs	r3, #128	; 0x80
 80010ea:	021b      	lsls	r3, r3, #8
 80010ec:	930f      	str	r3, [sp, #60]	; 0x3c
  LL_GPIO_Init(BTN_DWN_GPIO_Port, &GPIO_InitStruct);
 80010ee:	0039      	movs	r1, r7
 80010f0:	482c      	ldr	r0, [pc, #176]	; (80011a4 <main+0x110>)
  GPIO_InitStruct.Mode = LL_GPIO_MODE_INPUT;
 80010f2:	607c      	str	r4, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 80010f4:	613e      	str	r6, [r7, #16]
  LL_GPIO_Init(BTN_DWN_GPIO_Port, &GPIO_InitStruct);
 80010f6:	f001 fd03 	bl	8002b00 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = OE_Pin;
 80010fa:	2202      	movs	r2, #2
  LL_GPIO_Init(OE_GPIO_Port, &GPIO_InitStruct);
 80010fc:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Pin = OE_Pin;
 80010fe:	920f      	str	r2, [sp, #60]	; 0x3c
  LL_GPIO_Init(OE_GPIO_Port, &GPIO_InitStruct);
 8001100:	0039      	movs	r1, r7
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8001102:	607e      	str	r6, [r7, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8001104:	60bc      	str	r4, [r7, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8001106:	60fc      	str	r4, [r7, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001108:	613c      	str	r4, [r7, #16]
  LL_GPIO_Init(OE_GPIO_Port, &GPIO_InitStruct);
 800110a:	05c0      	lsls	r0, r0, #23
 800110c:	f001 fcf8 	bl	8002b00 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = LED_Pin;
 8001110:	2120      	movs	r1, #32
  LL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8001112:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Pin = LED_Pin;
 8001114:	910f      	str	r1, [sp, #60]	; 0x3c
  LL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8001116:	05c0      	lsls	r0, r0, #23
 8001118:	0039      	movs	r1, r7
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 800111a:	607e      	str	r6, [r7, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800111c:	60bc      	str	r4, [r7, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 800111e:	60fc      	str	r4, [r7, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001120:	613c      	str	r4, [r7, #16]
  LL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8001122:	f001 fced 	bl	8002b00 <LL_GPIO_Init>
  LL_GPIO_Init(CW_GPIO_Port, &GPIO_InitStruct);
 8001126:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Pin = CW_Pin;
 8001128:	950f      	str	r5, [sp, #60]	; 0x3c
  LL_GPIO_Init(CW_GPIO_Port, &GPIO_InitStruct);
 800112a:	0039      	movs	r1, r7
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 800112c:	607e      	str	r6, [r7, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800112e:	60bc      	str	r4, [r7, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8001130:	60fc      	str	r4, [r7, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001132:	613c      	str	r4, [r7, #16]
  LL_GPIO_Init(CW_GPIO_Port, &GPIO_InitStruct);
 8001134:	05c0      	lsls	r0, r0, #23
 8001136:	f001 fce3 	bl	8002b00 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = CCW_Pin;
 800113a:	2080      	movs	r0, #128	; 0x80
 800113c:	900f      	str	r0, [sp, #60]	; 0x3c
  LL_GPIO_Init(CCW_GPIO_Port, &GPIO_InitStruct);
 800113e:	20a0      	movs	r0, #160	; 0xa0
 8001140:	0039      	movs	r1, r7
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 8001142:	607e      	str	r6, [r7, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8001144:	60bc      	str	r4, [r7, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8001146:	60fc      	str	r4, [r7, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001148:	613c      	str	r4, [r7, #16]
  LL_GPIO_Init(CCW_GPIO_Port, &GPIO_InitStruct);
 800114a:	05c0      	lsls	r0, r0, #23
 800114c:	f001 fcd8 	bl	8002b00 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = BTN_START_Pin;
 8001150:	2202      	movs	r2, #2
  LL_GPIO_Init(BTN_START_GPIO_Port, &GPIO_InitStruct);
 8001152:	0039      	movs	r1, r7
  GPIO_InitStruct.Pin = BTN_START_Pin;
 8001154:	920f      	str	r2, [sp, #60]	; 0x3c
  LL_GPIO_Init(BTN_START_GPIO_Port, &GPIO_InitStruct);
 8001156:	4814      	ldr	r0, [pc, #80]	; (80011a8 <main+0x114>)
  GPIO_InitStruct.Mode = LL_GPIO_MODE_INPUT;
 8001158:	607c      	str	r4, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 800115a:	613e      	str	r6, [r7, #16]
  LL_GPIO_Init(BTN_START_GPIO_Port, &GPIO_InitStruct);
 800115c:	f001 fcd0 	bl	8002b00 <LL_GPIO_Init>
  hi2c1.Instance = I2C1;
 8001160:	4d12      	ldr	r5, [pc, #72]	; (80011ac <main+0x118>)
 8001162:	4b13      	ldr	r3, [pc, #76]	; (80011b0 <main+0x11c>)
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001164:	0028      	movs	r0, r5
  hi2c1.Instance = I2C1;
 8001166:	602b      	str	r3, [r5, #0]
  hi2c1.Init.Timing = 0x00300F38;
 8001168:	4b12      	ldr	r3, [pc, #72]	; (80011b4 <main+0x120>)
  hi2c1.Init.OwnAddress1 = 0;
 800116a:	60ac      	str	r4, [r5, #8]
  hi2c1.Init.Timing = 0x00300F38;
 800116c:	606b      	str	r3, [r5, #4]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800116e:	60ee      	str	r6, [r5, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001170:	612c      	str	r4, [r5, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001172:	616c      	str	r4, [r5, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001174:	61ac      	str	r4, [r5, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001176:	61ec      	str	r4, [r5, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001178:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800117a:	f000 fe91 	bl	8001ea0 <HAL_I2C_Init>
 800117e:	0001      	movs	r1, r0
 8001180:	42a0      	cmp	r0, r4
 8001182:	d001      	beq.n	8001188 <main+0xf4>
 8001184:	b672      	cpsid	i
  while (1)
 8001186:	e7fe      	b.n	8001186 <main+0xf2>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001188:	0028      	movs	r0, r5
 800118a:	f001 f815 	bl	80021b8 <HAL_I2CEx_ConfigAnalogFilter>
 800118e:	1e01      	subs	r1, r0, #0
 8001190:	d001      	beq.n	8001196 <main+0x102>
 8001192:	b672      	cpsid	i
  while (1)
 8001194:	e7fe      	b.n	8001194 <main+0x100>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001196:	0028      	movs	r0, r5
 8001198:	f001 f834 	bl	8002204 <HAL_I2CEx_ConfigDigitalFilter>
 800119c:	1e06      	subs	r6, r0, #0
 800119e:	d00b      	beq.n	80011b8 <main+0x124>
 80011a0:	b672      	cpsid	i
  while (1)
 80011a2:	e7fe      	b.n	80011a2 <main+0x10e>
 80011a4:	50000800 	.word	0x50000800
 80011a8:	50000400 	.word	0x50000400
 80011ac:	200000a8 	.word	0x200000a8
 80011b0:	40005400 	.word	0x40005400
 80011b4:	00300f38 	.word	0x00300f38
  LL_TIM_InitTypeDef TIM_InitStruct = {0};
 80011b8:	233e      	movs	r3, #62	; 0x3e
  SET_BIT(RCC->APB2ENR, Periphs);
 80011ba:	2204      	movs	r2, #4
 80011bc:	4de6      	ldr	r5, [pc, #920]	; (8001558 <main+0x4c4>)
 80011be:	446b      	add	r3, sp
 80011c0:	8018      	strh	r0, [r3, #0]
 80011c2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80011c4:	20ff      	movs	r0, #255	; 0xff
 80011c6:	4313      	orrs	r3, r2
 80011c8:	636b      	str	r3, [r5, #52]	; 0x34
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 80011ca:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80011cc:	49e3      	ldr	r1, [pc, #908]	; (800155c <main+0x4c8>)
 80011ce:	4013      	ands	r3, r2
 80011d0:	22c5      	movs	r2, #197	; 0xc5
 80011d2:	9301      	str	r3, [sp, #4]
 80011d4:	0092      	lsls	r2, r2, #2
  (void)tmpreg;
 80011d6:	9b01      	ldr	r3, [sp, #4]
 80011d8:	588b      	ldr	r3, [r1, r2]
  MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
 80011da:	4ce1      	ldr	r4, [pc, #900]	; (8001560 <main+0x4cc>)
 80011dc:	4383      	bics	r3, r0
 80011de:	508b      	str	r3, [r1, r2]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80011e0:	2380      	movs	r3, #128	; 0x80
 80011e2:	035b      	lsls	r3, r3, #13
 80011e4:	600b      	str	r3, [r1, #0]
  TIM_InitStruct.Prescaler = 31999;
 80011e6:	4bdf      	ldr	r3, [pc, #892]	; (8001564 <main+0x4d0>)
  LL_TIM_Init(TIM21, &TIM_InitStruct);
 80011e8:	0039      	movs	r1, r7
  TIM_InitStruct.Prescaler = 31999;
 80011ea:	803b      	strh	r3, [r7, #0]
  TIM_InitStruct.Autoreload = 499;
 80011ec:	23f4      	movs	r3, #244	; 0xf4
 80011ee:	33ff      	adds	r3, #255	; 0xff
  TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 80011f0:	607e      	str	r6, [r7, #4]
  TIM_InitStruct.Autoreload = 499;
 80011f2:	60bb      	str	r3, [r7, #8]
  TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 80011f4:	60fe      	str	r6, [r7, #12]
  LL_TIM_Init(TIM21, &TIM_InitStruct);
 80011f6:	48dc      	ldr	r0, [pc, #880]	; (8001568 <main+0x4d4>)
 80011f8:	f001 fd82 	bl	8002d00 <LL_TIM_Init>
  SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
 80011fc:	2080      	movs	r0, #128	; 0x80
 80011fe:	4ada      	ldr	r2, [pc, #872]	; (8001568 <main+0x4d4>)
  LL_USART_InitTypeDef USART_InitStruct = {0};
 8001200:	0031      	movs	r1, r6
 8001202:	6813      	ldr	r3, [r2, #0]
 8001204:	4303      	orrs	r3, r0
 8001206:	6013      	str	r3, [r2, #0]
  MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
 8001208:	6893      	ldr	r3, [r2, #8]
 800120a:	4023      	ands	r3, r4
  MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 800120c:	2470      	movs	r4, #112	; 0x70
  MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
 800120e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 8001210:	6853      	ldr	r3, [r2, #4]
 8001212:	43a3      	bics	r3, r4
 8001214:	6053      	str	r3, [r2, #4]
  CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
 8001216:	6893      	ldr	r3, [r2, #8]
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001218:	ac09      	add	r4, sp, #36	; 0x24
 800121a:	4383      	bics	r3, r0
 800121c:	6093      	str	r3, [r2, #8]
  LL_USART_InitTypeDef USART_InitStruct = {0};
 800121e:	0038      	movs	r0, r7
 8001220:	221c      	movs	r2, #28
 8001222:	f001 fe23 	bl	8002e6c <memset>
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001226:	0031      	movs	r1, r6
 8001228:	2218      	movs	r2, #24
 800122a:	0020      	movs	r0, r4
 800122c:	f001 fe1e 	bl	8002e6c <memset>
  SET_BIT(RCC->APB1ENR, Periphs);
 8001230:	2180      	movs	r1, #128	; 0x80
 8001232:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8001234:	0289      	lsls	r1, r1, #10
 8001236:	430a      	orrs	r2, r1
 8001238:	63aa      	str	r2, [r5, #56]	; 0x38
  tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 800123a:	6bab      	ldr	r3, [r5, #56]	; 0x38
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 800123c:	2001      	movs	r0, #1
 800123e:	400b      	ands	r3, r1
 8001240:	9302      	str	r3, [sp, #8]
  (void)tmpreg;
 8001242:	9b02      	ldr	r3, [sp, #8]
 8001244:	f7ff fb10 	bl	8000868 <LL_IOP_GRP1_EnableClock>
  GPIO_InitStruct.Pin = LL_GPIO_PIN_2;
 8001248:	2304      	movs	r3, #4
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 800124a:	2003      	movs	r0, #3
  GPIO_InitStruct.Pin = LL_GPIO_PIN_2;
 800124c:	9309      	str	r3, [sp, #36]	; 0x24
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 800124e:	2502      	movs	r5, #2
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 8001250:	60a0      	str	r0, [r4, #8]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001252:	20a0      	movs	r0, #160	; 0xa0
 8001254:	0021      	movs	r1, r4
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8001256:	6065      	str	r5, [r4, #4]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8001258:	60e6      	str	r6, [r4, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800125a:	6126      	str	r6, [r4, #16]
  GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 800125c:	6163      	str	r3, [r4, #20]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800125e:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 8001260:	001d      	movs	r5, r3
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001262:	f001 fc4d 	bl	8002b00 <LL_GPIO_Init>
  GPIO_InitStruct.Pin = LL_GPIO_PIN_3;
 8001266:	2308      	movs	r3, #8
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 8001268:	2003      	movs	r0, #3
  GPIO_InitStruct.Pin = LL_GPIO_PIN_3;
 800126a:	9309      	str	r3, [sp, #36]	; 0x24
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 800126c:	60a0      	str	r0, [r4, #8]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800126e:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8001270:	3b06      	subs	r3, #6
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001272:	0021      	movs	r1, r4
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8001274:	6063      	str	r3, [r4, #4]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8001276:	60e6      	str	r6, [r4, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001278:	6126      	str	r6, [r4, #16]
  GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 800127a:	6165      	str	r5, [r4, #20]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800127c:	05c0      	lsls	r0, r0, #23
 800127e:	f001 fc3f 	bl	8002b00 <LL_GPIO_Init>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001282:	22c7      	movs	r2, #199	; 0xc7
 8001284:	49b5      	ldr	r1, [pc, #724]	; (800155c <main+0x4c8>)
 8001286:	0092      	lsls	r2, r2, #2
 8001288:	588b      	ldr	r3, [r1, r2]
 800128a:	35fb      	adds	r5, #251	; 0xfb
 800128c:	43ab      	bics	r3, r5
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800128e:	2580      	movs	r5, #128	; 0x80
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001290:	508b      	str	r3, [r1, r2]
  USART_InitStruct.BaudRate = 9600;
 8001292:	2396      	movs	r3, #150	; 0x96
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001294:	056d      	lsls	r5, r5, #21
 8001296:	600d      	str	r5, [r1, #0]
  USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_8;
 8001298:	2580      	movs	r5, #128	; 0x80
  USART_InitStruct.BaudRate = 9600;
 800129a:	019b      	lsls	r3, r3, #6
 800129c:	603b      	str	r3, [r7, #0]
  USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 800129e:	230c      	movs	r3, #12
  USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_8;
 80012a0:	022d      	lsls	r5, r5, #8
 80012a2:	61bd      	str	r5, [r7, #24]
  LL_USART_Init(USART2, &USART_InitStruct);
 80012a4:	4db1      	ldr	r5, [pc, #708]	; (800156c <main+0x4d8>)
 80012a6:	0039      	movs	r1, r7
  USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 80012a8:	607e      	str	r6, [r7, #4]
  USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 80012aa:	60be      	str	r6, [r7, #8]
  USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 80012ac:	60fe      	str	r6, [r7, #12]
  USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 80012ae:	613b      	str	r3, [r7, #16]
  USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 80012b0:	617e      	str	r6, [r7, #20]
  LL_USART_Init(USART2, &USART_InitStruct);
 80012b2:	0028      	movs	r0, r5
 80012b4:	f001 fd4a 	bl	8002d4c <LL_USART_Init>
  * @param  USARTx USART Instance
  * @retval None
  */
__STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
{
  SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
 80012b8:	2080      	movs	r0, #128	; 0x80
 80012ba:	68ab      	ldr	r3, [r5, #8]
 80012bc:	0140      	lsls	r0, r0, #5
 80012be:	4303      	orrs	r3, r0
 80012c0:	60ab      	str	r3, [r5, #8]
  * @param  USARTx USART Instance
  * @retval None
  */
__STATIC_INLINE void LL_USART_DisableDMADeactOnRxErr(USART_TypeDef *USARTx)
{
  CLEAR_BIT(USARTx->CR3, USART_CR3_DDRE);
 80012c2:	68ab      	ldr	r3, [r5, #8]
 80012c4:	4aaa      	ldr	r2, [pc, #680]	; (8001570 <main+0x4dc>)
  SET_BIT(USARTx->CR1, USART_CR1_UE);
 80012c6:	2001      	movs	r0, #1
  CLEAR_BIT(USARTx->CR3, USART_CR3_DDRE);
 80012c8:	4013      	ands	r3, r2
 80012ca:	60ab      	str	r3, [r5, #8]
  CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80012cc:	686b      	ldr	r3, [r5, #4]
 80012ce:	4aa9      	ldr	r2, [pc, #676]	; (8001574 <main+0x4e0>)
  LL_TIM_InitTypeDef TIM_InitStruct = {0};
 80012d0:	0031      	movs	r1, r6
 80012d2:	4013      	ands	r3, r2
  CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 80012d4:	222a      	movs	r2, #42	; 0x2a
  CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80012d6:	606b      	str	r3, [r5, #4]
  CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 80012d8:	68ab      	ldr	r3, [r5, #8]
 80012da:	4393      	bics	r3, r2
 80012dc:	60ab      	str	r3, [r5, #8]
  SET_BIT(USARTx->CR1, USART_CR1_UE);
 80012de:	682b      	ldr	r3, [r5, #0]
 80012e0:	3a1a      	subs	r2, #26
 80012e2:	4303      	orrs	r3, r0
 80012e4:	602b      	str	r3, [r5, #0]
 80012e6:	0020      	movs	r0, r4
 80012e8:	f001 fdc0 	bl	8002e6c <memset>
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012ec:	0031      	movs	r1, r6
 80012ee:	2218      	movs	r2, #24
 80012f0:	0038      	movs	r0, r7
 80012f2:	f001 fdbb 	bl	8002e6c <memset>
  SET_BIT(RCC->APB1ENR, Periphs);
 80012f6:	2001      	movs	r0, #1
 80012f8:	4a97      	ldr	r2, [pc, #604]	; (8001558 <main+0x4c4>)
 80012fa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80012fc:	4303      	orrs	r3, r0
 80012fe:	6393      	str	r3, [r2, #56]	; 0x38
  tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 8001300:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001302:	4003      	ands	r3, r0
 8001304:	9303      	str	r3, [sp, #12]
  (void)tmpreg;
 8001306:	9b03      	ldr	r3, [sp, #12]
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 8001308:	f7ff faae 	bl	8000868 <LL_IOP_GRP1_EnableClock>
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 800130c:	2302      	movs	r3, #2
  GPIO_InitStruct.Pin = LL_GPIO_PIN_4;
 800130e:	2210      	movs	r2, #16
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001310:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8001312:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Alternate = LL_GPIO_AF_5;
 8001314:	3303      	adds	r3, #3
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001316:	0039      	movs	r1, r7
  GPIO_InitStruct.Pin = LL_GPIO_PIN_4;
 8001318:	603a      	str	r2, [r7, #0]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 800131a:	60be      	str	r6, [r7, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 800131c:	60fe      	str	r6, [r7, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 800131e:	613e      	str	r6, [r7, #16]
  GPIO_InitStruct.Alternate = LL_GPIO_AF_5;
 8001320:	617b      	str	r3, [r7, #20]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001322:	05c0      	lsls	r0, r0, #23
 8001324:	f001 fbec 	bl	8002b00 <LL_GPIO_Init>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001328:	22c3      	movs	r2, #195	; 0xc3
 800132a:	498c      	ldr	r1, [pc, #560]	; (800155c <main+0x4c8>)
 800132c:	0092      	lsls	r2, r2, #2
 800132e:	588b      	ldr	r3, [r1, r2]
  LL_TIM_Init(TIM2, &TIM_InitStruct);
 8001330:	2080      	movs	r0, #128	; 0x80
 8001332:	021b      	lsls	r3, r3, #8
 8001334:	0a1b      	lsrs	r3, r3, #8
 8001336:	508b      	str	r3, [r1, r2]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001338:	2380      	movs	r3, #128	; 0x80
 800133a:	021b      	lsls	r3, r3, #8
 800133c:	600b      	str	r3, [r1, #0]
  TIM_InitStruct.Autoreload = timer_preload;
 800133e:	2307      	movs	r3, #7
 8001340:	60a3      	str	r3, [r4, #8]
  TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV2;
 8001342:	33f9      	adds	r3, #249	; 0xf9
  LL_TIM_Init(TIM2, &TIM_InitStruct);
 8001344:	0021      	movs	r1, r4
  TIM_InitStruct.Prescaler = 0;
 8001346:	8026      	strh	r6, [r4, #0]
  TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 8001348:	6066      	str	r6, [r4, #4]
  TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV2;
 800134a:	60e3      	str	r3, [r4, #12]
  LL_TIM_Init(TIM2, &TIM_InitStruct);
 800134c:	05c0      	lsls	r0, r0, #23
 800134e:	f001 fcd7 	bl	8002d00 <LL_TIM_Init>
  SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
 8001352:	2080      	movs	r0, #128	; 0x80
 8001354:	2180      	movs	r1, #128	; 0x80
 8001356:	05c0      	lsls	r0, r0, #23
 8001358:	6803      	ldr	r3, [r0, #0]
  MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | ETRFilter);
 800135a:	4a87      	ldr	r2, [pc, #540]	; (8001578 <main+0x4e4>)
  SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
 800135c:	430b      	orrs	r3, r1
 800135e:	6003      	str	r3, [r0, #0]
  MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | ETRFilter);
 8001360:	6883      	ldr	r3, [r0, #8]
 8001362:	401a      	ands	r2, r3
 8001364:	238e      	movs	r3, #142	; 0x8e
 8001366:	021b      	lsls	r3, r3, #8
 8001368:	4313      	orrs	r3, r2
 800136a:	6083      	str	r3, [r0, #8]
  MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
 800136c:	6883      	ldr	r3, [r0, #8]
 800136e:	4a7c      	ldr	r2, [pc, #496]	; (8001560 <main+0x4cc>)
 8001370:	4013      	ands	r3, r2
 8001372:	2280      	movs	r2, #128	; 0x80
 8001374:	01d2      	lsls	r2, r2, #7
 8001376:	4313      	orrs	r3, r2
  MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 8001378:	2270      	movs	r2, #112	; 0x70
  MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
 800137a:	6083      	str	r3, [r0, #8]
  MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 800137c:	6843      	ldr	r3, [r0, #4]
 800137e:	4393      	bics	r3, r2
 8001380:	6043      	str	r3, [r0, #4]
  CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
 8001382:	6883      	ldr	r3, [r0, #8]
  LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 8001384:	3a5c      	subs	r2, #92	; 0x5c
 8001386:	438b      	bics	r3, r1
 8001388:	6083      	str	r3, [r0, #8]
 800138a:	0031      	movs	r1, r6
 800138c:	0020      	movs	r0, r4
 800138e:	f001 fd6d 	bl	8002e6c <memset>
  LL_ADC_InitTypeDef ADC_InitStruct = {0};
 8001392:	ab05      	add	r3, sp, #20
 8001394:	0031      	movs	r1, r6
 8001396:	0018      	movs	r0, r3
 8001398:	2210      	movs	r2, #16
 800139a:	f001 fd67 	bl	8002e6c <memset>
  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 800139e:	0031      	movs	r1, r6
 80013a0:	2218      	movs	r2, #24
 80013a2:	0038      	movs	r0, r7
 80013a4:	f001 fd62 	bl	8002e6c <memset>
  SET_BIT(RCC->APB2ENR, Periphs);
 80013a8:	2180      	movs	r1, #128	; 0x80
 80013aa:	4b6b      	ldr	r3, [pc, #428]	; (8001558 <main+0x4c4>)
 80013ac:	0089      	lsls	r1, r1, #2
 80013ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 80013b0:	2001      	movs	r0, #1
 80013b2:	430a      	orrs	r2, r1
 80013b4:	635a      	str	r2, [r3, #52]	; 0x34
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 80013b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80013b8:	400b      	ands	r3, r1
 80013ba:	9304      	str	r3, [sp, #16]
  (void)tmpreg;
 80013bc:	9b04      	ldr	r3, [sp, #16]
 80013be:	f7ff fa53 	bl	8000868 <LL_IOP_GRP1_EnableClock>
  GPIO_InitStruct.Pin = LL_GPIO_PIN_0;
 80013c2:	2301      	movs	r3, #1
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013c4:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Pin = LL_GPIO_PIN_0;
 80013c6:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 80013c8:	3302      	adds	r3, #2
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013ca:	0039      	movs	r1, r7
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 80013cc:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80013ce:	613e      	str	r6, [r7, #16]
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80013d0:	27c3      	movs	r7, #195	; 0xc3
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013d2:	05c0      	lsls	r0, r0, #23
 80013d4:	f001 fb94 	bl	8002b00 <LL_GPIO_Init>
 80013d8:	21ff      	movs	r1, #255	; 0xff
 80013da:	4a60      	ldr	r2, [pc, #384]	; (800155c <main+0x4c8>)
 80013dc:	00bf      	lsls	r7, r7, #2
 80013de:	59d3      	ldr	r3, [r2, r7]
 80013e0:	438b      	bics	r3, r1
 80013e2:	51d3      	str	r3, [r2, r7]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013e4:	2780      	movs	r7, #128	; 0x80
 80013e6:	017f      	lsls	r7, r7, #5
 80013e8:	6017      	str	r7, [r2, #0]
  SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
 80013ea:	4f64      	ldr	r7, [pc, #400]	; (800157c <main+0x4e8>)
 80013ec:	39fe      	subs	r1, #254	; 0xfe
 80013ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
  LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 80013f0:	0038      	movs	r0, r7
 80013f2:	430b      	orrs	r3, r1
 80013f4:	62bb      	str	r3, [r7, #40]	; 0x28
 80013f6:	0021      	movs	r1, r4
  ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
 80013f8:	9609      	str	r6, [sp, #36]	; 0x24
  ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 80013fa:	6066      	str	r6, [r4, #4]
  ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 80013fc:	60a6      	str	r6, [r4, #8]
  ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 80013fe:	60e6      	str	r6, [r4, #12]
  ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 8001400:	6126      	str	r6, [r4, #16]
  LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 8001402:	f001 fb63 	bl	8002acc <LL_ADC_REG_Init>
  MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
 8001406:	2104      	movs	r1, #4
  MODIFY_REG(ADCx->SMPR, ADC_SMPR_SMP, SamplingTime);
 8001408:	2407      	movs	r4, #7
  MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
 800140a:	0008      	movs	r0, r1
  MODIFY_REG(ADCx->SMPR, ADC_SMPR_SMP, SamplingTime);
 800140c:	697b      	ldr	r3, [r7, #20]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_LFMEN, CommonFrequencyMode);
 800140e:	4a5c      	ldr	r2, [pc, #368]	; (8001580 <main+0x4ec>)
  MODIFY_REG(ADCx->SMPR, ADC_SMPR_SMP, SamplingTime);
 8001410:	43a3      	bics	r3, r4
 8001412:	3c04      	subs	r4, #4
 8001414:	4323      	orrs	r3, r4
 8001416:	617b      	str	r3, [r7, #20]
  MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
 8001418:	693b      	ldr	r3, [r7, #16]
 800141a:	3c02      	subs	r4, #2
 800141c:	43a3      	bics	r3, r4
 800141e:	613b      	str	r3, [r7, #16]
  MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
 8001420:	68fb      	ldr	r3, [r7, #12]
 8001422:	438b      	bics	r3, r1
 8001424:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_LFMEN, CommonFrequencyMode);
 8001426:	6813      	ldr	r3, [r2, #0]
 8001428:	4956      	ldr	r1, [pc, #344]	; (8001584 <main+0x4f0>)
 800142a:	400b      	ands	r3, r1
 800142c:	6013      	str	r3, [r2, #0]
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
{
  CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
 800142e:	687b      	ldr	r3, [r7, #4]
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
{
  CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
 8001430:	1801      	adds	r1, r0, r0
  CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
 8001432:	4383      	bics	r3, r0
  ADC_InitStruct.Clock = LL_ADC_CLOCK_SYNC_PCLK_DIV2;
 8001434:	2080      	movs	r0, #128	; 0x80
 8001436:	607b      	str	r3, [r7, #4]
  CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
 8001438:	687b      	ldr	r3, [r7, #4]
 800143a:	05c0      	lsls	r0, r0, #23
 800143c:	438b      	bics	r3, r1
 800143e:	607b      	str	r3, [r7, #4]
  LL_ADC_Init(ADC1, &ADC_InitStruct);
 8001440:	a905      	add	r1, sp, #20
  ADC_InitStruct.Clock = LL_ADC_CLOCK_SYNC_PCLK_DIV2;
 8001442:	9005      	str	r0, [sp, #20]
  LL_ADC_Init(ADC1, &ADC_InitStruct);
 8001444:	0038      	movs	r0, r7
  ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 8001446:	9606      	str	r6, [sp, #24]
  ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 8001448:	9607      	str	r6, [sp, #28]
  ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 800144a:	9608      	str	r6, [sp, #32]
  LL_ADC_Init(ADC1, &ADC_InitStruct);
 800144c:	f001 fb22 	bl	8002a94 <LL_ADC_Init>
  MODIFY_REG(ADCx->CR,
 8001450:	2180      	movs	r1, #128	; 0x80
 8001452:	4a4d      	ldr	r2, [pc, #308]	; (8001588 <main+0x4f4>)
 8001454:	68bb      	ldr	r3, [r7, #8]
 8001456:	0549      	lsls	r1, r1, #21
 8001458:	4013      	ands	r3, r2
 800145a:	430b      	orrs	r3, r1
 800145c:	60bb      	str	r3, [r7, #8]
  volatile uint32_t SystemFreq = HAL_RCC_GetHCLKFreq();
 800145e:	f001 fa59 	bl	8002914 <HAL_RCC_GetHCLKFreq>
 8001462:	900f      	str	r0, [sp, #60]	; 0x3c
  lcdInit();
 8001464:	f7ff f9e5 	bl	8000832 <lcdInit>
  lcdBackLightOn();
 8001468:	f7ff f9f2 	bl	8000850 <lcdBackLightOn>
  lcdClrScr();
 800146c:	f7ff f950 	bl	8000710 <lcdClrScr>
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 8001470:	4a3d      	ldr	r2, [pc, #244]	; (8001568 <main+0x4d4>)
 8001472:	6813      	ldr	r3, [r2, #0]
 8001474:	4323      	orrs	r3, r4
 8001476:	6013      	str	r3, [r2, #0]
  SET_BIT(TIMx->DIER, TIM_DIER_UIE);
 8001478:	68d3      	ldr	r3, [r2, #12]
 800147a:	4323      	orrs	r3, r4
 800147c:	60d3      	str	r3, [r2, #12]
 800147e:	682b      	ldr	r3, [r5, #0]
 8001480:	4323      	orrs	r3, r4
 8001482:	602b      	str	r3, [r5, #0]
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8001484:	f3ef 8210 	mrs	r2, PRIMASK
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8001488:	f384 8810 	msr	PRIMASK, r4
  ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
 800148c:	2120      	movs	r1, #32
 800148e:	682b      	ldr	r3, [r5, #0]
 8001490:	430b      	orrs	r3, r1
 8001492:	602b      	str	r3, [r5, #0]
 8001494:	f382 8810 	msr	PRIMASK, r2
  isPushCW = 2;
 8001498:	2502      	movs	r5, #2
 800149a:	4b3c      	ldr	r3, [pc, #240]	; (800158c <main+0x4f8>)
  imp_count = 0;
 800149c:	4a3c      	ldr	r2, [pc, #240]	; (8001590 <main+0x4fc>)
  isPushCW = 2;
 800149e:	601d      	str	r5, [r3, #0]
  dir_azimuth = 0;
 80014a0:	4b3c      	ldr	r3, [pc, #240]	; (8001594 <main+0x500>)
  dir_gradus = 0;
 80014a2:	4c3d      	ldr	r4, [pc, #244]	; (8001598 <main+0x504>)
  dir_azimuth = 0;
 80014a4:	601e      	str	r6, [r3, #0]
  time_on_cw = 0;
 80014a6:	4b3d      	ldr	r3, [pc, #244]	; (800159c <main+0x508>)
  if (HAL_GPIO_ReadPin(BTN_START_GPIO_Port, BTN_START_Pin) == GPIO_PIN_RESET){
 80014a8:	0029      	movs	r1, r5
  time_on_cw = 0;
 80014aa:	601e      	str	r6, [r3, #0]
  time_on_ccw = 0;
 80014ac:	4b3c      	ldr	r3, [pc, #240]	; (80015a0 <main+0x50c>)
  if (HAL_GPIO_ReadPin(BTN_START_GPIO_Port, BTN_START_Pin) == GPIO_PIN_RESET){
 80014ae:	483d      	ldr	r0, [pc, #244]	; (80015a4 <main+0x510>)
  time_on_ccw = 0;
 80014b0:	601e      	str	r6, [r3, #0]
  flag_stop = 0;
 80014b2:	4b3d      	ldr	r3, [pc, #244]	; (80015a8 <main+0x514>)
  imp_count = 0;
 80014b4:	6016      	str	r6, [r2, #0]
  flag_stop = 0;
 80014b6:	701e      	strb	r6, [r3, #0]
  flag_status = 0;
 80014b8:	4b3c      	ldr	r3, [pc, #240]	; (80015ac <main+0x518>)
  dir_gradus = 0;
 80014ba:	6026      	str	r6, [r4, #0]
  flag_status = 0;
 80014bc:	701e      	strb	r6, [r3, #0]
  flag_move=0;
 80014be:	4b3c      	ldr	r3, [pc, #240]	; (80015b0 <main+0x51c>)
 80014c0:	701e      	strb	r6, [r3, #0]
  if (HAL_GPIO_ReadPin(BTN_START_GPIO_Port, BTN_START_Pin) == GPIO_PIN_RESET){
 80014c2:	f000 fc07 	bl	8001cd4 <HAL_GPIO_ReadPin>
 80014c6:	2800      	cmp	r0, #0
 80014c8:	d101      	bne.n	80014ce <main+0x43a>
	  SetDefault();
 80014ca:	f7ff fd09 	bl	8000ee0 <SetDefault>
  LL_mDelay(5);
 80014ce:	2005      	movs	r0, #5
 80014d0:	f001 fc8c 	bl	8002dec <LL_mDelay>
  return (*(__IO uint32_t *)address);
 80014d4:	4b37      	ldr	r3, [pc, #220]	; (80015b4 <main+0x520>)
  gradus = ReadFromEEPROM(EEPROM_ADDRESS_START);
 80014d6:	4d38      	ldr	r5, [pc, #224]	; (80015b8 <main+0x524>)
  return (*(__IO uint32_t *)address);
 80014d8:	681b      	ldr	r3, [r3, #0]
 80014da:	4a38      	ldr	r2, [pc, #224]	; (80015bc <main+0x528>)
  gradus = ReadFromEEPROM(EEPROM_ADDRESS_START);
 80014dc:	602b      	str	r3, [r5, #0]
  return (*(__IO uint32_t *)address);
 80014de:	6812      	ldr	r2, [r2, #0]
  man_azimuth = ReadFromEEPROM(EEPROM_ADDRESS_START + sizeof(man_azimuth));
 80014e0:	4e37      	ldr	r6, [pc, #220]	; (80015c0 <main+0x52c>)
 80014e2:	6032      	str	r2, [r6, #0]
  imp_count = gradus;
 80014e4:	4a2a      	ldr	r2, [pc, #168]	; (8001590 <main+0x4fc>)
 80014e6:	6013      	str	r3, [r2, #0]
  ShowStartAzimuth ();
 80014e8:	f7ff fb46 	bl	8000b78 <ShowStartAzimuth>
  str_rx[0] = 0;
 80014ec:	2200      	movs	r2, #0
 80014ee:	4b35      	ldr	r3, [pc, #212]	; (80015c4 <main+0x530>)
   LL_mDelay(5);
 80014f0:	2005      	movs	r0, #5
  str_rx[0] = 0;
 80014f2:	701a      	strb	r2, [r3, #0]
  str_rx[1] = 0;
 80014f4:	705a      	strb	r2, [r3, #1]
  str_rx[2] = 0;
 80014f6:	709a      	strb	r2, [r3, #2]
  str_rx[3] = 0;
 80014f8:	70da      	strb	r2, [r3, #3]
  str_rx[4] = 0;
 80014fa:	711a      	strb	r2, [r3, #4]
  str_rx[5] = 0;
 80014fc:	715a      	strb	r2, [r3, #5]
  MODIFY_REG(ADCx->CR,
 80014fe:	68bb      	ldr	r3, [r7, #8]
 8001500:	4a31      	ldr	r2, [pc, #196]	; (80015c8 <main+0x534>)
 8001502:	401a      	ands	r2, r3
 8001504:	2380      	movs	r3, #128	; 0x80
 8001506:	061b      	lsls	r3, r3, #24
 8001508:	4313      	orrs	r3, r2
 800150a:	60bb      	str	r3, [r7, #8]
   LL_mDelay(5);
 800150c:	f001 fc6e 	bl	8002dec <LL_mDelay>
			flag_eeprom=1;
 8001510:	2701      	movs	r7, #1
   CheckADC();
 8001512:	f7ff fd2d 	bl	8000f70 <CheckADC>
		CheckADC();
 8001516:	f7ff fd2b 	bl	8000f70 <CheckADC>
		if (flag_adc == 0) {
 800151a:	4b2c      	ldr	r3, [pc, #176]	; (80015cc <main+0x538>)
 800151c:	781b      	ldrb	r3, [r3, #0]
 800151e:	2b00      	cmp	r3, #0
 8001520:	d116      	bne.n	8001550 <main+0x4bc>
			flag_eeprom=1;
 8001522:	4b2b      	ldr	r3, [pc, #172]	; (80015d0 <main+0x53c>)
 8001524:	701f      	strb	r7, [r3, #0]
			if (man_azimuth >= 180)
 8001526:	6833      	ldr	r3, [r6, #0]
 8001528:	2bb3      	cmp	r3, #179	; 0xb3
 800152a:	d901      	bls.n	8001530 <main+0x49c>
				dir_azimuth = man_azimuth - 360;
 800152c:	3b69      	subs	r3, #105	; 0x69
 800152e:	3bff      	subs	r3, #255	; 0xff
 8001530:	4a18      	ldr	r2, [pc, #96]	; (8001594 <main+0x500>)
 8001532:	6013      	str	r3, [r2, #0]
			if (gradus >= 180)
 8001534:	682b      	ldr	r3, [r5, #0]
 8001536:	2bb3      	cmp	r3, #179	; 0xb3
 8001538:	d901      	bls.n	800153e <main+0x4aa>
				dir_gradus = gradus - 360;
 800153a:	3b69      	subs	r3, #105	; 0x69
 800153c:	3bff      	subs	r3, #255	; 0xff
 800153e:	6023      	str	r3, [r4, #0]
			ReadCWButton();
 8001540:	f7ff fb48 	bl	8000bd4 <ReadCWButton>
			ReadCCWButton();
 8001544:	f7ff fb96 	bl	8000c74 <ReadCCWButton>
			ReadStartButton();
 8001548:	f7ff fbe4 	bl	8000d14 <ReadStartButton>
			CheckUSART();
 800154c:	f7ff faea 	bl	8000b24 <CheckUSART>
		LL_mDelay(10);
 8001550:	200a      	movs	r0, #10
 8001552:	f001 fc4b 	bl	8002dec <LL_mDelay>
		CheckADC();
 8001556:	e7de      	b.n	8001516 <main+0x482>
 8001558:	40021000 	.word	0x40021000
 800155c:	e000e100 	.word	0xe000e100
 8001560:	ffffbff8 	.word	0xffffbff8
 8001564:	00007cff 	.word	0x00007cff
 8001568:	40010800 	.word	0x40010800
 800156c:	40004400 	.word	0x40004400
 8001570:	ffffdfff 	.word	0xffffdfff
 8001574:	ffffb7ff 	.word	0xffffb7ff
 8001578:	ffff40ff 	.word	0xffff40ff
 800157c:	40012400 	.word	0x40012400
 8001580:	40012708 	.word	0x40012708
 8001584:	fdffffff 	.word	0xfdffffff
 8001588:	6fffffe8 	.word	0x6fffffe8
 800158c:	200000f8 	.word	0x200000f8
 8001590:	200000f4 	.word	0x200000f4
 8001594:	20000094 	.word	0x20000094
 8001598:	20000098 	.word	0x20000098
 800159c:	20000124 	.word	0x20000124
 80015a0:	20000120 	.word	0x20000120
 80015a4:	50000400 	.word	0x50000400
 80015a8:	200000a0 	.word	0x200000a0
 80015ac:	2000009f 	.word	0x2000009f
 80015b0:	2000009e 	.word	0x2000009e
 80015b4:	08080000 	.word	0x08080000
 80015b8:	200000a4 	.word	0x200000a4
 80015bc:	08080004 	.word	0x08080004
 80015c0:	200000fc 	.word	0x200000fc
 80015c4:	20000100 	.word	0x20000100
 80015c8:	7fffffe8 	.word	0x7fffffe8
 80015cc:	2000009c 	.word	0x2000009c
 80015d0:	2000009d 	.word	0x2000009d

080015d4 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80015d4:	2201      	movs	r2, #1
 80015d6:	4b05      	ldr	r3, [pc, #20]	; (80015ec <HAL_MspInit+0x18>)
 80015d8:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80015da:	430a      	orrs	r2, r1
 80015dc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 80015de:	2280      	movs	r2, #128	; 0x80
 80015e0:	6b99      	ldr	r1, [r3, #56]	; 0x38
 80015e2:	0552      	lsls	r2, r2, #21
 80015e4:	430a      	orrs	r2, r1
 80015e6:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80015e8:	4770      	bx	lr
 80015ea:	46c0      	nop			; (mov r8, r8)
 80015ec:	40021000 	.word	0x40021000

080015f0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80015f0:	b510      	push	{r4, lr}
 80015f2:	0004      	movs	r4, r0
 80015f4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015f6:	2214      	movs	r2, #20
 80015f8:	2100      	movs	r1, #0
 80015fa:	a801      	add	r0, sp, #4
 80015fc:	f001 fc36 	bl	8002e6c <memset>
  if(hi2c->Instance==I2C1)
 8001600:	4b10      	ldr	r3, [pc, #64]	; (8001644 <HAL_I2C_MspInit+0x54>)
 8001602:	6822      	ldr	r2, [r4, #0]
 8001604:	429a      	cmp	r2, r3
 8001606:	d11b      	bne.n	8001640 <HAL_I2C_MspInit+0x50>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001608:	2301      	movs	r3, #1
 800160a:	4c0f      	ldr	r4, [pc, #60]	; (8001648 <HAL_I2C_MspInit+0x58>)
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800160c:	20a0      	movs	r0, #160	; 0xa0
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800160e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001610:	a901      	add	r1, sp, #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001612:	431a      	orrs	r2, r3
 8001614:	62e2      	str	r2, [r4, #44]	; 0x2c
 8001616:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001618:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800161a:	401a      	ands	r2, r3
 800161c:	9200      	str	r2, [sp, #0]
 800161e:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8001620:	22c0      	movs	r2, #192	; 0xc0
 8001622:	00d2      	lsls	r2, r2, #3
 8001624:	9201      	str	r2, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001626:	2212      	movs	r2, #18
 8001628:	9202      	str	r2, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800162a:	3a0f      	subs	r2, #15
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800162c:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800162e:	9204      	str	r2, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 8001630:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001632:	f000 faa3 	bl	8001b7c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001636:	2380      	movs	r3, #128	; 0x80
 8001638:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800163a:	039b      	lsls	r3, r3, #14
 800163c:	4313      	orrs	r3, r2
 800163e:	63a3      	str	r3, [r4, #56]	; 0x38
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001640:	b006      	add	sp, #24
 8001642:	bd10      	pop	{r4, pc}
 8001644:	40005400 	.word	0x40005400
 8001648:	40021000 	.word	0x40021000

0800164c <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800164c:	e7fe      	b.n	800164c <NMI_Handler>

0800164e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800164e:	e7fe      	b.n	800164e <HardFault_Handler>

08001650 <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8001650:	4770      	bx	lr

08001652 <PendSV_Handler>:
 8001652:	4770      	bx	lr

08001654 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001654:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001656:	f000 f93b 	bl	80018d0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800165a:	bd10      	pop	{r4, pc}

0800165c <ADC1_IRQHandler>:
 800165c:	4770      	bx	lr
	...

08001660 <TIM2_IRQHandler>:
  return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
 8001660:	2380      	movs	r3, #128	; 0x80
 8001662:	05db      	lsls	r3, r3, #23
 8001664:	691a      	ldr	r2, [r3, #16]

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001666:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM2_IRQn 0 */
	if (LL_TIM_IsActiveFlag_UPDATE(TIM2)) {
 8001668:	07d2      	lsls	r2, r2, #31
 800166a:	d528      	bpl.n	80016be <TIM2_IRQHandler+0x5e>
  WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
 800166c:	2202      	movs	r2, #2
 800166e:	4252      	negs	r2, r2
 8001670:	611a      	str	r2, [r3, #16]
					LL_TIM_ClearFlag_UPDATE(TIM2);
					if (dir_azimuth > dir_gradus){
 8001672:	4814      	ldr	r0, [pc, #80]	; (80016c4 <TIM2_IRQHandler+0x64>)
 8001674:	4b14      	ldr	r3, [pc, #80]	; (80016c8 <TIM2_IRQHandler+0x68>)
						if ( imp_count < ((PULSE_PER_360)/(timer_preload+1))-1) imp_count++; else imp_count = 0;
 8001676:	4a15      	ldr	r2, [pc, #84]	; (80016cc <TIM2_IRQHandler+0x6c>)
					if (dir_azimuth > dir_gradus){
 8001678:	681c      	ldr	r4, [r3, #0]
 800167a:	6801      	ldr	r1, [r0, #0]
						if ( imp_count < ((PULSE_PER_360)/(timer_preload+1))-1) imp_count++; else imp_count = 0;
 800167c:	6813      	ldr	r3, [r2, #0]
					if (dir_azimuth > dir_gradus){
 800167e:	428c      	cmp	r4, r1
 8001680:	dd05      	ble.n	800168e <TIM2_IRQHandler+0x2e>
						if ( imp_count < ((PULSE_PER_360)/(timer_preload+1))-1) imp_count++; else imp_count = 0;
 8001682:	2100      	movs	r1, #0
 8001684:	2b76      	cmp	r3, #118	; 0x76
 8001686:	d800      	bhi.n	800168a <TIM2_IRQHandler+0x2a>
 8001688:	1c59      	adds	r1, r3, #1
 800168a:	6011      	str	r1, [r2, #0]
					}
					if (dir_azimuth < dir_gradus){
 800168c:	e005      	b.n	800169a <TIM2_IRQHandler+0x3a>
 800168e:	428c      	cmp	r4, r1
 8001690:	da03      	bge.n	800169a <TIM2_IRQHandler+0x3a>
						if ( imp_count > 0 ) imp_count--; else imp_count = ((PULSE_PER_360)/(timer_preload+1))-1;
 8001692:	2b00      	cmp	r3, #0
 8001694:	d014      	beq.n	80016c0 <TIM2_IRQHandler+0x60>
 8001696:	3b01      	subs	r3, #1
 8001698:	6013      	str	r3, [r2, #0]
					}
					gradus = imp_count*step;
 800169a:	6813      	ldr	r3, [r2, #0]
 800169c:	2203      	movs	r2, #3
 800169e:	4353      	muls	r3, r2
 80016a0:	4a0b      	ldr	r2, [pc, #44]	; (80016d0 <TIM2_IRQHandler+0x70>)
 80016a2:	6013      	str	r3, [r2, #0]
					if (gradus >= 180) dir_gradus = gradus - 360; else dir_gradus = gradus;
 80016a4:	2bb3      	cmp	r3, #179	; 0xb3
 80016a6:	d901      	bls.n	80016ac <TIM2_IRQHandler+0x4c>
 80016a8:	3b69      	subs	r3, #105	; 0x69
 80016aa:	3bff      	subs	r3, #255	; 0xff
 80016ac:	6003      	str	r3, [r0, #0]
					time_on_cw = HAL_GetTick();
 80016ae:	f000 f91b 	bl	80018e8 <HAL_GetTick>
 80016b2:	4b08      	ldr	r3, [pc, #32]	; (80016d4 <TIM2_IRQHandler+0x74>)
 80016b4:	6018      	str	r0, [r3, #0]
					time_on_ccw = HAL_GetTick();
 80016b6:	f000 f917 	bl	80018e8 <HAL_GetTick>
 80016ba:	4b07      	ldr	r3, [pc, #28]	; (80016d8 <TIM2_IRQHandler+0x78>)
 80016bc:	6018      	str	r0, [r3, #0]
				}
  /* USER CODE END TIM2_IRQn 0 */
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80016be:	bd10      	pop	{r4, pc}
						if ( imp_count > 0 ) imp_count--; else imp_count = ((PULSE_PER_360)/(timer_preload+1))-1;
 80016c0:	2377      	movs	r3, #119	; 0x77
 80016c2:	e7e9      	b.n	8001698 <TIM2_IRQHandler+0x38>
 80016c4:	20000098 	.word	0x20000098
 80016c8:	20000094 	.word	0x20000094
 80016cc:	200000f4 	.word	0x200000f4
 80016d0:	200000a4 	.word	0x200000a4
 80016d4:	20000124 	.word	0x20000124
 80016d8:	20000120 	.word	0x20000120

080016dc <TIM21_IRQHandler>:
  return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
 80016dc:	4b09      	ldr	r3, [pc, #36]	; (8001704 <TIM21_IRQHandler+0x28>)
 80016de:	691a      	ldr	r2, [r3, #16]
  * @brief This function handles TIM21 global interrupt.
  */
void TIM21_IRQHandler(void)
{
  /* USER CODE BEGIN TIM21_IRQn 0 */
	if (LL_TIM_IsActiveFlag_UPDATE(TIM21)) {
 80016e0:	07d2      	lsls	r2, r2, #31
 80016e2:	d50d      	bpl.n	8001700 <TIM21_IRQHandler+0x24>
  WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
 80016e4:	2202      	movs	r2, #2
  *         @arg @ref LL_GPIO_PIN_ALL
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
  uint32_t odr = READ_REG(GPIOx->ODR);
 80016e6:	21a0      	movs	r1, #160	; 0xa0
 80016e8:	4252      	negs	r2, r2
 80016ea:	611a      	str	r2, [r3, #16]
  WRITE_REG(GPIOx->BSRR, ((odr & PinMask) << 16u) | (~odr & PinMask));
 80016ec:	2280      	movs	r2, #128	; 0x80
  uint32_t odr = READ_REG(GPIOx->ODR);
 80016ee:	05c9      	lsls	r1, r1, #23
 80016f0:	6948      	ldr	r0, [r1, #20]
  WRITE_REG(GPIOx->BSRR, ((odr & PinMask) << 16u) | (~odr & PinMask));
 80016f2:	0392      	lsls	r2, r2, #14
 80016f4:	0403      	lsls	r3, r0, #16
 80016f6:	4013      	ands	r3, r2
 80016f8:	2220      	movs	r2, #32
 80016fa:	4382      	bics	r2, r0
 80016fc:	4313      	orrs	r3, r2
 80016fe:	618b      	str	r3, [r1, #24]
			}
  /* USER CODE END TIM21_IRQn 0 */
  /* USER CODE BEGIN TIM21_IRQn 1 */

  /* USER CODE END TIM21_IRQn 1 */
}
 8001700:	4770      	bx	lr
 8001702:	46c0      	nop			; (mov r8, r8)
 8001704:	40010800 	.word	0x40010800

08001708 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI line 26.
  */
void USART2_IRQHandler(void)
{
 8001708:	b570      	push	{r4, r5, r6, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800170a:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800170e:	2401      	movs	r4, #1
 8001710:	f384 8810 	msr	PRIMASK, r4
  ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RXNEIE);
 8001714:	2020      	movs	r0, #32
 8001716:	4a1a      	ldr	r2, [pc, #104]	; (8001780 <USART2_IRQHandler+0x78>)
 8001718:	6813      	ldr	r3, [r2, #0]
 800171a:	4383      	bics	r3, r0
 800171c:	6013      	str	r3, [r2, #0]
 800171e:	f381 8810 	msr	PRIMASK, r1
  /* USER CODE BEGIN USART2_IRQn 0 */
	LL_USART_DisableIT_RXNE(USART2);
	char letter;
	static uint8_t i = 0;
	letter = USART2->RDR;
 8001722:	4918      	ldr	r1, [pc, #96]	; (8001784 <USART2_IRQHandler+0x7c>)
 8001724:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8001726:	4d18      	ldr	r5, [pc, #96]	; (8001788 <USART2_IRQHandler+0x80>)
	if (letter != '\n') {
		str_rx[i] = letter;
 8001728:	780b      	ldrb	r3, [r1, #0]
	letter = USART2->RDR;
 800172a:	b2c0      	uxtb	r0, r0
		str_rx[i] = letter;
 800172c:	54e8      	strb	r0, [r5, r3]
	if (letter != '\n') {
 800172e:	280a      	cmp	r0, #10
 8001730:	d010      	beq.n	8001754 <USART2_IRQHandler+0x4c>
		i++;
 8001732:	191b      	adds	r3, r3, r4
 8001734:	b2db      	uxtb	r3, r3
		if (i == 9)
 8001736:	2b09      	cmp	r3, #9
 8001738:	d01f      	beq.n	800177a <USART2_IRQHandler+0x72>
		else
			flag_move = 0;
		if (str_rx[0] == 'C')
			flag_status = 1;
		else
			flag_status = 0;
 800173a:	700b      	strb	r3, [r1, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800173c:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8001740:	2301      	movs	r3, #1
 8001742:	f383 8810 	msr	PRIMASK, r3
  ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
 8001746:	6810      	ldr	r0, [r2, #0]
 8001748:	331f      	adds	r3, #31
 800174a:	4303      	orrs	r3, r0
 800174c:	6013      	str	r3, [r2, #0]
 800174e:	f381 8810 	msr	PRIMASK, r1
	LL_USART_EnableIT_RXNE(USART2);
  /* USER CODE END USART2_IRQn 0 */
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8001752:	bd70      	pop	{r4, r5, r6, pc}
		i = 0;
 8001754:	2600      	movs	r6, #0
		if (str_rx[0] == 'S')
 8001756:	782b      	ldrb	r3, [r5, #0]
		i = 0;
 8001758:	700e      	strb	r6, [r1, #0]
		if (str_rx[0] == 'S')
 800175a:	4d0c      	ldr	r5, [pc, #48]	; (800178c <USART2_IRQHandler+0x84>)
 800175c:	480c      	ldr	r0, [pc, #48]	; (8001790 <USART2_IRQHandler+0x88>)
 800175e:	490d      	ldr	r1, [pc, #52]	; (8001794 <USART2_IRQHandler+0x8c>)
 8001760:	2b53      	cmp	r3, #83	; 0x53
 8001762:	d106      	bne.n	8001772 <USART2_IRQHandler+0x6a>
			flag_stop = 1;
 8001764:	702c      	strb	r4, [r5, #0]
			flag_move = 0;
 8001766:	2400      	movs	r4, #0
 8001768:	7004      	strb	r4, [r0, #0]
		if (str_rx[0] == 'C')
 800176a:	2b43      	cmp	r3, #67	; 0x43
 800176c:	d105      	bne.n	800177a <USART2_IRQHandler+0x72>
			flag_status = 1;
 800176e:	3b42      	subs	r3, #66	; 0x42
 8001770:	e7e3      	b.n	800173a <USART2_IRQHandler+0x32>
			flag_stop = 0;
 8001772:	702e      	strb	r6, [r5, #0]
		if (str_rx[0] == 'M')
 8001774:	2b4d      	cmp	r3, #77	; 0x4d
 8001776:	d1f6      	bne.n	8001766 <USART2_IRQHandler+0x5e>
			flag_move = 1;
 8001778:	7004      	strb	r4, [r0, #0]
			flag_status = 0;
 800177a:	2300      	movs	r3, #0
 800177c:	e7dd      	b.n	800173a <USART2_IRQHandler+0x32>
 800177e:	46c0      	nop			; (mov r8, r8)
 8001780:	40004400 	.word	0x40004400
 8001784:	20000128 	.word	0x20000128
 8001788:	20000100 	.word	0x20000100
 800178c:	200000a0 	.word	0x200000a0
 8001790:	2000009e 	.word	0x2000009e
 8001794:	2000009f 	.word	0x2000009f

08001798 <_sbrk>:
 8001798:	4a0b      	ldr	r2, [pc, #44]	; (80017c8 <_sbrk+0x30>)
 800179a:	490c      	ldr	r1, [pc, #48]	; (80017cc <_sbrk+0x34>)
 800179c:	0003      	movs	r3, r0
 800179e:	1a89      	subs	r1, r1, r2
 80017a0:	4a0b      	ldr	r2, [pc, #44]	; (80017d0 <_sbrk+0x38>)
 80017a2:	b510      	push	{r4, lr}
 80017a4:	6810      	ldr	r0, [r2, #0]
 80017a6:	2800      	cmp	r0, #0
 80017a8:	d101      	bne.n	80017ae <_sbrk+0x16>
 80017aa:	480a      	ldr	r0, [pc, #40]	; (80017d4 <_sbrk+0x3c>)
 80017ac:	6010      	str	r0, [r2, #0]
 80017ae:	6810      	ldr	r0, [r2, #0]
 80017b0:	18c3      	adds	r3, r0, r3
 80017b2:	428b      	cmp	r3, r1
 80017b4:	d906      	bls.n	80017c4 <_sbrk+0x2c>
 80017b6:	f001 fb2f 	bl	8002e18 <__errno>
 80017ba:	230c      	movs	r3, #12
 80017bc:	6003      	str	r3, [r0, #0]
 80017be:	2001      	movs	r0, #1
 80017c0:	4240      	negs	r0, r0
 80017c2:	bd10      	pop	{r4, pc}
 80017c4:	6013      	str	r3, [r2, #0]
 80017c6:	e7fc      	b.n	80017c2 <_sbrk+0x2a>
 80017c8:	00000400 	.word	0x00000400
 80017cc:	20000800 	.word	0x20000800
 80017d0:	2000012c 	.word	0x2000012c
 80017d4:	20000160 	.word	0x20000160

080017d8 <SystemInit>:
 80017d8:	4770      	bx	lr
	...

080017dc <Reset_Handler>:
 80017dc:	4813      	ldr	r0, [pc, #76]	; (800182c <LoopForever+0x2>)
 80017de:	4685      	mov	sp, r0
 80017e0:	4813      	ldr	r0, [pc, #76]	; (8001830 <LoopForever+0x6>)
 80017e2:	6801      	ldr	r1, [r0, #0]
 80017e4:	0e09      	lsrs	r1, r1, #24
 80017e6:	4a13      	ldr	r2, [pc, #76]	; (8001834 <LoopForever+0xa>)
 80017e8:	4291      	cmp	r1, r2
 80017ea:	d105      	bne.n	80017f8 <ApplicationStart>
 80017ec:	4812      	ldr	r0, [pc, #72]	; (8001838 <LoopForever+0xe>)
 80017ee:	4913      	ldr	r1, [pc, #76]	; (800183c <LoopForever+0x12>)
 80017f0:	6001      	str	r1, [r0, #0]
 80017f2:	4813      	ldr	r0, [pc, #76]	; (8001840 <LoopForever+0x16>)
 80017f4:	4913      	ldr	r1, [pc, #76]	; (8001844 <LoopForever+0x1a>)
 80017f6:	6001      	str	r1, [r0, #0]

080017f8 <ApplicationStart>:
 80017f8:	4813      	ldr	r0, [pc, #76]	; (8001848 <LoopForever+0x1e>)
 80017fa:	4914      	ldr	r1, [pc, #80]	; (800184c <LoopForever+0x22>)
 80017fc:	4a14      	ldr	r2, [pc, #80]	; (8001850 <LoopForever+0x26>)
 80017fe:	2300      	movs	r3, #0
 8001800:	e002      	b.n	8001808 <LoopCopyDataInit>

08001802 <CopyDataInit>:
 8001802:	58d4      	ldr	r4, [r2, r3]
 8001804:	50c4      	str	r4, [r0, r3]
 8001806:	3304      	adds	r3, #4

08001808 <LoopCopyDataInit>:
 8001808:	18c4      	adds	r4, r0, r3
 800180a:	428c      	cmp	r4, r1
 800180c:	d3f9      	bcc.n	8001802 <CopyDataInit>
 800180e:	4a11      	ldr	r2, [pc, #68]	; (8001854 <LoopForever+0x2a>)
 8001810:	4c11      	ldr	r4, [pc, #68]	; (8001858 <LoopForever+0x2e>)
 8001812:	2300      	movs	r3, #0
 8001814:	e001      	b.n	800181a <LoopFillZerobss>

08001816 <FillZerobss>:
 8001816:	6013      	str	r3, [r2, #0]
 8001818:	3204      	adds	r2, #4

0800181a <LoopFillZerobss>:
 800181a:	42a2      	cmp	r2, r4
 800181c:	d3fb      	bcc.n	8001816 <FillZerobss>
 800181e:	f7ff ffdb 	bl	80017d8 <SystemInit>
 8001822:	f001 faff 	bl	8002e24 <__libc_init_array>
 8001826:	f7ff fc35 	bl	8001094 <main>

0800182a <LoopForever>:
 800182a:	e7fe      	b.n	800182a <LoopForever>
 800182c:	20000800 	.word	0x20000800
 8001830:	00000004 	.word	0x00000004
 8001834:	0000001f 	.word	0x0000001f
 8001838:	40021034 	.word	0x40021034
 800183c:	00000001 	.word	0x00000001
 8001840:	40010000 	.word	0x40010000
 8001844:	00000000 	.word	0x00000000
 8001848:	20000000 	.word	0x20000000
 800184c:	20000074 	.word	0x20000074
 8001850:	08003810 	.word	0x08003810
 8001854:	20000074 	.word	0x20000074
 8001858:	2000015c 	.word	0x2000015c

0800185c <DMA1_Channel1_IRQHandler>:
 800185c:	e7fe      	b.n	800185c <DMA1_Channel1_IRQHandler>
	...

08001860 <HAL_InitTick>:
 8001860:	b570      	push	{r4, r5, r6, lr}
 8001862:	0005      	movs	r5, r0
 8001864:	20fa      	movs	r0, #250	; 0xfa
 8001866:	4b0d      	ldr	r3, [pc, #52]	; (800189c <HAL_InitTick+0x3c>)
 8001868:	0080      	lsls	r0, r0, #2
 800186a:	7819      	ldrb	r1, [r3, #0]
 800186c:	f7fe fc60 	bl	8000130 <__udivsi3>
 8001870:	4b0b      	ldr	r3, [pc, #44]	; (80018a0 <HAL_InitTick+0x40>)
 8001872:	0001      	movs	r1, r0
 8001874:	6818      	ldr	r0, [r3, #0]
 8001876:	f7fe fc5b 	bl	8000130 <__udivsi3>
 800187a:	f000 f877 	bl	800196c <HAL_SYSTICK_Config>
 800187e:	0004      	movs	r4, r0
 8001880:	2001      	movs	r0, #1
 8001882:	2c00      	cmp	r4, #0
 8001884:	d109      	bne.n	800189a <HAL_InitTick+0x3a>
 8001886:	2d03      	cmp	r5, #3
 8001888:	d807      	bhi.n	800189a <HAL_InitTick+0x3a>
 800188a:	3802      	subs	r0, #2
 800188c:	0022      	movs	r2, r4
 800188e:	0029      	movs	r1, r5
 8001890:	f000 f842 	bl	8001918 <HAL_NVIC_SetPriority>
 8001894:	0020      	movs	r0, r4
 8001896:	4b03      	ldr	r3, [pc, #12]	; (80018a4 <HAL_InitTick+0x44>)
 8001898:	601d      	str	r5, [r3, #0]
 800189a:	bd70      	pop	{r4, r5, r6, pc}
 800189c:	20000008 	.word	0x20000008
 80018a0:	20000004 	.word	0x20000004
 80018a4:	2000000c 	.word	0x2000000c

080018a8 <HAL_Init>:
 80018a8:	2340      	movs	r3, #64	; 0x40
 80018aa:	4a08      	ldr	r2, [pc, #32]	; (80018cc <HAL_Init+0x24>)
 80018ac:	b510      	push	{r4, lr}
 80018ae:	6811      	ldr	r1, [r2, #0]
 80018b0:	2000      	movs	r0, #0
 80018b2:	430b      	orrs	r3, r1
 80018b4:	6013      	str	r3, [r2, #0]
 80018b6:	f7ff ffd3 	bl	8001860 <HAL_InitTick>
 80018ba:	1e04      	subs	r4, r0, #0
 80018bc:	d103      	bne.n	80018c6 <HAL_Init+0x1e>
 80018be:	f7ff fe89 	bl	80015d4 <HAL_MspInit>
 80018c2:	0020      	movs	r0, r4
 80018c4:	bd10      	pop	{r4, pc}
 80018c6:	2401      	movs	r4, #1
 80018c8:	e7fb      	b.n	80018c2 <HAL_Init+0x1a>
 80018ca:	46c0      	nop			; (mov r8, r8)
 80018cc:	40022000 	.word	0x40022000

080018d0 <HAL_IncTick>:
 80018d0:	4a03      	ldr	r2, [pc, #12]	; (80018e0 <HAL_IncTick+0x10>)
 80018d2:	4b04      	ldr	r3, [pc, #16]	; (80018e4 <HAL_IncTick+0x14>)
 80018d4:	6811      	ldr	r1, [r2, #0]
 80018d6:	781b      	ldrb	r3, [r3, #0]
 80018d8:	185b      	adds	r3, r3, r1
 80018da:	6013      	str	r3, [r2, #0]
 80018dc:	4770      	bx	lr
 80018de:	46c0      	nop			; (mov r8, r8)
 80018e0:	20000130 	.word	0x20000130
 80018e4:	20000008 	.word	0x20000008

080018e8 <HAL_GetTick>:
 80018e8:	4b01      	ldr	r3, [pc, #4]	; (80018f0 <HAL_GetTick+0x8>)
 80018ea:	6818      	ldr	r0, [r3, #0]
 80018ec:	4770      	bx	lr
 80018ee:	46c0      	nop			; (mov r8, r8)
 80018f0:	20000130 	.word	0x20000130

080018f4 <HAL_Delay>:
 80018f4:	b570      	push	{r4, r5, r6, lr}
 80018f6:	0004      	movs	r4, r0
 80018f8:	f7ff fff6 	bl	80018e8 <HAL_GetTick>
 80018fc:	0005      	movs	r5, r0
 80018fe:	1c63      	adds	r3, r4, #1
 8001900:	d002      	beq.n	8001908 <HAL_Delay+0x14>
 8001902:	4b04      	ldr	r3, [pc, #16]	; (8001914 <HAL_Delay+0x20>)
 8001904:	781b      	ldrb	r3, [r3, #0]
 8001906:	18e4      	adds	r4, r4, r3
 8001908:	f7ff ffee 	bl	80018e8 <HAL_GetTick>
 800190c:	1b40      	subs	r0, r0, r5
 800190e:	42a0      	cmp	r0, r4
 8001910:	d3fa      	bcc.n	8001908 <HAL_Delay+0x14>
 8001912:	bd70      	pop	{r4, r5, r6, pc}
 8001914:	20000008 	.word	0x20000008

08001918 <HAL_NVIC_SetPriority>:
 8001918:	b530      	push	{r4, r5, lr}
 800191a:	25ff      	movs	r5, #255	; 0xff
 800191c:	2403      	movs	r4, #3
 800191e:	002a      	movs	r2, r5
 8001920:	4004      	ands	r4, r0
 8001922:	00e4      	lsls	r4, r4, #3
 8001924:	40a2      	lsls	r2, r4
 8001926:	0189      	lsls	r1, r1, #6
 8001928:	4029      	ands	r1, r5
 800192a:	43d2      	mvns	r2, r2
 800192c:	40a1      	lsls	r1, r4
 800192e:	b2c3      	uxtb	r3, r0
 8001930:	2800      	cmp	r0, #0
 8001932:	db0a      	blt.n	800194a <HAL_NVIC_SetPriority+0x32>
 8001934:	24c0      	movs	r4, #192	; 0xc0
 8001936:	4b0b      	ldr	r3, [pc, #44]	; (8001964 <HAL_NVIC_SetPriority+0x4c>)
 8001938:	0880      	lsrs	r0, r0, #2
 800193a:	0080      	lsls	r0, r0, #2
 800193c:	18c0      	adds	r0, r0, r3
 800193e:	00a4      	lsls	r4, r4, #2
 8001940:	5903      	ldr	r3, [r0, r4]
 8001942:	401a      	ands	r2, r3
 8001944:	4311      	orrs	r1, r2
 8001946:	5101      	str	r1, [r0, r4]
 8001948:	bd30      	pop	{r4, r5, pc}
 800194a:	200f      	movs	r0, #15
 800194c:	4003      	ands	r3, r0
 800194e:	3b08      	subs	r3, #8
 8001950:	4805      	ldr	r0, [pc, #20]	; (8001968 <HAL_NVIC_SetPriority+0x50>)
 8001952:	089b      	lsrs	r3, r3, #2
 8001954:	009b      	lsls	r3, r3, #2
 8001956:	181b      	adds	r3, r3, r0
 8001958:	69d8      	ldr	r0, [r3, #28]
 800195a:	4002      	ands	r2, r0
 800195c:	4311      	orrs	r1, r2
 800195e:	61d9      	str	r1, [r3, #28]
 8001960:	e7f2      	b.n	8001948 <HAL_NVIC_SetPriority+0x30>
 8001962:	46c0      	nop			; (mov r8, r8)
 8001964:	e000e100 	.word	0xe000e100
 8001968:	e000ed00 	.word	0xe000ed00

0800196c <HAL_SYSTICK_Config>:
 800196c:	2280      	movs	r2, #128	; 0x80
 800196e:	1e43      	subs	r3, r0, #1
 8001970:	0452      	lsls	r2, r2, #17
 8001972:	2001      	movs	r0, #1
 8001974:	4293      	cmp	r3, r2
 8001976:	d20d      	bcs.n	8001994 <HAL_SYSTICK_Config+0x28>
 8001978:	21c0      	movs	r1, #192	; 0xc0
 800197a:	4a07      	ldr	r2, [pc, #28]	; (8001998 <HAL_SYSTICK_Config+0x2c>)
 800197c:	4807      	ldr	r0, [pc, #28]	; (800199c <HAL_SYSTICK_Config+0x30>)
 800197e:	6053      	str	r3, [r2, #4]
 8001980:	6a03      	ldr	r3, [r0, #32]
 8001982:	0609      	lsls	r1, r1, #24
 8001984:	021b      	lsls	r3, r3, #8
 8001986:	0a1b      	lsrs	r3, r3, #8
 8001988:	430b      	orrs	r3, r1
 800198a:	6203      	str	r3, [r0, #32]
 800198c:	2000      	movs	r0, #0
 800198e:	2307      	movs	r3, #7
 8001990:	6090      	str	r0, [r2, #8]
 8001992:	6013      	str	r3, [r2, #0]
 8001994:	4770      	bx	lr
 8001996:	46c0      	nop			; (mov r8, r8)
 8001998:	e000e010 	.word	0xe000e010
 800199c:	e000ed00 	.word	0xe000ed00

080019a0 <FLASH_SetErrorCode>:
 80019a0:	4a28      	ldr	r2, [pc, #160]	; (8001a44 <FLASH_SetErrorCode+0xa4>)
 80019a2:	2180      	movs	r1, #128	; 0x80
 80019a4:	6990      	ldr	r0, [r2, #24]
 80019a6:	0049      	lsls	r1, r1, #1
 80019a8:	0003      	movs	r3, r0
 80019aa:	b530      	push	{r4, r5, lr}
 80019ac:	400b      	ands	r3, r1
 80019ae:	4208      	tst	r0, r1
 80019b0:	d005      	beq.n	80019be <FLASH_SetErrorCode+0x1e>
 80019b2:	2302      	movs	r3, #2
 80019b4:	4824      	ldr	r0, [pc, #144]	; (8001a48 <FLASH_SetErrorCode+0xa8>)
 80019b6:	6944      	ldr	r4, [r0, #20]
 80019b8:	4323      	orrs	r3, r4
 80019ba:	6143      	str	r3, [r0, #20]
 80019bc:	000b      	movs	r3, r1
 80019be:	2080      	movs	r0, #128	; 0x80
 80019c0:	6991      	ldr	r1, [r2, #24]
 80019c2:	0080      	lsls	r0, r0, #2
 80019c4:	4201      	tst	r1, r0
 80019c6:	d005      	beq.n	80019d4 <FLASH_SetErrorCode+0x34>
 80019c8:	2101      	movs	r1, #1
 80019ca:	4c1f      	ldr	r4, [pc, #124]	; (8001a48 <FLASH_SetErrorCode+0xa8>)
 80019cc:	4303      	orrs	r3, r0
 80019ce:	6965      	ldr	r5, [r4, #20]
 80019d0:	4329      	orrs	r1, r5
 80019d2:	6161      	str	r1, [r4, #20]
 80019d4:	2080      	movs	r0, #128	; 0x80
 80019d6:	6991      	ldr	r1, [r2, #24]
 80019d8:	00c0      	lsls	r0, r0, #3
 80019da:	4201      	tst	r1, r0
 80019dc:	d005      	beq.n	80019ea <FLASH_SetErrorCode+0x4a>
 80019de:	2108      	movs	r1, #8
 80019e0:	4c19      	ldr	r4, [pc, #100]	; (8001a48 <FLASH_SetErrorCode+0xa8>)
 80019e2:	4303      	orrs	r3, r0
 80019e4:	6965      	ldr	r5, [r4, #20]
 80019e6:	4329      	orrs	r1, r5
 80019e8:	6161      	str	r1, [r4, #20]
 80019ea:	2080      	movs	r0, #128	; 0x80
 80019ec:	6991      	ldr	r1, [r2, #24]
 80019ee:	0100      	lsls	r0, r0, #4
 80019f0:	4201      	tst	r1, r0
 80019f2:	d005      	beq.n	8001a00 <FLASH_SetErrorCode+0x60>
 80019f4:	2104      	movs	r1, #4
 80019f6:	4c14      	ldr	r4, [pc, #80]	; (8001a48 <FLASH_SetErrorCode+0xa8>)
 80019f8:	4303      	orrs	r3, r0
 80019fa:	6965      	ldr	r5, [r4, #20]
 80019fc:	4329      	orrs	r1, r5
 80019fe:	6161      	str	r1, [r4, #20]
 8001a00:	2080      	movs	r0, #128	; 0x80
 8001a02:	6991      	ldr	r1, [r2, #24]
 8001a04:	0180      	lsls	r0, r0, #6
 8001a06:	4201      	tst	r1, r0
 8001a08:	d005      	beq.n	8001a16 <FLASH_SetErrorCode+0x76>
 8001a0a:	2110      	movs	r1, #16
 8001a0c:	4c0e      	ldr	r4, [pc, #56]	; (8001a48 <FLASH_SetErrorCode+0xa8>)
 8001a0e:	4303      	orrs	r3, r0
 8001a10:	6965      	ldr	r5, [r4, #20]
 8001a12:	4329      	orrs	r1, r5
 8001a14:	6161      	str	r1, [r4, #20]
 8001a16:	6991      	ldr	r1, [r2, #24]
 8001a18:	0389      	lsls	r1, r1, #14
 8001a1a:	d505      	bpl.n	8001a28 <FLASH_SetErrorCode+0x88>
 8001a1c:	2020      	movs	r0, #32
 8001a1e:	4c0a      	ldr	r4, [pc, #40]	; (8001a48 <FLASH_SetErrorCode+0xa8>)
 8001a20:	4303      	orrs	r3, r0
 8001a22:	6961      	ldr	r1, [r4, #20]
 8001a24:	4301      	orrs	r1, r0
 8001a26:	6161      	str	r1, [r4, #20]
 8001a28:	2080      	movs	r0, #128	; 0x80
 8001a2a:	6991      	ldr	r1, [r2, #24]
 8001a2c:	0240      	lsls	r0, r0, #9
 8001a2e:	4201      	tst	r1, r0
 8001a30:	d005      	beq.n	8001a3e <FLASH_SetErrorCode+0x9e>
 8001a32:	2140      	movs	r1, #64	; 0x40
 8001a34:	4c04      	ldr	r4, [pc, #16]	; (8001a48 <FLASH_SetErrorCode+0xa8>)
 8001a36:	4303      	orrs	r3, r0
 8001a38:	6965      	ldr	r5, [r4, #20]
 8001a3a:	4329      	orrs	r1, r5
 8001a3c:	6161      	str	r1, [r4, #20]
 8001a3e:	6193      	str	r3, [r2, #24]
 8001a40:	bd30      	pop	{r4, r5, pc}
 8001a42:	46c0      	nop			; (mov r8, r8)
 8001a44:	40022000 	.word	0x40022000
 8001a48:	20000134 	.word	0x20000134

08001a4c <FLASH_WaitForLastOperation>:
 8001a4c:	b570      	push	{r4, r5, r6, lr}
 8001a4e:	0004      	movs	r4, r0
 8001a50:	f7ff ff4a 	bl	80018e8 <HAL_GetTick>
 8001a54:	2601      	movs	r6, #1
 8001a56:	0005      	movs	r5, r0
 8001a58:	4b18      	ldr	r3, [pc, #96]	; (8001abc <FLASH_WaitForLastOperation+0x70>)
 8001a5a:	699a      	ldr	r2, [r3, #24]
 8001a5c:	4232      	tst	r2, r6
 8001a5e:	d121      	bne.n	8001aa4 <FLASH_WaitForLastOperation+0x58>
 8001a60:	2202      	movs	r2, #2
 8001a62:	6999      	ldr	r1, [r3, #24]
 8001a64:	4211      	tst	r1, r2
 8001a66:	d000      	beq.n	8001a6a <FLASH_WaitForLastOperation+0x1e>
 8001a68:	619a      	str	r2, [r3, #24]
 8001a6a:	699a      	ldr	r2, [r3, #24]
 8001a6c:	05d2      	lsls	r2, r2, #23
 8001a6e:	d415      	bmi.n	8001a9c <FLASH_WaitForLastOperation+0x50>
 8001a70:	699a      	ldr	r2, [r3, #24]
 8001a72:	0592      	lsls	r2, r2, #22
 8001a74:	d412      	bmi.n	8001a9c <FLASH_WaitForLastOperation+0x50>
 8001a76:	699a      	ldr	r2, [r3, #24]
 8001a78:	0552      	lsls	r2, r2, #21
 8001a7a:	d40f      	bmi.n	8001a9c <FLASH_WaitForLastOperation+0x50>
 8001a7c:	699a      	ldr	r2, [r3, #24]
 8001a7e:	0512      	lsls	r2, r2, #20
 8001a80:	d40c      	bmi.n	8001a9c <FLASH_WaitForLastOperation+0x50>
 8001a82:	699a      	ldr	r2, [r3, #24]
 8001a84:	0492      	lsls	r2, r2, #18
 8001a86:	d409      	bmi.n	8001a9c <FLASH_WaitForLastOperation+0x50>
 8001a88:	6999      	ldr	r1, [r3, #24]
 8001a8a:	2280      	movs	r2, #128	; 0x80
 8001a8c:	0008      	movs	r0, r1
 8001a8e:	0292      	lsls	r2, r2, #10
 8001a90:	4010      	ands	r0, r2
 8001a92:	4211      	tst	r1, r2
 8001a94:	d102      	bne.n	8001a9c <FLASH_WaitForLastOperation+0x50>
 8001a96:	699b      	ldr	r3, [r3, #24]
 8001a98:	03db      	lsls	r3, r3, #15
 8001a9a:	d508      	bpl.n	8001aae <FLASH_WaitForLastOperation+0x62>
 8001a9c:	f7ff ff80 	bl	80019a0 <FLASH_SetErrorCode>
 8001aa0:	2001      	movs	r0, #1
 8001aa2:	e004      	b.n	8001aae <FLASH_WaitForLastOperation+0x62>
 8001aa4:	1c62      	adds	r2, r4, #1
 8001aa6:	d0d8      	beq.n	8001a5a <FLASH_WaitForLastOperation+0xe>
 8001aa8:	2c00      	cmp	r4, #0
 8001aaa:	d101      	bne.n	8001ab0 <FLASH_WaitForLastOperation+0x64>
 8001aac:	2003      	movs	r0, #3
 8001aae:	bd70      	pop	{r4, r5, r6, pc}
 8001ab0:	f7ff ff1a 	bl	80018e8 <HAL_GetTick>
 8001ab4:	1b40      	subs	r0, r0, r5
 8001ab6:	42a0      	cmp	r0, r4
 8001ab8:	d9ce      	bls.n	8001a58 <FLASH_WaitForLastOperation+0xc>
 8001aba:	e7f7      	b.n	8001aac <FLASH_WaitForLastOperation+0x60>
 8001abc:	40022000 	.word	0x40022000

08001ac0 <HAL_FLASHEx_DATAEEPROM_Unlock>:
 8001ac0:	2201      	movs	r2, #1
 8001ac2:	4b08      	ldr	r3, [pc, #32]	; (8001ae4 <HAL_FLASHEx_DATAEEPROM_Unlock+0x24>)
 8001ac4:	2000      	movs	r0, #0
 8001ac6:	6859      	ldr	r1, [r3, #4]
 8001ac8:	4211      	tst	r1, r2
 8001aca:	d00a      	beq.n	8001ae2 <HAL_FLASHEx_DATAEEPROM_Unlock+0x22>
 8001acc:	f3ef 8110 	mrs	r1, PRIMASK
 8001ad0:	b672      	cpsid	i
 8001ad2:	4805      	ldr	r0, [pc, #20]	; (8001ae8 <HAL_FLASHEx_DATAEEPROM_Unlock+0x28>)
 8001ad4:	60d8      	str	r0, [r3, #12]
 8001ad6:	4805      	ldr	r0, [pc, #20]	; (8001aec <HAL_FLASHEx_DATAEEPROM_Unlock+0x2c>)
 8001ad8:	60d8      	str	r0, [r3, #12]
 8001ada:	f381 8810 	msr	PRIMASK, r1
 8001ade:	6858      	ldr	r0, [r3, #4]
 8001ae0:	4010      	ands	r0, r2
 8001ae2:	4770      	bx	lr
 8001ae4:	40022000 	.word	0x40022000
 8001ae8:	89abcdef 	.word	0x89abcdef
 8001aec:	02030405 	.word	0x02030405

08001af0 <HAL_FLASHEx_DATAEEPROM_Lock>:
 8001af0:	2301      	movs	r3, #1
 8001af2:	4a03      	ldr	r2, [pc, #12]	; (8001b00 <HAL_FLASHEx_DATAEEPROM_Lock+0x10>)
 8001af4:	2000      	movs	r0, #0
 8001af6:	6851      	ldr	r1, [r2, #4]
 8001af8:	430b      	orrs	r3, r1
 8001afa:	6053      	str	r3, [r2, #4]
 8001afc:	4770      	bx	lr
 8001afe:	46c0      	nop			; (mov r8, r8)
 8001b00:	40022000 	.word	0x40022000

08001b04 <HAL_FLASHEx_DATAEEPROM_Erase>:
 8001b04:	b510      	push	{r4, lr}
 8001b06:	0004      	movs	r4, r0
 8001b08:	4805      	ldr	r0, [pc, #20]	; (8001b20 <HAL_FLASHEx_DATAEEPROM_Erase+0x1c>)
 8001b0a:	f7ff ff9f 	bl	8001a4c <FLASH_WaitForLastOperation>
 8001b0e:	2800      	cmp	r0, #0
 8001b10:	d105      	bne.n	8001b1e <HAL_FLASHEx_DATAEEPROM_Erase+0x1a>
 8001b12:	4b04      	ldr	r3, [pc, #16]	; (8001b24 <HAL_FLASHEx_DATAEEPROM_Erase+0x20>)
 8001b14:	6158      	str	r0, [r3, #20]
 8001b16:	6020      	str	r0, [r4, #0]
 8001b18:	4801      	ldr	r0, [pc, #4]	; (8001b20 <HAL_FLASHEx_DATAEEPROM_Erase+0x1c>)
 8001b1a:	f7ff ff97 	bl	8001a4c <FLASH_WaitForLastOperation>
 8001b1e:	bd10      	pop	{r4, pc}
 8001b20:	0000c350 	.word	0x0000c350
 8001b24:	20000134 	.word	0x20000134

08001b28 <HAL_FLASHEx_DATAEEPROM_Program>:
 8001b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b2a:	4f12      	ldr	r7, [pc, #72]	; (8001b74 <HAL_FLASHEx_DATAEEPROM_Program+0x4c>)
 8001b2c:	0006      	movs	r6, r0
 8001b2e:	7c3b      	ldrb	r3, [r7, #16]
 8001b30:	000d      	movs	r5, r1
 8001b32:	0014      	movs	r4, r2
 8001b34:	2002      	movs	r0, #2
 8001b36:	2b01      	cmp	r3, #1
 8001b38:	d00c      	beq.n	8001b54 <HAL_FLASHEx_DATAEEPROM_Program+0x2c>
 8001b3a:	2301      	movs	r3, #1
 8001b3c:	480e      	ldr	r0, [pc, #56]	; (8001b78 <HAL_FLASHEx_DATAEEPROM_Program+0x50>)
 8001b3e:	743b      	strb	r3, [r7, #16]
 8001b40:	f7ff ff84 	bl	8001a4c <FLASH_WaitForLastOperation>
 8001b44:	2800      	cmp	r0, #0
 8001b46:	d103      	bne.n	8001b50 <HAL_FLASHEx_DATAEEPROM_Program+0x28>
 8001b48:	6178      	str	r0, [r7, #20]
 8001b4a:	2e02      	cmp	r6, #2
 8001b4c:	d103      	bne.n	8001b56 <HAL_FLASHEx_DATAEEPROM_Program+0x2e>
 8001b4e:	602c      	str	r4, [r5, #0]
 8001b50:	2300      	movs	r3, #0
 8001b52:	743b      	strb	r3, [r7, #16]
 8001b54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b56:	2e01      	cmp	r6, #1
 8001b58:	d102      	bne.n	8001b60 <HAL_FLASHEx_DATAEEPROM_Program+0x38>
 8001b5a:	b2a4      	uxth	r4, r4
 8001b5c:	802c      	strh	r4, [r5, #0]
 8001b5e:	e7f7      	b.n	8001b50 <HAL_FLASHEx_DATAEEPROM_Program+0x28>
 8001b60:	2e00      	cmp	r6, #0
 8001b62:	d003      	beq.n	8001b6c <HAL_FLASHEx_DATAEEPROM_Program+0x44>
 8001b64:	4804      	ldr	r0, [pc, #16]	; (8001b78 <HAL_FLASHEx_DATAEEPROM_Program+0x50>)
 8001b66:	f7ff ff71 	bl	8001a4c <FLASH_WaitForLastOperation>
 8001b6a:	e7f1      	b.n	8001b50 <HAL_FLASHEx_DATAEEPROM_Program+0x28>
 8001b6c:	b2e4      	uxtb	r4, r4
 8001b6e:	702c      	strb	r4, [r5, #0]
 8001b70:	e7ee      	b.n	8001b50 <HAL_FLASHEx_DATAEEPROM_Program+0x28>
 8001b72:	46c0      	nop			; (mov r8, r8)
 8001b74:	20000134 	.word	0x20000134
 8001b78:	0000c350 	.word	0x0000c350

08001b7c <HAL_GPIO_Init>:
 8001b7c:	2300      	movs	r3, #0
 8001b7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b80:	b085      	sub	sp, #20
 8001b82:	680a      	ldr	r2, [r1, #0]
 8001b84:	0014      	movs	r4, r2
 8001b86:	40dc      	lsrs	r4, r3
 8001b88:	d101      	bne.n	8001b8e <HAL_GPIO_Init+0x12>
 8001b8a:	b005      	add	sp, #20
 8001b8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b8e:	2501      	movs	r5, #1
 8001b90:	0014      	movs	r4, r2
 8001b92:	409d      	lsls	r5, r3
 8001b94:	402c      	ands	r4, r5
 8001b96:	9401      	str	r4, [sp, #4]
 8001b98:	422a      	tst	r2, r5
 8001b9a:	d100      	bne.n	8001b9e <HAL_GPIO_Init+0x22>
 8001b9c:	e08d      	b.n	8001cba <HAL_GPIO_Init+0x13e>
 8001b9e:	684a      	ldr	r2, [r1, #4]
 8001ba0:	005e      	lsls	r6, r3, #1
 8001ba2:	4694      	mov	ip, r2
 8001ba4:	2203      	movs	r2, #3
 8001ba6:	4664      	mov	r4, ip
 8001ba8:	4022      	ands	r2, r4
 8001baa:	2403      	movs	r4, #3
 8001bac:	40b4      	lsls	r4, r6
 8001bae:	43e4      	mvns	r4, r4
 8001bb0:	9402      	str	r4, [sp, #8]
 8001bb2:	1e54      	subs	r4, r2, #1
 8001bb4:	2c01      	cmp	r4, #1
 8001bb6:	d82a      	bhi.n	8001c0e <HAL_GPIO_Init+0x92>
 8001bb8:	6887      	ldr	r7, [r0, #8]
 8001bba:	9c02      	ldr	r4, [sp, #8]
 8001bbc:	4027      	ands	r7, r4
 8001bbe:	68cc      	ldr	r4, [r1, #12]
 8001bc0:	40b4      	lsls	r4, r6
 8001bc2:	433c      	orrs	r4, r7
 8001bc4:	6084      	str	r4, [r0, #8]
 8001bc6:	6844      	ldr	r4, [r0, #4]
 8001bc8:	2701      	movs	r7, #1
 8001bca:	43ac      	bics	r4, r5
 8001bcc:	0025      	movs	r5, r4
 8001bce:	4664      	mov	r4, ip
 8001bd0:	0924      	lsrs	r4, r4, #4
 8001bd2:	403c      	ands	r4, r7
 8001bd4:	409c      	lsls	r4, r3
 8001bd6:	432c      	orrs	r4, r5
 8001bd8:	6044      	str	r4, [r0, #4]
 8001bda:	68c5      	ldr	r5, [r0, #12]
 8001bdc:	9c02      	ldr	r4, [sp, #8]
 8001bde:	4025      	ands	r5, r4
 8001be0:	688c      	ldr	r4, [r1, #8]
 8001be2:	40b4      	lsls	r4, r6
 8001be4:	432c      	orrs	r4, r5
 8001be6:	60c4      	str	r4, [r0, #12]
 8001be8:	2a02      	cmp	r2, #2
 8001bea:	d112      	bne.n	8001c12 <HAL_GPIO_Init+0x96>
 8001bec:	08dc      	lsrs	r4, r3, #3
 8001bee:	2507      	movs	r5, #7
 8001bf0:	00a4      	lsls	r4, r4, #2
 8001bf2:	1904      	adds	r4, r0, r4
 8001bf4:	6a27      	ldr	r7, [r4, #32]
 8001bf6:	9403      	str	r4, [sp, #12]
 8001bf8:	240f      	movs	r4, #15
 8001bfa:	401d      	ands	r5, r3
 8001bfc:	00ad      	lsls	r5, r5, #2
 8001bfe:	40ac      	lsls	r4, r5
 8001c00:	43a7      	bics	r7, r4
 8001c02:	690c      	ldr	r4, [r1, #16]
 8001c04:	40ac      	lsls	r4, r5
 8001c06:	4327      	orrs	r7, r4
 8001c08:	9c03      	ldr	r4, [sp, #12]
 8001c0a:	6227      	str	r7, [r4, #32]
 8001c0c:	e001      	b.n	8001c12 <HAL_GPIO_Init+0x96>
 8001c0e:	2a03      	cmp	r2, #3
 8001c10:	d1e3      	bne.n	8001bda <HAL_GPIO_Init+0x5e>
 8001c12:	6804      	ldr	r4, [r0, #0]
 8001c14:	9d02      	ldr	r5, [sp, #8]
 8001c16:	40b2      	lsls	r2, r6
 8001c18:	4025      	ands	r5, r4
 8001c1a:	002c      	movs	r4, r5
 8001c1c:	4314      	orrs	r4, r2
 8001c1e:	6004      	str	r4, [r0, #0]
 8001c20:	24c0      	movs	r4, #192	; 0xc0
 8001c22:	4662      	mov	r2, ip
 8001c24:	02a4      	lsls	r4, r4, #10
 8001c26:	4222      	tst	r2, r4
 8001c28:	d047      	beq.n	8001cba <HAL_GPIO_Init+0x13e>
 8001c2a:	2501      	movs	r5, #1
 8001c2c:	4c24      	ldr	r4, [pc, #144]	; (8001cc0 <HAL_GPIO_Init+0x144>)
 8001c2e:	27a0      	movs	r7, #160	; 0xa0
 8001c30:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8001c32:	05ff      	lsls	r7, r7, #23
 8001c34:	432a      	orrs	r2, r5
 8001c36:	6362      	str	r2, [r4, #52]	; 0x34
 8001c38:	4a22      	ldr	r2, [pc, #136]	; (8001cc4 <HAL_GPIO_Init+0x148>)
 8001c3a:	089c      	lsrs	r4, r3, #2
 8001c3c:	00a4      	lsls	r4, r4, #2
 8001c3e:	18a4      	adds	r4, r4, r2
 8001c40:	220f      	movs	r2, #15
 8001c42:	3502      	adds	r5, #2
 8001c44:	401d      	ands	r5, r3
 8001c46:	00ad      	lsls	r5, r5, #2
 8001c48:	40aa      	lsls	r2, r5
 8001c4a:	68a6      	ldr	r6, [r4, #8]
 8001c4c:	4396      	bics	r6, r2
 8001c4e:	2200      	movs	r2, #0
 8001c50:	42b8      	cmp	r0, r7
 8001c52:	d008      	beq.n	8001c66 <HAL_GPIO_Init+0xea>
 8001c54:	4f1c      	ldr	r7, [pc, #112]	; (8001cc8 <HAL_GPIO_Init+0x14c>)
 8001c56:	3201      	adds	r2, #1
 8001c58:	42b8      	cmp	r0, r7
 8001c5a:	d004      	beq.n	8001c66 <HAL_GPIO_Init+0xea>
 8001c5c:	4f1b      	ldr	r7, [pc, #108]	; (8001ccc <HAL_GPIO_Init+0x150>)
 8001c5e:	3201      	adds	r2, #1
 8001c60:	42b8      	cmp	r0, r7
 8001c62:	d000      	beq.n	8001c66 <HAL_GPIO_Init+0xea>
 8001c64:	3204      	adds	r2, #4
 8001c66:	40aa      	lsls	r2, r5
 8001c68:	4667      	mov	r7, ip
 8001c6a:	4332      	orrs	r2, r6
 8001c6c:	60a2      	str	r2, [r4, #8]
 8001c6e:	4a18      	ldr	r2, [pc, #96]	; (8001cd0 <HAL_GPIO_Init+0x154>)
 8001c70:	9c01      	ldr	r4, [sp, #4]
 8001c72:	6816      	ldr	r6, [r2, #0]
 8001c74:	9d01      	ldr	r5, [sp, #4]
 8001c76:	43e4      	mvns	r4, r4
 8001c78:	4335      	orrs	r5, r6
 8001c7a:	03ff      	lsls	r7, r7, #15
 8001c7c:	d401      	bmi.n	8001c82 <HAL_GPIO_Init+0x106>
 8001c7e:	0035      	movs	r5, r6
 8001c80:	4025      	ands	r5, r4
 8001c82:	4667      	mov	r7, ip
 8001c84:	6015      	str	r5, [r2, #0]
 8001c86:	6856      	ldr	r6, [r2, #4]
 8001c88:	9d01      	ldr	r5, [sp, #4]
 8001c8a:	4335      	orrs	r5, r6
 8001c8c:	03bf      	lsls	r7, r7, #14
 8001c8e:	d401      	bmi.n	8001c94 <HAL_GPIO_Init+0x118>
 8001c90:	0035      	movs	r5, r6
 8001c92:	4025      	ands	r5, r4
 8001c94:	4667      	mov	r7, ip
 8001c96:	6055      	str	r5, [r2, #4]
 8001c98:	6896      	ldr	r6, [r2, #8]
 8001c9a:	9d01      	ldr	r5, [sp, #4]
 8001c9c:	4335      	orrs	r5, r6
 8001c9e:	02ff      	lsls	r7, r7, #11
 8001ca0:	d401      	bmi.n	8001ca6 <HAL_GPIO_Init+0x12a>
 8001ca2:	0035      	movs	r5, r6
 8001ca4:	4025      	ands	r5, r4
 8001ca6:	4667      	mov	r7, ip
 8001ca8:	6095      	str	r5, [r2, #8]
 8001caa:	68d5      	ldr	r5, [r2, #12]
 8001cac:	9e01      	ldr	r6, [sp, #4]
 8001cae:	432e      	orrs	r6, r5
 8001cb0:	02bf      	lsls	r7, r7, #10
 8001cb2:	d401      	bmi.n	8001cb8 <HAL_GPIO_Init+0x13c>
 8001cb4:	4025      	ands	r5, r4
 8001cb6:	002e      	movs	r6, r5
 8001cb8:	60d6      	str	r6, [r2, #12]
 8001cba:	3301      	adds	r3, #1
 8001cbc:	e761      	b.n	8001b82 <HAL_GPIO_Init+0x6>
 8001cbe:	46c0      	nop			; (mov r8, r8)
 8001cc0:	40021000 	.word	0x40021000
 8001cc4:	40010000 	.word	0x40010000
 8001cc8:	50000400 	.word	0x50000400
 8001ccc:	50000800 	.word	0x50000800
 8001cd0:	40010400 	.word	0x40010400

08001cd4 <HAL_GPIO_ReadPin>:
 8001cd4:	6900      	ldr	r0, [r0, #16]
 8001cd6:	4008      	ands	r0, r1
 8001cd8:	1e43      	subs	r3, r0, #1
 8001cda:	4198      	sbcs	r0, r3
 8001cdc:	b2c0      	uxtb	r0, r0
 8001cde:	4770      	bx	lr

08001ce0 <I2C_Flush_TXDR>:
 8001ce0:	6803      	ldr	r3, [r0, #0]
 8001ce2:	699a      	ldr	r2, [r3, #24]
 8001ce4:	0792      	lsls	r2, r2, #30
 8001ce6:	d501      	bpl.n	8001cec <I2C_Flush_TXDR+0xc>
 8001ce8:	2200      	movs	r2, #0
 8001cea:	629a      	str	r2, [r3, #40]	; 0x28
 8001cec:	2201      	movs	r2, #1
 8001cee:	6999      	ldr	r1, [r3, #24]
 8001cf0:	4211      	tst	r1, r2
 8001cf2:	d102      	bne.n	8001cfa <I2C_Flush_TXDR+0x1a>
 8001cf4:	6999      	ldr	r1, [r3, #24]
 8001cf6:	430a      	orrs	r2, r1
 8001cf8:	619a      	str	r2, [r3, #24]
 8001cfa:	4770      	bx	lr

08001cfc <I2C_TransferConfig>:
 8001cfc:	b530      	push	{r4, r5, lr}
 8001cfe:	9c03      	ldr	r4, [sp, #12]
 8001d00:	0412      	lsls	r2, r2, #16
 8001d02:	6800      	ldr	r0, [r0, #0]
 8001d04:	4322      	orrs	r2, r4
 8001d06:	431a      	orrs	r2, r3
 8001d08:	4b05      	ldr	r3, [pc, #20]	; (8001d20 <I2C_TransferConfig+0x24>)
 8001d0a:	6845      	ldr	r5, [r0, #4]
 8001d0c:	0589      	lsls	r1, r1, #22
 8001d0e:	0d64      	lsrs	r4, r4, #21
 8001d10:	0d89      	lsrs	r1, r1, #22
 8001d12:	431c      	orrs	r4, r3
 8001d14:	43a5      	bics	r5, r4
 8001d16:	430a      	orrs	r2, r1
 8001d18:	432a      	orrs	r2, r5
 8001d1a:	6042      	str	r2, [r0, #4]
 8001d1c:	bd30      	pop	{r4, r5, pc}
 8001d1e:	46c0      	nop			; (mov r8, r8)
 8001d20:	03ff63ff 	.word	0x03ff63ff

08001d24 <I2C_IsAcknowledgeFailed>:
 8001d24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001d26:	6803      	ldr	r3, [r0, #0]
 8001d28:	0016      	movs	r6, r2
 8001d2a:	699a      	ldr	r2, [r3, #24]
 8001d2c:	0004      	movs	r4, r0
 8001d2e:	000d      	movs	r5, r1
 8001d30:	2000      	movs	r0, #0
 8001d32:	06d2      	lsls	r2, r2, #27
 8001d34:	d536      	bpl.n	8001da4 <I2C_IsAcknowledgeFailed+0x80>
 8001d36:	685a      	ldr	r2, [r3, #4]
 8001d38:	0192      	lsls	r2, r2, #6
 8001d3a:	d404      	bmi.n	8001d46 <I2C_IsAcknowledgeFailed+0x22>
 8001d3c:	2280      	movs	r2, #128	; 0x80
 8001d3e:	6859      	ldr	r1, [r3, #4]
 8001d40:	01d2      	lsls	r2, r2, #7
 8001d42:	430a      	orrs	r2, r1
 8001d44:	605a      	str	r2, [r3, #4]
 8001d46:	2720      	movs	r7, #32
 8001d48:	6823      	ldr	r3, [r4, #0]
 8001d4a:	699a      	ldr	r2, [r3, #24]
 8001d4c:	423a      	tst	r2, r7
 8001d4e:	d012      	beq.n	8001d76 <I2C_IsAcknowledgeFailed+0x52>
 8001d50:	2210      	movs	r2, #16
 8001d52:	0020      	movs	r0, r4
 8001d54:	61da      	str	r2, [r3, #28]
 8001d56:	61df      	str	r7, [r3, #28]
 8001d58:	f7ff ffc2 	bl	8001ce0 <I2C_Flush_TXDR>
 8001d5c:	6822      	ldr	r2, [r4, #0]
 8001d5e:	4912      	ldr	r1, [pc, #72]	; (8001da8 <I2C_IsAcknowledgeFailed+0x84>)
 8001d60:	6853      	ldr	r3, [r2, #4]
 8001d62:	400b      	ands	r3, r1
 8001d64:	6053      	str	r3, [r2, #4]
 8001d66:	2304      	movs	r3, #4
 8001d68:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8001d6a:	4313      	orrs	r3, r2
 8001d6c:	6463      	str	r3, [r4, #68]	; 0x44
 8001d6e:	0023      	movs	r3, r4
 8001d70:	3341      	adds	r3, #65	; 0x41
 8001d72:	701f      	strb	r7, [r3, #0]
 8001d74:	e00f      	b.n	8001d96 <I2C_IsAcknowledgeFailed+0x72>
 8001d76:	1c6a      	adds	r2, r5, #1
 8001d78:	d0e7      	beq.n	8001d4a <I2C_IsAcknowledgeFailed+0x26>
 8001d7a:	f7ff fdb5 	bl	80018e8 <HAL_GetTick>
 8001d7e:	1b80      	subs	r0, r0, r6
 8001d80:	4285      	cmp	r5, r0
 8001d82:	d301      	bcc.n	8001d88 <I2C_IsAcknowledgeFailed+0x64>
 8001d84:	2d00      	cmp	r5, #0
 8001d86:	d1df      	bne.n	8001d48 <I2C_IsAcknowledgeFailed+0x24>
 8001d88:	2220      	movs	r2, #32
 8001d8a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001d8c:	4313      	orrs	r3, r2
 8001d8e:	6463      	str	r3, [r4, #68]	; 0x44
 8001d90:	0023      	movs	r3, r4
 8001d92:	3341      	adds	r3, #65	; 0x41
 8001d94:	701a      	strb	r2, [r3, #0]
 8001d96:	0022      	movs	r2, r4
 8001d98:	2300      	movs	r3, #0
 8001d9a:	2001      	movs	r0, #1
 8001d9c:	3242      	adds	r2, #66	; 0x42
 8001d9e:	3440      	adds	r4, #64	; 0x40
 8001da0:	7013      	strb	r3, [r2, #0]
 8001da2:	7023      	strb	r3, [r4, #0]
 8001da4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001da6:	46c0      	nop			; (mov r8, r8)
 8001da8:	fe00e800 	.word	0xfe00e800

08001dac <I2C_WaitOnTXISFlagUntilTimeout>:
 8001dac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001dae:	0004      	movs	r4, r0
 8001db0:	000d      	movs	r5, r1
 8001db2:	0016      	movs	r6, r2
 8001db4:	2702      	movs	r7, #2
 8001db6:	6823      	ldr	r3, [r4, #0]
 8001db8:	699b      	ldr	r3, [r3, #24]
 8001dba:	423b      	tst	r3, r7
 8001dbc:	d001      	beq.n	8001dc2 <I2C_WaitOnTXISFlagUntilTimeout+0x16>
 8001dbe:	2000      	movs	r0, #0
 8001dc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001dc2:	0032      	movs	r2, r6
 8001dc4:	0029      	movs	r1, r5
 8001dc6:	0020      	movs	r0, r4
 8001dc8:	f7ff ffac 	bl	8001d24 <I2C_IsAcknowledgeFailed>
 8001dcc:	2800      	cmp	r0, #0
 8001dce:	d115      	bne.n	8001dfc <I2C_WaitOnTXISFlagUntilTimeout+0x50>
 8001dd0:	1c6b      	adds	r3, r5, #1
 8001dd2:	d0f0      	beq.n	8001db6 <I2C_WaitOnTXISFlagUntilTimeout+0xa>
 8001dd4:	f7ff fd88 	bl	80018e8 <HAL_GetTick>
 8001dd8:	1b80      	subs	r0, r0, r6
 8001dda:	42a8      	cmp	r0, r5
 8001ddc:	d801      	bhi.n	8001de2 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
 8001dde:	2d00      	cmp	r5, #0
 8001de0:	d1e9      	bne.n	8001db6 <I2C_WaitOnTXISFlagUntilTimeout+0xa>
 8001de2:	2220      	movs	r2, #32
 8001de4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001de6:	4313      	orrs	r3, r2
 8001de8:	6463      	str	r3, [r4, #68]	; 0x44
 8001dea:	0023      	movs	r3, r4
 8001dec:	3341      	adds	r3, #65	; 0x41
 8001dee:	701a      	strb	r2, [r3, #0]
 8001df0:	0022      	movs	r2, r4
 8001df2:	2300      	movs	r3, #0
 8001df4:	3242      	adds	r2, #66	; 0x42
 8001df6:	3440      	adds	r4, #64	; 0x40
 8001df8:	7013      	strb	r3, [r2, #0]
 8001dfa:	7023      	strb	r3, [r4, #0]
 8001dfc:	2001      	movs	r0, #1
 8001dfe:	e7df      	b.n	8001dc0 <I2C_WaitOnTXISFlagUntilTimeout+0x14>

08001e00 <I2C_WaitOnFlagUntilTimeout>:
 8001e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e02:	0004      	movs	r4, r0
 8001e04:	000e      	movs	r6, r1
 8001e06:	0017      	movs	r7, r2
 8001e08:	001d      	movs	r5, r3
 8001e0a:	6822      	ldr	r2, [r4, #0]
 8001e0c:	6993      	ldr	r3, [r2, #24]
 8001e0e:	4033      	ands	r3, r6
 8001e10:	1b9b      	subs	r3, r3, r6
 8001e12:	4259      	negs	r1, r3
 8001e14:	414b      	adcs	r3, r1
 8001e16:	42bb      	cmp	r3, r7
 8001e18:	d001      	beq.n	8001e1e <I2C_WaitOnFlagUntilTimeout+0x1e>
 8001e1a:	2000      	movs	r0, #0
 8001e1c:	e017      	b.n	8001e4e <I2C_WaitOnFlagUntilTimeout+0x4e>
 8001e1e:	1c6b      	adds	r3, r5, #1
 8001e20:	d0f4      	beq.n	8001e0c <I2C_WaitOnFlagUntilTimeout+0xc>
 8001e22:	f7ff fd61 	bl	80018e8 <HAL_GetTick>
 8001e26:	9b06      	ldr	r3, [sp, #24]
 8001e28:	1ac0      	subs	r0, r0, r3
 8001e2a:	42a8      	cmp	r0, r5
 8001e2c:	d801      	bhi.n	8001e32 <I2C_WaitOnFlagUntilTimeout+0x32>
 8001e2e:	2d00      	cmp	r5, #0
 8001e30:	d1eb      	bne.n	8001e0a <I2C_WaitOnFlagUntilTimeout+0xa>
 8001e32:	2220      	movs	r2, #32
 8001e34:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001e36:	2001      	movs	r0, #1
 8001e38:	4313      	orrs	r3, r2
 8001e3a:	6463      	str	r3, [r4, #68]	; 0x44
 8001e3c:	0023      	movs	r3, r4
 8001e3e:	3341      	adds	r3, #65	; 0x41
 8001e40:	701a      	strb	r2, [r3, #0]
 8001e42:	0022      	movs	r2, r4
 8001e44:	2300      	movs	r3, #0
 8001e46:	3242      	adds	r2, #66	; 0x42
 8001e48:	3440      	adds	r4, #64	; 0x40
 8001e4a:	7013      	strb	r3, [r2, #0]
 8001e4c:	7023      	strb	r3, [r4, #0]
 8001e4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001e50 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8001e50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e52:	0004      	movs	r4, r0
 8001e54:	000d      	movs	r5, r1
 8001e56:	0016      	movs	r6, r2
 8001e58:	2720      	movs	r7, #32
 8001e5a:	6823      	ldr	r3, [r4, #0]
 8001e5c:	699b      	ldr	r3, [r3, #24]
 8001e5e:	423b      	tst	r3, r7
 8001e60:	d001      	beq.n	8001e66 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
 8001e62:	2000      	movs	r0, #0
 8001e64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001e66:	0032      	movs	r2, r6
 8001e68:	0029      	movs	r1, r5
 8001e6a:	0020      	movs	r0, r4
 8001e6c:	f7ff ff5a 	bl	8001d24 <I2C_IsAcknowledgeFailed>
 8001e70:	2800      	cmp	r0, #0
 8001e72:	d113      	bne.n	8001e9c <I2C_WaitOnSTOPFlagUntilTimeout+0x4c>
 8001e74:	f7ff fd38 	bl	80018e8 <HAL_GetTick>
 8001e78:	1b80      	subs	r0, r0, r6
 8001e7a:	42a8      	cmp	r0, r5
 8001e7c:	d801      	bhi.n	8001e82 <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
 8001e7e:	2d00      	cmp	r5, #0
 8001e80:	d1eb      	bne.n	8001e5a <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
 8001e82:	2220      	movs	r2, #32
 8001e84:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001e86:	4313      	orrs	r3, r2
 8001e88:	6463      	str	r3, [r4, #68]	; 0x44
 8001e8a:	0023      	movs	r3, r4
 8001e8c:	3341      	adds	r3, #65	; 0x41
 8001e8e:	701a      	strb	r2, [r3, #0]
 8001e90:	0022      	movs	r2, r4
 8001e92:	2300      	movs	r3, #0
 8001e94:	3242      	adds	r2, #66	; 0x42
 8001e96:	3440      	adds	r4, #64	; 0x40
 8001e98:	7013      	strb	r3, [r2, #0]
 8001e9a:	7023      	strb	r3, [r4, #0]
 8001e9c:	2001      	movs	r0, #1
 8001e9e:	e7e1      	b.n	8001e64 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>

08001ea0 <HAL_I2C_Init>:
 8001ea0:	b570      	push	{r4, r5, r6, lr}
 8001ea2:	0004      	movs	r4, r0
 8001ea4:	2001      	movs	r0, #1
 8001ea6:	2c00      	cmp	r4, #0
 8001ea8:	d03f      	beq.n	8001f2a <HAL_I2C_Init+0x8a>
 8001eaa:	0025      	movs	r5, r4
 8001eac:	3541      	adds	r5, #65	; 0x41
 8001eae:	782b      	ldrb	r3, [r5, #0]
 8001eb0:	b2da      	uxtb	r2, r3
 8001eb2:	2b00      	cmp	r3, #0
 8001eb4:	d105      	bne.n	8001ec2 <HAL_I2C_Init+0x22>
 8001eb6:	0023      	movs	r3, r4
 8001eb8:	3340      	adds	r3, #64	; 0x40
 8001eba:	0020      	movs	r0, r4
 8001ebc:	701a      	strb	r2, [r3, #0]
 8001ebe:	f7ff fb97 	bl	80015f0 <HAL_I2C_MspInit>
 8001ec2:	2324      	movs	r3, #36	; 0x24
 8001ec4:	2101      	movs	r1, #1
 8001ec6:	702b      	strb	r3, [r5, #0]
 8001ec8:	6823      	ldr	r3, [r4, #0]
 8001eca:	481d      	ldr	r0, [pc, #116]	; (8001f40 <HAL_I2C_Init+0xa0>)
 8001ecc:	681a      	ldr	r2, [r3, #0]
 8001ece:	68a6      	ldr	r6, [r4, #8]
 8001ed0:	438a      	bics	r2, r1
 8001ed2:	601a      	str	r2, [r3, #0]
 8001ed4:	6861      	ldr	r1, [r4, #4]
 8001ed6:	4a1b      	ldr	r2, [pc, #108]	; (8001f44 <HAL_I2C_Init+0xa4>)
 8001ed8:	400a      	ands	r2, r1
 8001eda:	611a      	str	r2, [r3, #16]
 8001edc:	689a      	ldr	r2, [r3, #8]
 8001ede:	4002      	ands	r2, r0
 8001ee0:	609a      	str	r2, [r3, #8]
 8001ee2:	68e2      	ldr	r2, [r4, #12]
 8001ee4:	2a01      	cmp	r2, #1
 8001ee6:	d121      	bne.n	8001f2c <HAL_I2C_Init+0x8c>
 8001ee8:	2180      	movs	r1, #128	; 0x80
 8001eea:	0209      	lsls	r1, r1, #8
 8001eec:	4331      	orrs	r1, r6
 8001eee:	6099      	str	r1, [r3, #8]
 8001ef0:	685a      	ldr	r2, [r3, #4]
 8001ef2:	4915      	ldr	r1, [pc, #84]	; (8001f48 <HAL_I2C_Init+0xa8>)
 8001ef4:	4311      	orrs	r1, r2
 8001ef6:	6059      	str	r1, [r3, #4]
 8001ef8:	68da      	ldr	r2, [r3, #12]
 8001efa:	6961      	ldr	r1, [r4, #20]
 8001efc:	4002      	ands	r2, r0
 8001efe:	60da      	str	r2, [r3, #12]
 8001f00:	6922      	ldr	r2, [r4, #16]
 8001f02:	2000      	movs	r0, #0
 8001f04:	430a      	orrs	r2, r1
 8001f06:	69a1      	ldr	r1, [r4, #24]
 8001f08:	0209      	lsls	r1, r1, #8
 8001f0a:	430a      	orrs	r2, r1
 8001f0c:	60da      	str	r2, [r3, #12]
 8001f0e:	6a21      	ldr	r1, [r4, #32]
 8001f10:	69e2      	ldr	r2, [r4, #28]
 8001f12:	430a      	orrs	r2, r1
 8001f14:	601a      	str	r2, [r3, #0]
 8001f16:	2201      	movs	r2, #1
 8001f18:	6819      	ldr	r1, [r3, #0]
 8001f1a:	430a      	orrs	r2, r1
 8001f1c:	601a      	str	r2, [r3, #0]
 8001f1e:	2320      	movs	r3, #32
 8001f20:	6460      	str	r0, [r4, #68]	; 0x44
 8001f22:	702b      	strb	r3, [r5, #0]
 8001f24:	6320      	str	r0, [r4, #48]	; 0x30
 8001f26:	3442      	adds	r4, #66	; 0x42
 8001f28:	7020      	strb	r0, [r4, #0]
 8001f2a:	bd70      	pop	{r4, r5, r6, pc}
 8001f2c:	2184      	movs	r1, #132	; 0x84
 8001f2e:	0209      	lsls	r1, r1, #8
 8001f30:	4331      	orrs	r1, r6
 8001f32:	6099      	str	r1, [r3, #8]
 8001f34:	2a02      	cmp	r2, #2
 8001f36:	d1db      	bne.n	8001ef0 <HAL_I2C_Init+0x50>
 8001f38:	2280      	movs	r2, #128	; 0x80
 8001f3a:	0112      	lsls	r2, r2, #4
 8001f3c:	605a      	str	r2, [r3, #4]
 8001f3e:	e7d7      	b.n	8001ef0 <HAL_I2C_Init+0x50>
 8001f40:	ffff7fff 	.word	0xffff7fff
 8001f44:	f0ffffff 	.word	0xf0ffffff
 8001f48:	02008000 	.word	0x02008000

08001f4c <HAL_I2C_Master_Transmit>:
 8001f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f4e:	b087      	sub	sp, #28
 8001f50:	9305      	str	r3, [sp, #20]
 8001f52:	0003      	movs	r3, r0
 8001f54:	3341      	adds	r3, #65	; 0x41
 8001f56:	9204      	str	r2, [sp, #16]
 8001f58:	9303      	str	r3, [sp, #12]
 8001f5a:	781b      	ldrb	r3, [r3, #0]
 8001f5c:	0004      	movs	r4, r0
 8001f5e:	000f      	movs	r7, r1
 8001f60:	2002      	movs	r0, #2
 8001f62:	2b20      	cmp	r3, #32
 8001f64:	d114      	bne.n	8001f90 <HAL_I2C_Master_Transmit+0x44>
 8001f66:	0023      	movs	r3, r4
 8001f68:	3340      	adds	r3, #64	; 0x40
 8001f6a:	781a      	ldrb	r2, [r3, #0]
 8001f6c:	2a01      	cmp	r2, #1
 8001f6e:	d00f      	beq.n	8001f90 <HAL_I2C_Master_Transmit+0x44>
 8001f70:	2601      	movs	r6, #1
 8001f72:	701e      	strb	r6, [r3, #0]
 8001f74:	f7ff fcb8 	bl	80018e8 <HAL_GetTick>
 8001f78:	2180      	movs	r1, #128	; 0x80
 8001f7a:	0005      	movs	r5, r0
 8001f7c:	9000      	str	r0, [sp, #0]
 8001f7e:	2319      	movs	r3, #25
 8001f80:	0032      	movs	r2, r6
 8001f82:	0020      	movs	r0, r4
 8001f84:	0209      	lsls	r1, r1, #8
 8001f86:	f7ff ff3b 	bl	8001e00 <I2C_WaitOnFlagUntilTimeout>
 8001f8a:	2800      	cmp	r0, #0
 8001f8c:	d002      	beq.n	8001f94 <HAL_I2C_Master_Transmit+0x48>
 8001f8e:	2001      	movs	r0, #1
 8001f90:	b007      	add	sp, #28
 8001f92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f94:	2321      	movs	r3, #33	; 0x21
 8001f96:	0026      	movs	r6, r4
 8001f98:	9a03      	ldr	r2, [sp, #12]
 8001f9a:	3642      	adds	r6, #66	; 0x42
 8001f9c:	7013      	strb	r3, [r2, #0]
 8001f9e:	3b11      	subs	r3, #17
 8001fa0:	7033      	strb	r3, [r6, #0]
 8001fa2:	9b04      	ldr	r3, [sp, #16]
 8001fa4:	6460      	str	r0, [r4, #68]	; 0x44
 8001fa6:	6263      	str	r3, [r4, #36]	; 0x24
 8001fa8:	9b05      	ldr	r3, [sp, #20]
 8001faa:	6360      	str	r0, [r4, #52]	; 0x34
 8001fac:	8563      	strh	r3, [r4, #42]	; 0x2a
 8001fae:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001fb0:	4b2d      	ldr	r3, [pc, #180]	; (8002068 <HAL_I2C_Master_Transmit+0x11c>)
 8001fb2:	2aff      	cmp	r2, #255	; 0xff
 8001fb4:	d920      	bls.n	8001ff8 <HAL_I2C_Master_Transmit+0xac>
 8001fb6:	22ff      	movs	r2, #255	; 0xff
 8001fb8:	8522      	strh	r2, [r4, #40]	; 0x28
 8001fba:	9300      	str	r3, [sp, #0]
 8001fbc:	2380      	movs	r3, #128	; 0x80
 8001fbe:	045b      	lsls	r3, r3, #17
 8001fc0:	0039      	movs	r1, r7
 8001fc2:	0020      	movs	r0, r4
 8001fc4:	f7ff fe9a 	bl	8001cfc <I2C_TransferConfig>
 8001fc8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001fca:	002a      	movs	r2, r5
 8001fcc:	0020      	movs	r0, r4
 8001fce:	990c      	ldr	r1, [sp, #48]	; 0x30
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	d119      	bne.n	8002008 <HAL_I2C_Master_Transmit+0xbc>
 8001fd4:	f7ff ff3c 	bl	8001e50 <I2C_WaitOnSTOPFlagUntilTimeout>
 8001fd8:	2800      	cmp	r0, #0
 8001fda:	d1d8      	bne.n	8001f8e <HAL_I2C_Master_Transmit+0x42>
 8001fdc:	2120      	movs	r1, #32
 8001fde:	6823      	ldr	r3, [r4, #0]
 8001fe0:	4d22      	ldr	r5, [pc, #136]	; (800206c <HAL_I2C_Master_Transmit+0x120>)
 8001fe2:	61d9      	str	r1, [r3, #28]
 8001fe4:	685a      	ldr	r2, [r3, #4]
 8001fe6:	402a      	ands	r2, r5
 8001fe8:	605a      	str	r2, [r3, #4]
 8001fea:	0023      	movs	r3, r4
 8001fec:	3440      	adds	r4, #64	; 0x40
 8001fee:	3341      	adds	r3, #65	; 0x41
 8001ff0:	7019      	strb	r1, [r3, #0]
 8001ff2:	7030      	strb	r0, [r6, #0]
 8001ff4:	7020      	strb	r0, [r4, #0]
 8001ff6:	e7cb      	b.n	8001f90 <HAL_I2C_Master_Transmit+0x44>
 8001ff8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001ffa:	b292      	uxth	r2, r2
 8001ffc:	8522      	strh	r2, [r4, #40]	; 0x28
 8001ffe:	b2d2      	uxtb	r2, r2
 8002000:	9300      	str	r3, [sp, #0]
 8002002:	2380      	movs	r3, #128	; 0x80
 8002004:	049b      	lsls	r3, r3, #18
 8002006:	e7db      	b.n	8001fc0 <HAL_I2C_Master_Transmit+0x74>
 8002008:	f7ff fed0 	bl	8001dac <I2C_WaitOnTXISFlagUntilTimeout>
 800200c:	2800      	cmp	r0, #0
 800200e:	d1be      	bne.n	8001f8e <HAL_I2C_Master_Transmit+0x42>
 8002010:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002012:	6822      	ldr	r2, [r4, #0]
 8002014:	7819      	ldrb	r1, [r3, #0]
 8002016:	3301      	adds	r3, #1
 8002018:	6291      	str	r1, [r2, #40]	; 0x28
 800201a:	6263      	str	r3, [r4, #36]	; 0x24
 800201c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800201e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8002020:	3b01      	subs	r3, #1
 8002022:	b29b      	uxth	r3, r3
 8002024:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002026:	3a01      	subs	r2, #1
 8002028:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800202a:	b292      	uxth	r2, r2
 800202c:	8522      	strh	r2, [r4, #40]	; 0x28
 800202e:	2b00      	cmp	r3, #0
 8002030:	d0ca      	beq.n	8001fc8 <HAL_I2C_Master_Transmit+0x7c>
 8002032:	2a00      	cmp	r2, #0
 8002034:	d1c8      	bne.n	8001fc8 <HAL_I2C_Master_Transmit+0x7c>
 8002036:	2180      	movs	r1, #128	; 0x80
 8002038:	0020      	movs	r0, r4
 800203a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800203c:	9500      	str	r5, [sp, #0]
 800203e:	f7ff fedf 	bl	8001e00 <I2C_WaitOnFlagUntilTimeout>
 8002042:	2800      	cmp	r0, #0
 8002044:	d1a3      	bne.n	8001f8e <HAL_I2C_Master_Transmit+0x42>
 8002046:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002048:	2bff      	cmp	r3, #255	; 0xff
 800204a:	d906      	bls.n	800205a <HAL_I2C_Master_Transmit+0x10e>
 800204c:	23ff      	movs	r3, #255	; 0xff
 800204e:	8523      	strh	r3, [r4, #40]	; 0x28
 8002050:	2380      	movs	r3, #128	; 0x80
 8002052:	22ff      	movs	r2, #255	; 0xff
 8002054:	9000      	str	r0, [sp, #0]
 8002056:	045b      	lsls	r3, r3, #17
 8002058:	e7b2      	b.n	8001fc0 <HAL_I2C_Master_Transmit+0x74>
 800205a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800205c:	b292      	uxth	r2, r2
 800205e:	8522      	strh	r2, [r4, #40]	; 0x28
 8002060:	b2d2      	uxtb	r2, r2
 8002062:	9000      	str	r0, [sp, #0]
 8002064:	e7cd      	b.n	8002002 <HAL_I2C_Master_Transmit+0xb6>
 8002066:	46c0      	nop			; (mov r8, r8)
 8002068:	80002000 	.word	0x80002000
 800206c:	fe00e800 	.word	0xfe00e800

08002070 <HAL_I2C_IsDeviceReady>:
 8002070:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002072:	001e      	movs	r6, r3
 8002074:	2300      	movs	r3, #0
 8002076:	b089      	sub	sp, #36	; 0x24
 8002078:	9307      	str	r3, [sp, #28]
 800207a:	0003      	movs	r3, r0
 800207c:	9205      	str	r2, [sp, #20]
 800207e:	3341      	adds	r3, #65	; 0x41
 8002080:	781a      	ldrb	r2, [r3, #0]
 8002082:	0004      	movs	r4, r0
 8002084:	2502      	movs	r5, #2
 8002086:	2a20      	cmp	r2, #32
 8002088:	d15b      	bne.n	8002142 <HAL_I2C_IsDeviceReady+0xd2>
 800208a:	6802      	ldr	r2, [r0, #0]
 800208c:	6997      	ldr	r7, [r2, #24]
 800208e:	2280      	movs	r2, #128	; 0x80
 8002090:	0038      	movs	r0, r7
 8002092:	0212      	lsls	r2, r2, #8
 8002094:	4010      	ands	r0, r2
 8002096:	4217      	tst	r7, r2
 8002098:	d153      	bne.n	8002142 <HAL_I2C_IsDeviceReady+0xd2>
 800209a:	0022      	movs	r2, r4
 800209c:	3240      	adds	r2, #64	; 0x40
 800209e:	7817      	ldrb	r7, [r2, #0]
 80020a0:	2f01      	cmp	r7, #1
 80020a2:	d04e      	beq.n	8002142 <HAL_I2C_IsDeviceReady+0xd2>
 80020a4:	3d01      	subs	r5, #1
 80020a6:	7015      	strb	r5, [r2, #0]
 80020a8:	2224      	movs	r2, #36	; 0x24
 80020aa:	0589      	lsls	r1, r1, #22
 80020ac:	701a      	strb	r2, [r3, #0]
 80020ae:	0d8b      	lsrs	r3, r1, #22
 80020b0:	6460      	str	r0, [r4, #68]	; 0x44
 80020b2:	9304      	str	r3, [sp, #16]
 80020b4:	68e3      	ldr	r3, [r4, #12]
 80020b6:	2b01      	cmp	r3, #1
 80020b8:	d12b      	bne.n	8002112 <HAL_I2C_IsDeviceReady+0xa2>
 80020ba:	4b3e      	ldr	r3, [pc, #248]	; (80021b4 <HAL_I2C_IsDeviceReady+0x144>)
 80020bc:	9a04      	ldr	r2, [sp, #16]
 80020be:	4313      	orrs	r3, r2
 80020c0:	6822      	ldr	r2, [r4, #0]
 80020c2:	6053      	str	r3, [r2, #4]
 80020c4:	f7ff fc10 	bl	80018e8 <HAL_GetTick>
 80020c8:	9003      	str	r0, [sp, #12]
 80020ca:	2201      	movs	r2, #1
 80020cc:	6823      	ldr	r3, [r4, #0]
 80020ce:	699d      	ldr	r5, [r3, #24]
 80020d0:	699b      	ldr	r3, [r3, #24]
 80020d2:	096d      	lsrs	r5, r5, #5
 80020d4:	091b      	lsrs	r3, r3, #4
 80020d6:	4015      	ands	r5, r2
 80020d8:	4013      	ands	r3, r2
 80020da:	431d      	orrs	r5, r3
 80020dc:	d01c      	beq.n	8002118 <HAL_I2C_IsDeviceReady+0xa8>
 80020de:	6823      	ldr	r3, [r4, #0]
 80020e0:	2710      	movs	r7, #16
 80020e2:	699b      	ldr	r3, [r3, #24]
 80020e4:	001a      	movs	r2, r3
 80020e6:	403a      	ands	r2, r7
 80020e8:	423b      	tst	r3, r7
 80020ea:	d12d      	bne.n	8002148 <HAL_I2C_IsDeviceReady+0xd8>
 80020ec:	9b03      	ldr	r3, [sp, #12]
 80020ee:	2120      	movs	r1, #32
 80020f0:	9300      	str	r3, [sp, #0]
 80020f2:	0020      	movs	r0, r4
 80020f4:	0033      	movs	r3, r6
 80020f6:	f7ff fe83 	bl	8001e00 <I2C_WaitOnFlagUntilTimeout>
 80020fa:	2800      	cmp	r0, #0
 80020fc:	d121      	bne.n	8002142 <HAL_I2C_IsDeviceReady+0xd2>
 80020fe:	2320      	movs	r3, #32
 8002100:	6822      	ldr	r2, [r4, #0]
 8002102:	0005      	movs	r5, r0
 8002104:	61d3      	str	r3, [r2, #28]
 8002106:	0022      	movs	r2, r4
 8002108:	3440      	adds	r4, #64	; 0x40
 800210a:	3241      	adds	r2, #65	; 0x41
 800210c:	7013      	strb	r3, [r2, #0]
 800210e:	7020      	strb	r0, [r4, #0]
 8002110:	e017      	b.n	8002142 <HAL_I2C_IsDeviceReady+0xd2>
 8002112:	23a0      	movs	r3, #160	; 0xa0
 8002114:	019b      	lsls	r3, r3, #6
 8002116:	e7d1      	b.n	80020bc <HAL_I2C_IsDeviceReady+0x4c>
 8002118:	1c73      	adds	r3, r6, #1
 800211a:	d0d6      	beq.n	80020ca <HAL_I2C_IsDeviceReady+0x5a>
 800211c:	f7ff fbe4 	bl	80018e8 <HAL_GetTick>
 8002120:	9b03      	ldr	r3, [sp, #12]
 8002122:	1ac0      	subs	r0, r0, r3
 8002124:	42b0      	cmp	r0, r6
 8002126:	d801      	bhi.n	800212c <HAL_I2C_IsDeviceReady+0xbc>
 8002128:	2e00      	cmp	r6, #0
 800212a:	d1ce      	bne.n	80020ca <HAL_I2C_IsDeviceReady+0x5a>
 800212c:	0022      	movs	r2, r4
 800212e:	2320      	movs	r3, #32
 8002130:	3241      	adds	r2, #65	; 0x41
 8002132:	7013      	strb	r3, [r2, #0]
 8002134:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8002136:	2501      	movs	r5, #1
 8002138:	4313      	orrs	r3, r2
 800213a:	6463      	str	r3, [r4, #68]	; 0x44
 800213c:	2300      	movs	r3, #0
 800213e:	3440      	adds	r4, #64	; 0x40
 8002140:	7023      	strb	r3, [r4, #0]
 8002142:	0028      	movs	r0, r5
 8002144:	b009      	add	sp, #36	; 0x24
 8002146:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002148:	9b03      	ldr	r3, [sp, #12]
 800214a:	2200      	movs	r2, #0
 800214c:	9300      	str	r3, [sp, #0]
 800214e:	2120      	movs	r1, #32
 8002150:	0033      	movs	r3, r6
 8002152:	0020      	movs	r0, r4
 8002154:	f7ff fe54 	bl	8001e00 <I2C_WaitOnFlagUntilTimeout>
 8002158:	1e02      	subs	r2, r0, #0
 800215a:	d1f2      	bne.n	8002142 <HAL_I2C_IsDeviceReady+0xd2>
 800215c:	6823      	ldr	r3, [r4, #0]
 800215e:	9805      	ldr	r0, [sp, #20]
 8002160:	61df      	str	r7, [r3, #28]
 8002162:	2720      	movs	r7, #32
 8002164:	61df      	str	r7, [r3, #28]
 8002166:	9907      	ldr	r1, [sp, #28]
 8002168:	4281      	cmp	r1, r0
 800216a:	d10f      	bne.n	800218c <HAL_I2C_IsDeviceReady+0x11c>
 800216c:	2180      	movs	r1, #128	; 0x80
 800216e:	6858      	ldr	r0, [r3, #4]
 8002170:	01c9      	lsls	r1, r1, #7
 8002172:	4301      	orrs	r1, r0
 8002174:	6059      	str	r1, [r3, #4]
 8002176:	9b03      	ldr	r3, [sp, #12]
 8002178:	0039      	movs	r1, r7
 800217a:	9300      	str	r3, [sp, #0]
 800217c:	0020      	movs	r0, r4
 800217e:	0033      	movs	r3, r6
 8002180:	f7ff fe3e 	bl	8001e00 <I2C_WaitOnFlagUntilTimeout>
 8002184:	2800      	cmp	r0, #0
 8002186:	d1dc      	bne.n	8002142 <HAL_I2C_IsDeviceReady+0xd2>
 8002188:	6823      	ldr	r3, [r4, #0]
 800218a:	61df      	str	r7, [r3, #28]
 800218c:	9b07      	ldr	r3, [sp, #28]
 800218e:	9a05      	ldr	r2, [sp, #20]
 8002190:	3301      	adds	r3, #1
 8002192:	9307      	str	r3, [sp, #28]
 8002194:	9b07      	ldr	r3, [sp, #28]
 8002196:	4293      	cmp	r3, r2
 8002198:	d200      	bcs.n	800219c <HAL_I2C_IsDeviceReady+0x12c>
 800219a:	e78b      	b.n	80020b4 <HAL_I2C_IsDeviceReady+0x44>
 800219c:	0022      	movs	r2, r4
 800219e:	2320      	movs	r3, #32
 80021a0:	3241      	adds	r2, #65	; 0x41
 80021a2:	7013      	strb	r3, [r2, #0]
 80021a4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80021a6:	3440      	adds	r4, #64	; 0x40
 80021a8:	4313      	orrs	r3, r2
 80021aa:	6063      	str	r3, [r4, #4]
 80021ac:	2300      	movs	r3, #0
 80021ae:	7023      	strb	r3, [r4, #0]
 80021b0:	e7c7      	b.n	8002142 <HAL_I2C_IsDeviceReady+0xd2>
 80021b2:	46c0      	nop			; (mov r8, r8)
 80021b4:	02002000 	.word	0x02002000

080021b8 <HAL_I2CEx_ConfigAnalogFilter>:
 80021b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80021ba:	0004      	movs	r4, r0
 80021bc:	3441      	adds	r4, #65	; 0x41
 80021be:	7822      	ldrb	r2, [r4, #0]
 80021c0:	0003      	movs	r3, r0
 80021c2:	000f      	movs	r7, r1
 80021c4:	2002      	movs	r0, #2
 80021c6:	b2d6      	uxtb	r6, r2
 80021c8:	2a20      	cmp	r2, #32
 80021ca:	d118      	bne.n	80021fe <HAL_I2CEx_ConfigAnalogFilter+0x46>
 80021cc:	001d      	movs	r5, r3
 80021ce:	3540      	adds	r5, #64	; 0x40
 80021d0:	782a      	ldrb	r2, [r5, #0]
 80021d2:	2a01      	cmp	r2, #1
 80021d4:	d013      	beq.n	80021fe <HAL_I2CEx_ConfigAnalogFilter+0x46>
 80021d6:	2224      	movs	r2, #36	; 0x24
 80021d8:	7022      	strb	r2, [r4, #0]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	3a23      	subs	r2, #35	; 0x23
 80021de:	6819      	ldr	r1, [r3, #0]
 80021e0:	4807      	ldr	r0, [pc, #28]	; (8002200 <HAL_I2CEx_ConfigAnalogFilter+0x48>)
 80021e2:	4391      	bics	r1, r2
 80021e4:	6019      	str	r1, [r3, #0]
 80021e6:	6819      	ldr	r1, [r3, #0]
 80021e8:	4001      	ands	r1, r0
 80021ea:	2000      	movs	r0, #0
 80021ec:	6019      	str	r1, [r3, #0]
 80021ee:	6819      	ldr	r1, [r3, #0]
 80021f0:	4339      	orrs	r1, r7
 80021f2:	6019      	str	r1, [r3, #0]
 80021f4:	6819      	ldr	r1, [r3, #0]
 80021f6:	430a      	orrs	r2, r1
 80021f8:	601a      	str	r2, [r3, #0]
 80021fa:	7026      	strb	r6, [r4, #0]
 80021fc:	7028      	strb	r0, [r5, #0]
 80021fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002200:	ffffefff 	.word	0xffffefff

08002204 <HAL_I2CEx_ConfigDigitalFilter>:
 8002204:	0002      	movs	r2, r0
 8002206:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002208:	3241      	adds	r2, #65	; 0x41
 800220a:	7814      	ldrb	r4, [r2, #0]
 800220c:	0003      	movs	r3, r0
 800220e:	b2e5      	uxtb	r5, r4
 8002210:	2002      	movs	r0, #2
 8002212:	2c20      	cmp	r4, #32
 8002214:	d117      	bne.n	8002246 <HAL_I2CEx_ConfigDigitalFilter+0x42>
 8002216:	001c      	movs	r4, r3
 8002218:	3440      	adds	r4, #64	; 0x40
 800221a:	7826      	ldrb	r6, [r4, #0]
 800221c:	2e01      	cmp	r6, #1
 800221e:	d012      	beq.n	8002246 <HAL_I2CEx_ConfigDigitalFilter+0x42>
 8002220:	3022      	adds	r0, #34	; 0x22
 8002222:	7010      	strb	r0, [r2, #0]
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	3823      	subs	r0, #35	; 0x23
 8002228:	681e      	ldr	r6, [r3, #0]
 800222a:	4f07      	ldr	r7, [pc, #28]	; (8002248 <HAL_I2CEx_ConfigDigitalFilter+0x44>)
 800222c:	4386      	bics	r6, r0
 800222e:	601e      	str	r6, [r3, #0]
 8002230:	681e      	ldr	r6, [r3, #0]
 8002232:	0209      	lsls	r1, r1, #8
 8002234:	403e      	ands	r6, r7
 8002236:	4331      	orrs	r1, r6
 8002238:	6019      	str	r1, [r3, #0]
 800223a:	6819      	ldr	r1, [r3, #0]
 800223c:	4308      	orrs	r0, r1
 800223e:	6018      	str	r0, [r3, #0]
 8002240:	2000      	movs	r0, #0
 8002242:	7015      	strb	r5, [r2, #0]
 8002244:	7020      	strb	r0, [r4, #0]
 8002246:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002248:	fffff0ff 	.word	0xfffff0ff

0800224c <HAL_RCC_GetSysClockFreq>:
 800224c:	220c      	movs	r2, #12
 800224e:	4b1d      	ldr	r3, [pc, #116]	; (80022c4 <HAL_RCC_GetSysClockFreq+0x78>)
 8002250:	b570      	push	{r4, r5, r6, lr}
 8002252:	68dc      	ldr	r4, [r3, #12]
 8002254:	4022      	ands	r2, r4
 8002256:	2a08      	cmp	r2, #8
 8002258:	d031      	beq.n	80022be <HAL_RCC_GetSysClockFreq+0x72>
 800225a:	2a0c      	cmp	r2, #12
 800225c:	d009      	beq.n	8002272 <HAL_RCC_GetSysClockFreq+0x26>
 800225e:	2a04      	cmp	r2, #4
 8002260:	d125      	bne.n	80022ae <HAL_RCC_GetSysClockFreq+0x62>
 8002262:	6818      	ldr	r0, [r3, #0]
 8002264:	4b18      	ldr	r3, [pc, #96]	; (80022c8 <HAL_RCC_GetSysClockFreq+0x7c>)
 8002266:	06c0      	lsls	r0, r0, #27
 8002268:	17c0      	asrs	r0, r0, #31
 800226a:	4018      	ands	r0, r3
 800226c:	4b17      	ldr	r3, [pc, #92]	; (80022cc <HAL_RCC_GetSysClockFreq+0x80>)
 800226e:	18c0      	adds	r0, r0, r3
 8002270:	bd70      	pop	{r4, r5, r6, pc}
 8002272:	02a2      	lsls	r2, r4, #10
 8002274:	4816      	ldr	r0, [pc, #88]	; (80022d0 <HAL_RCC_GetSysClockFreq+0x84>)
 8002276:	0f12      	lsrs	r2, r2, #28
 8002278:	5c80      	ldrb	r0, [r0, r2]
 800227a:	2280      	movs	r2, #128	; 0x80
 800227c:	0224      	lsls	r4, r4, #8
 800227e:	68d9      	ldr	r1, [r3, #12]
 8002280:	0fa4      	lsrs	r4, r4, #30
 8002282:	0252      	lsls	r2, r2, #9
 8002284:	3401      	adds	r4, #1
 8002286:	4211      	tst	r1, r2
 8002288:	d009      	beq.n	800229e <HAL_RCC_GetSysClockFreq+0x52>
 800228a:	4a12      	ldr	r2, [pc, #72]	; (80022d4 <HAL_RCC_GetSysClockFreq+0x88>)
 800228c:	2300      	movs	r3, #0
 800228e:	2100      	movs	r1, #0
 8002290:	f7fe f8e4 	bl	800045c <__aeabi_lmul>
 8002294:	0022      	movs	r2, r4
 8002296:	2300      	movs	r3, #0
 8002298:	f7fe f8c0 	bl	800041c <__aeabi_uldivmod>
 800229c:	e7e8      	b.n	8002270 <HAL_RCC_GetSysClockFreq+0x24>
 800229e:	681a      	ldr	r2, [r3, #0]
 80022a0:	2310      	movs	r3, #16
 80022a2:	421a      	tst	r2, r3
 80022a4:	d001      	beq.n	80022aa <HAL_RCC_GetSysClockFreq+0x5e>
 80022a6:	4a0c      	ldr	r2, [pc, #48]	; (80022d8 <HAL_RCC_GetSysClockFreq+0x8c>)
 80022a8:	e7f0      	b.n	800228c <HAL_RCC_GetSysClockFreq+0x40>
 80022aa:	4a08      	ldr	r2, [pc, #32]	; (80022cc <HAL_RCC_GetSysClockFreq+0x80>)
 80022ac:	e7ee      	b.n	800228c <HAL_RCC_GetSysClockFreq+0x40>
 80022ae:	2080      	movs	r0, #128	; 0x80
 80022b0:	685b      	ldr	r3, [r3, #4]
 80022b2:	0200      	lsls	r0, r0, #8
 80022b4:	041b      	lsls	r3, r3, #16
 80022b6:	0f5b      	lsrs	r3, r3, #29
 80022b8:	3301      	adds	r3, #1
 80022ba:	4098      	lsls	r0, r3
 80022bc:	e7d8      	b.n	8002270 <HAL_RCC_GetSysClockFreq+0x24>
 80022be:	4805      	ldr	r0, [pc, #20]	; (80022d4 <HAL_RCC_GetSysClockFreq+0x88>)
 80022c0:	e7d6      	b.n	8002270 <HAL_RCC_GetSysClockFreq+0x24>
 80022c2:	46c0      	nop			; (mov r8, r8)
 80022c4:	40021000 	.word	0x40021000
 80022c8:	ff48e500 	.word	0xff48e500
 80022cc:	00f42400 	.word	0x00f42400
 80022d0:	080037c2 	.word	0x080037c2
 80022d4:	007a1200 	.word	0x007a1200
 80022d8:	003d0900 	.word	0x003d0900

080022dc <HAL_RCC_OscConfig>:
 80022dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80022de:	0005      	movs	r5, r0
 80022e0:	b085      	sub	sp, #20
 80022e2:	2800      	cmp	r0, #0
 80022e4:	d056      	beq.n	8002394 <HAL_RCC_OscConfig+0xb8>
 80022e6:	230c      	movs	r3, #12
 80022e8:	4cb6      	ldr	r4, [pc, #728]	; (80025c4 <HAL_RCC_OscConfig+0x2e8>)
 80022ea:	6802      	ldr	r2, [r0, #0]
 80022ec:	68e6      	ldr	r6, [r4, #12]
 80022ee:	68e7      	ldr	r7, [r4, #12]
 80022f0:	401e      	ands	r6, r3
 80022f2:	2380      	movs	r3, #128	; 0x80
 80022f4:	025b      	lsls	r3, r3, #9
 80022f6:	0019      	movs	r1, r3
 80022f8:	401f      	ands	r7, r3
 80022fa:	07d2      	lsls	r2, r2, #31
 80022fc:	d43e      	bmi.n	800237c <HAL_RCC_OscConfig+0xa0>
 80022fe:	682b      	ldr	r3, [r5, #0]
 8002300:	079b      	lsls	r3, r3, #30
 8002302:	d500      	bpl.n	8002306 <HAL_RCC_OscConfig+0x2a>
 8002304:	e087      	b.n	8002416 <HAL_RCC_OscConfig+0x13a>
 8002306:	682b      	ldr	r3, [r5, #0]
 8002308:	06db      	lsls	r3, r3, #27
 800230a:	d529      	bpl.n	8002360 <HAL_RCC_OscConfig+0x84>
 800230c:	2e00      	cmp	r6, #0
 800230e:	d000      	beq.n	8002312 <HAL_RCC_OscConfig+0x36>
 8002310:	e0e0      	b.n	80024d4 <HAL_RCC_OscConfig+0x1f8>
 8002312:	6823      	ldr	r3, [r4, #0]
 8002314:	059b      	lsls	r3, r3, #22
 8002316:	d502      	bpl.n	800231e <HAL_RCC_OscConfig+0x42>
 8002318:	69ab      	ldr	r3, [r5, #24]
 800231a:	2b00      	cmp	r3, #0
 800231c:	d03a      	beq.n	8002394 <HAL_RCC_OscConfig+0xb8>
 800231e:	6862      	ldr	r2, [r4, #4]
 8002320:	49a9      	ldr	r1, [pc, #676]	; (80025c8 <HAL_RCC_OscConfig+0x2ec>)
 8002322:	6a2b      	ldr	r3, [r5, #32]
 8002324:	400a      	ands	r2, r1
 8002326:	431a      	orrs	r2, r3
 8002328:	6062      	str	r2, [r4, #4]
 800232a:	6861      	ldr	r1, [r4, #4]
 800232c:	69ea      	ldr	r2, [r5, #28]
 800232e:	0209      	lsls	r1, r1, #8
 8002330:	0a09      	lsrs	r1, r1, #8
 8002332:	0612      	lsls	r2, r2, #24
 8002334:	430a      	orrs	r2, r1
 8002336:	6062      	str	r2, [r4, #4]
 8002338:	2280      	movs	r2, #128	; 0x80
 800233a:	0b5b      	lsrs	r3, r3, #13
 800233c:	3301      	adds	r3, #1
 800233e:	0212      	lsls	r2, r2, #8
 8002340:	409a      	lsls	r2, r3
 8002342:	0013      	movs	r3, r2
 8002344:	68e1      	ldr	r1, [r4, #12]
 8002346:	060a      	lsls	r2, r1, #24
 8002348:	49a0      	ldr	r1, [pc, #640]	; (80025cc <HAL_RCC_OscConfig+0x2f0>)
 800234a:	0f12      	lsrs	r2, r2, #28
 800234c:	5c8a      	ldrb	r2, [r1, r2]
 800234e:	40d3      	lsrs	r3, r2
 8002350:	4a9f      	ldr	r2, [pc, #636]	; (80025d0 <HAL_RCC_OscConfig+0x2f4>)
 8002352:	6013      	str	r3, [r2, #0]
 8002354:	4b9f      	ldr	r3, [pc, #636]	; (80025d4 <HAL_RCC_OscConfig+0x2f8>)
 8002356:	6818      	ldr	r0, [r3, #0]
 8002358:	f7ff fa82 	bl	8001860 <HAL_InitTick>
 800235c:	2800      	cmp	r0, #0
 800235e:	d130      	bne.n	80023c2 <HAL_RCC_OscConfig+0xe6>
 8002360:	682b      	ldr	r3, [r5, #0]
 8002362:	071b      	lsls	r3, r3, #28
 8002364:	d500      	bpl.n	8002368 <HAL_RCC_OscConfig+0x8c>
 8002366:	e0ec      	b.n	8002542 <HAL_RCC_OscConfig+0x266>
 8002368:	682b      	ldr	r3, [r5, #0]
 800236a:	075b      	lsls	r3, r3, #29
 800236c:	d500      	bpl.n	8002370 <HAL_RCC_OscConfig+0x94>
 800236e:	e10e      	b.n	800258e <HAL_RCC_OscConfig+0x2b2>
 8002370:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002372:	2b00      	cmp	r3, #0
 8002374:	d000      	beq.n	8002378 <HAL_RCC_OscConfig+0x9c>
 8002376:	e192      	b.n	800269e <HAL_RCC_OscConfig+0x3c2>
 8002378:	2000      	movs	r0, #0
 800237a:	e022      	b.n	80023c2 <HAL_RCC_OscConfig+0xe6>
 800237c:	2e08      	cmp	r6, #8
 800237e:	d003      	beq.n	8002388 <HAL_RCC_OscConfig+0xac>
 8002380:	2e0c      	cmp	r6, #12
 8002382:	d109      	bne.n	8002398 <HAL_RCC_OscConfig+0xbc>
 8002384:	2f00      	cmp	r7, #0
 8002386:	d007      	beq.n	8002398 <HAL_RCC_OscConfig+0xbc>
 8002388:	6823      	ldr	r3, [r4, #0]
 800238a:	039b      	lsls	r3, r3, #14
 800238c:	d5b7      	bpl.n	80022fe <HAL_RCC_OscConfig+0x22>
 800238e:	686b      	ldr	r3, [r5, #4]
 8002390:	2b00      	cmp	r3, #0
 8002392:	d1b4      	bne.n	80022fe <HAL_RCC_OscConfig+0x22>
 8002394:	2001      	movs	r0, #1
 8002396:	e014      	b.n	80023c2 <HAL_RCC_OscConfig+0xe6>
 8002398:	686a      	ldr	r2, [r5, #4]
 800239a:	428a      	cmp	r2, r1
 800239c:	d113      	bne.n	80023c6 <HAL_RCC_OscConfig+0xea>
 800239e:	6822      	ldr	r2, [r4, #0]
 80023a0:	4313      	orrs	r3, r2
 80023a2:	6023      	str	r3, [r4, #0]
 80023a4:	f7ff faa0 	bl	80018e8 <HAL_GetTick>
 80023a8:	9000      	str	r0, [sp, #0]
 80023aa:	2280      	movs	r2, #128	; 0x80
 80023ac:	6823      	ldr	r3, [r4, #0]
 80023ae:	0292      	lsls	r2, r2, #10
 80023b0:	4213      	tst	r3, r2
 80023b2:	d1a4      	bne.n	80022fe <HAL_RCC_OscConfig+0x22>
 80023b4:	f7ff fa98 	bl	80018e8 <HAL_GetTick>
 80023b8:	9b00      	ldr	r3, [sp, #0]
 80023ba:	1ac0      	subs	r0, r0, r3
 80023bc:	2864      	cmp	r0, #100	; 0x64
 80023be:	d9f4      	bls.n	80023aa <HAL_RCC_OscConfig+0xce>
 80023c0:	2003      	movs	r0, #3
 80023c2:	b005      	add	sp, #20
 80023c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023c6:	21a0      	movs	r1, #160	; 0xa0
 80023c8:	02c9      	lsls	r1, r1, #11
 80023ca:	428a      	cmp	r2, r1
 80023cc:	d105      	bne.n	80023da <HAL_RCC_OscConfig+0xfe>
 80023ce:	2280      	movs	r2, #128	; 0x80
 80023d0:	6821      	ldr	r1, [r4, #0]
 80023d2:	02d2      	lsls	r2, r2, #11
 80023d4:	430a      	orrs	r2, r1
 80023d6:	6022      	str	r2, [r4, #0]
 80023d8:	e7e1      	b.n	800239e <HAL_RCC_OscConfig+0xc2>
 80023da:	6821      	ldr	r1, [r4, #0]
 80023dc:	487e      	ldr	r0, [pc, #504]	; (80025d8 <HAL_RCC_OscConfig+0x2fc>)
 80023de:	4001      	ands	r1, r0
 80023e0:	6021      	str	r1, [r4, #0]
 80023e2:	6821      	ldr	r1, [r4, #0]
 80023e4:	400b      	ands	r3, r1
 80023e6:	9303      	str	r3, [sp, #12]
 80023e8:	9b03      	ldr	r3, [sp, #12]
 80023ea:	497c      	ldr	r1, [pc, #496]	; (80025dc <HAL_RCC_OscConfig+0x300>)
 80023ec:	6823      	ldr	r3, [r4, #0]
 80023ee:	400b      	ands	r3, r1
 80023f0:	6023      	str	r3, [r4, #0]
 80023f2:	2a00      	cmp	r2, #0
 80023f4:	d1d6      	bne.n	80023a4 <HAL_RCC_OscConfig+0xc8>
 80023f6:	f7ff fa77 	bl	80018e8 <HAL_GetTick>
 80023fa:	9000      	str	r0, [sp, #0]
 80023fc:	2280      	movs	r2, #128	; 0x80
 80023fe:	6823      	ldr	r3, [r4, #0]
 8002400:	0292      	lsls	r2, r2, #10
 8002402:	4213      	tst	r3, r2
 8002404:	d100      	bne.n	8002408 <HAL_RCC_OscConfig+0x12c>
 8002406:	e77a      	b.n	80022fe <HAL_RCC_OscConfig+0x22>
 8002408:	f7ff fa6e 	bl	80018e8 <HAL_GetTick>
 800240c:	9b00      	ldr	r3, [sp, #0]
 800240e:	1ac0      	subs	r0, r0, r3
 8002410:	2864      	cmp	r0, #100	; 0x64
 8002412:	d9f3      	bls.n	80023fc <HAL_RCC_OscConfig+0x120>
 8002414:	e7d4      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 8002416:	2220      	movs	r2, #32
 8002418:	68eb      	ldr	r3, [r5, #12]
 800241a:	4213      	tst	r3, r2
 800241c:	d003      	beq.n	8002426 <HAL_RCC_OscConfig+0x14a>
 800241e:	6821      	ldr	r1, [r4, #0]
 8002420:	4393      	bics	r3, r2
 8002422:	4311      	orrs	r1, r2
 8002424:	6021      	str	r1, [r4, #0]
 8002426:	2e04      	cmp	r6, #4
 8002428:	d003      	beq.n	8002432 <HAL_RCC_OscConfig+0x156>
 800242a:	2e0c      	cmp	r6, #12
 800242c:	d124      	bne.n	8002478 <HAL_RCC_OscConfig+0x19c>
 800242e:	2f00      	cmp	r7, #0
 8002430:	d122      	bne.n	8002478 <HAL_RCC_OscConfig+0x19c>
 8002432:	6822      	ldr	r2, [r4, #0]
 8002434:	0752      	lsls	r2, r2, #29
 8002436:	d501      	bpl.n	800243c <HAL_RCC_OscConfig+0x160>
 8002438:	2b00      	cmp	r3, #0
 800243a:	d0ab      	beq.n	8002394 <HAL_RCC_OscConfig+0xb8>
 800243c:	6861      	ldr	r1, [r4, #4]
 800243e:	692a      	ldr	r2, [r5, #16]
 8002440:	4867      	ldr	r0, [pc, #412]	; (80025e0 <HAL_RCC_OscConfig+0x304>)
 8002442:	0212      	lsls	r2, r2, #8
 8002444:	4001      	ands	r1, r0
 8002446:	430a      	orrs	r2, r1
 8002448:	2109      	movs	r1, #9
 800244a:	6062      	str	r2, [r4, #4]
 800244c:	6822      	ldr	r2, [r4, #0]
 800244e:	438a      	bics	r2, r1
 8002450:	4313      	orrs	r3, r2
 8002452:	6023      	str	r3, [r4, #0]
 8002454:	f7ff fefa 	bl	800224c <HAL_RCC_GetSysClockFreq>
 8002458:	68e3      	ldr	r3, [r4, #12]
 800245a:	4a5c      	ldr	r2, [pc, #368]	; (80025cc <HAL_RCC_OscConfig+0x2f0>)
 800245c:	061b      	lsls	r3, r3, #24
 800245e:	0f1b      	lsrs	r3, r3, #28
 8002460:	5cd3      	ldrb	r3, [r2, r3]
 8002462:	40d8      	lsrs	r0, r3
 8002464:	4b5a      	ldr	r3, [pc, #360]	; (80025d0 <HAL_RCC_OscConfig+0x2f4>)
 8002466:	6018      	str	r0, [r3, #0]
 8002468:	4b5a      	ldr	r3, [pc, #360]	; (80025d4 <HAL_RCC_OscConfig+0x2f8>)
 800246a:	6818      	ldr	r0, [r3, #0]
 800246c:	f7ff f9f8 	bl	8001860 <HAL_InitTick>
 8002470:	2800      	cmp	r0, #0
 8002472:	d100      	bne.n	8002476 <HAL_RCC_OscConfig+0x19a>
 8002474:	e747      	b.n	8002306 <HAL_RCC_OscConfig+0x2a>
 8002476:	e7a4      	b.n	80023c2 <HAL_RCC_OscConfig+0xe6>
 8002478:	2b00      	cmp	r3, #0
 800247a:	d019      	beq.n	80024b0 <HAL_RCC_OscConfig+0x1d4>
 800247c:	2109      	movs	r1, #9
 800247e:	6822      	ldr	r2, [r4, #0]
 8002480:	438a      	bics	r2, r1
 8002482:	4313      	orrs	r3, r2
 8002484:	6023      	str	r3, [r4, #0]
 8002486:	f7ff fa2f 	bl	80018e8 <HAL_GetTick>
 800248a:	0007      	movs	r7, r0
 800248c:	2204      	movs	r2, #4
 800248e:	6823      	ldr	r3, [r4, #0]
 8002490:	4213      	tst	r3, r2
 8002492:	d007      	beq.n	80024a4 <HAL_RCC_OscConfig+0x1c8>
 8002494:	6862      	ldr	r2, [r4, #4]
 8002496:	692b      	ldr	r3, [r5, #16]
 8002498:	4951      	ldr	r1, [pc, #324]	; (80025e0 <HAL_RCC_OscConfig+0x304>)
 800249a:	021b      	lsls	r3, r3, #8
 800249c:	400a      	ands	r2, r1
 800249e:	4313      	orrs	r3, r2
 80024a0:	6063      	str	r3, [r4, #4]
 80024a2:	e730      	b.n	8002306 <HAL_RCC_OscConfig+0x2a>
 80024a4:	f7ff fa20 	bl	80018e8 <HAL_GetTick>
 80024a8:	1bc0      	subs	r0, r0, r7
 80024aa:	2802      	cmp	r0, #2
 80024ac:	d9ee      	bls.n	800248c <HAL_RCC_OscConfig+0x1b0>
 80024ae:	e787      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 80024b0:	2201      	movs	r2, #1
 80024b2:	6823      	ldr	r3, [r4, #0]
 80024b4:	4393      	bics	r3, r2
 80024b6:	6023      	str	r3, [r4, #0]
 80024b8:	f7ff fa16 	bl	80018e8 <HAL_GetTick>
 80024bc:	0007      	movs	r7, r0
 80024be:	2204      	movs	r2, #4
 80024c0:	6823      	ldr	r3, [r4, #0]
 80024c2:	4213      	tst	r3, r2
 80024c4:	d100      	bne.n	80024c8 <HAL_RCC_OscConfig+0x1ec>
 80024c6:	e71e      	b.n	8002306 <HAL_RCC_OscConfig+0x2a>
 80024c8:	f7ff fa0e 	bl	80018e8 <HAL_GetTick>
 80024cc:	1bc0      	subs	r0, r0, r7
 80024ce:	2802      	cmp	r0, #2
 80024d0:	d9f5      	bls.n	80024be <HAL_RCC_OscConfig+0x1e2>
 80024d2:	e775      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 80024d4:	69ab      	ldr	r3, [r5, #24]
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d020      	beq.n	800251c <HAL_RCC_OscConfig+0x240>
 80024da:	2380      	movs	r3, #128	; 0x80
 80024dc:	6822      	ldr	r2, [r4, #0]
 80024de:	005b      	lsls	r3, r3, #1
 80024e0:	4313      	orrs	r3, r2
 80024e2:	6023      	str	r3, [r4, #0]
 80024e4:	f7ff fa00 	bl	80018e8 <HAL_GetTick>
 80024e8:	0007      	movs	r7, r0
 80024ea:	2280      	movs	r2, #128	; 0x80
 80024ec:	6823      	ldr	r3, [r4, #0]
 80024ee:	0092      	lsls	r2, r2, #2
 80024f0:	4213      	tst	r3, r2
 80024f2:	d00d      	beq.n	8002510 <HAL_RCC_OscConfig+0x234>
 80024f4:	6863      	ldr	r3, [r4, #4]
 80024f6:	4a34      	ldr	r2, [pc, #208]	; (80025c8 <HAL_RCC_OscConfig+0x2ec>)
 80024f8:	4013      	ands	r3, r2
 80024fa:	6a2a      	ldr	r2, [r5, #32]
 80024fc:	4313      	orrs	r3, r2
 80024fe:	6063      	str	r3, [r4, #4]
 8002500:	6862      	ldr	r2, [r4, #4]
 8002502:	69eb      	ldr	r3, [r5, #28]
 8002504:	0212      	lsls	r2, r2, #8
 8002506:	061b      	lsls	r3, r3, #24
 8002508:	0a12      	lsrs	r2, r2, #8
 800250a:	4313      	orrs	r3, r2
 800250c:	6063      	str	r3, [r4, #4]
 800250e:	e727      	b.n	8002360 <HAL_RCC_OscConfig+0x84>
 8002510:	f7ff f9ea 	bl	80018e8 <HAL_GetTick>
 8002514:	1bc0      	subs	r0, r0, r7
 8002516:	2802      	cmp	r0, #2
 8002518:	d9e7      	bls.n	80024ea <HAL_RCC_OscConfig+0x20e>
 800251a:	e751      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 800251c:	6823      	ldr	r3, [r4, #0]
 800251e:	4a31      	ldr	r2, [pc, #196]	; (80025e4 <HAL_RCC_OscConfig+0x308>)
 8002520:	4013      	ands	r3, r2
 8002522:	6023      	str	r3, [r4, #0]
 8002524:	f7ff f9e0 	bl	80018e8 <HAL_GetTick>
 8002528:	0007      	movs	r7, r0
 800252a:	2280      	movs	r2, #128	; 0x80
 800252c:	6823      	ldr	r3, [r4, #0]
 800252e:	0092      	lsls	r2, r2, #2
 8002530:	4213      	tst	r3, r2
 8002532:	d100      	bne.n	8002536 <HAL_RCC_OscConfig+0x25a>
 8002534:	e714      	b.n	8002360 <HAL_RCC_OscConfig+0x84>
 8002536:	f7ff f9d7 	bl	80018e8 <HAL_GetTick>
 800253a:	1bc0      	subs	r0, r0, r7
 800253c:	2802      	cmp	r0, #2
 800253e:	d9f4      	bls.n	800252a <HAL_RCC_OscConfig+0x24e>
 8002540:	e73e      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 8002542:	696a      	ldr	r2, [r5, #20]
 8002544:	2301      	movs	r3, #1
 8002546:	2a00      	cmp	r2, #0
 8002548:	d010      	beq.n	800256c <HAL_RCC_OscConfig+0x290>
 800254a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800254c:	4313      	orrs	r3, r2
 800254e:	6523      	str	r3, [r4, #80]	; 0x50
 8002550:	f7ff f9ca 	bl	80018e8 <HAL_GetTick>
 8002554:	0007      	movs	r7, r0
 8002556:	2202      	movs	r2, #2
 8002558:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800255a:	4213      	tst	r3, r2
 800255c:	d000      	beq.n	8002560 <HAL_RCC_OscConfig+0x284>
 800255e:	e703      	b.n	8002368 <HAL_RCC_OscConfig+0x8c>
 8002560:	f7ff f9c2 	bl	80018e8 <HAL_GetTick>
 8002564:	1bc0      	subs	r0, r0, r7
 8002566:	2802      	cmp	r0, #2
 8002568:	d9f5      	bls.n	8002556 <HAL_RCC_OscConfig+0x27a>
 800256a:	e729      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 800256c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800256e:	439a      	bics	r2, r3
 8002570:	6522      	str	r2, [r4, #80]	; 0x50
 8002572:	f7ff f9b9 	bl	80018e8 <HAL_GetTick>
 8002576:	0007      	movs	r7, r0
 8002578:	2202      	movs	r2, #2
 800257a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800257c:	4213      	tst	r3, r2
 800257e:	d100      	bne.n	8002582 <HAL_RCC_OscConfig+0x2a6>
 8002580:	e6f2      	b.n	8002368 <HAL_RCC_OscConfig+0x8c>
 8002582:	f7ff f9b1 	bl	80018e8 <HAL_GetTick>
 8002586:	1bc0      	subs	r0, r0, r7
 8002588:	2802      	cmp	r0, #2
 800258a:	d9f5      	bls.n	8002578 <HAL_RCC_OscConfig+0x29c>
 800258c:	e718      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 800258e:	2380      	movs	r3, #128	; 0x80
 8002590:	2100      	movs	r1, #0
 8002592:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002594:	055b      	lsls	r3, r3, #21
 8002596:	9100      	str	r1, [sp, #0]
 8002598:	421a      	tst	r2, r3
 800259a:	d104      	bne.n	80025a6 <HAL_RCC_OscConfig+0x2ca>
 800259c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800259e:	4313      	orrs	r3, r2
 80025a0:	63a3      	str	r3, [r4, #56]	; 0x38
 80025a2:	2301      	movs	r3, #1
 80025a4:	9300      	str	r3, [sp, #0]
 80025a6:	2280      	movs	r2, #128	; 0x80
 80025a8:	4f0f      	ldr	r7, [pc, #60]	; (80025e8 <HAL_RCC_OscConfig+0x30c>)
 80025aa:	0052      	lsls	r2, r2, #1
 80025ac:	683b      	ldr	r3, [r7, #0]
 80025ae:	4213      	tst	r3, r2
 80025b0:	d01c      	beq.n	80025ec <HAL_RCC_OscConfig+0x310>
 80025b2:	2280      	movs	r2, #128	; 0x80
 80025b4:	68ab      	ldr	r3, [r5, #8]
 80025b6:	0052      	lsls	r2, r2, #1
 80025b8:	4293      	cmp	r3, r2
 80025ba:	d12b      	bne.n	8002614 <HAL_RCC_OscConfig+0x338>
 80025bc:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80025be:	4313      	orrs	r3, r2
 80025c0:	6523      	str	r3, [r4, #80]	; 0x50
 80025c2:	e04c      	b.n	800265e <HAL_RCC_OscConfig+0x382>
 80025c4:	40021000 	.word	0x40021000
 80025c8:	ffff1fff 	.word	0xffff1fff
 80025cc:	080037aa 	.word	0x080037aa
 80025d0:	20000004 	.word	0x20000004
 80025d4:	2000000c 	.word	0x2000000c
 80025d8:	fffeffff 	.word	0xfffeffff
 80025dc:	fffbffff 	.word	0xfffbffff
 80025e0:	ffffe0ff 	.word	0xffffe0ff
 80025e4:	fffffeff 	.word	0xfffffeff
 80025e8:	40007000 	.word	0x40007000
 80025ec:	2280      	movs	r2, #128	; 0x80
 80025ee:	683b      	ldr	r3, [r7, #0]
 80025f0:	0052      	lsls	r2, r2, #1
 80025f2:	4313      	orrs	r3, r2
 80025f4:	603b      	str	r3, [r7, #0]
 80025f6:	f7ff f977 	bl	80018e8 <HAL_GetTick>
 80025fa:	9001      	str	r0, [sp, #4]
 80025fc:	2280      	movs	r2, #128	; 0x80
 80025fe:	683b      	ldr	r3, [r7, #0]
 8002600:	0052      	lsls	r2, r2, #1
 8002602:	4213      	tst	r3, r2
 8002604:	d1d5      	bne.n	80025b2 <HAL_RCC_OscConfig+0x2d6>
 8002606:	f7ff f96f 	bl	80018e8 <HAL_GetTick>
 800260a:	9b01      	ldr	r3, [sp, #4]
 800260c:	1ac0      	subs	r0, r0, r3
 800260e:	2864      	cmp	r0, #100	; 0x64
 8002610:	d9f4      	bls.n	80025fc <HAL_RCC_OscConfig+0x320>
 8002612:	e6d5      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 8002614:	2b00      	cmp	r3, #0
 8002616:	d116      	bne.n	8002646 <HAL_RCC_OscConfig+0x36a>
 8002618:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800261a:	4a51      	ldr	r2, [pc, #324]	; (8002760 <HAL_RCC_OscConfig+0x484>)
 800261c:	4013      	ands	r3, r2
 800261e:	6523      	str	r3, [r4, #80]	; 0x50
 8002620:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002622:	4a50      	ldr	r2, [pc, #320]	; (8002764 <HAL_RCC_OscConfig+0x488>)
 8002624:	4013      	ands	r3, r2
 8002626:	6523      	str	r3, [r4, #80]	; 0x50
 8002628:	f7ff f95e 	bl	80018e8 <HAL_GetTick>
 800262c:	0007      	movs	r7, r0
 800262e:	2280      	movs	r2, #128	; 0x80
 8002630:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002632:	0092      	lsls	r2, r2, #2
 8002634:	4213      	tst	r3, r2
 8002636:	d01a      	beq.n	800266e <HAL_RCC_OscConfig+0x392>
 8002638:	f7ff f956 	bl	80018e8 <HAL_GetTick>
 800263c:	4b4a      	ldr	r3, [pc, #296]	; (8002768 <HAL_RCC_OscConfig+0x48c>)
 800263e:	1bc0      	subs	r0, r0, r7
 8002640:	4298      	cmp	r0, r3
 8002642:	d9f4      	bls.n	800262e <HAL_RCC_OscConfig+0x352>
 8002644:	e6bc      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 8002646:	21a0      	movs	r1, #160	; 0xa0
 8002648:	00c9      	lsls	r1, r1, #3
 800264a:	428b      	cmp	r3, r1
 800264c:	d118      	bne.n	8002680 <HAL_RCC_OscConfig+0x3a4>
 800264e:	2380      	movs	r3, #128	; 0x80
 8002650:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8002652:	00db      	lsls	r3, r3, #3
 8002654:	430b      	orrs	r3, r1
 8002656:	6523      	str	r3, [r4, #80]	; 0x50
 8002658:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800265a:	431a      	orrs	r2, r3
 800265c:	6522      	str	r2, [r4, #80]	; 0x50
 800265e:	f7ff f943 	bl	80018e8 <HAL_GetTick>
 8002662:	0007      	movs	r7, r0
 8002664:	2280      	movs	r2, #128	; 0x80
 8002666:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002668:	0092      	lsls	r2, r2, #2
 800266a:	4213      	tst	r3, r2
 800266c:	d010      	beq.n	8002690 <HAL_RCC_OscConfig+0x3b4>
 800266e:	9b00      	ldr	r3, [sp, #0]
 8002670:	2b01      	cmp	r3, #1
 8002672:	d000      	beq.n	8002676 <HAL_RCC_OscConfig+0x39a>
 8002674:	e67c      	b.n	8002370 <HAL_RCC_OscConfig+0x94>
 8002676:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002678:	4a3c      	ldr	r2, [pc, #240]	; (800276c <HAL_RCC_OscConfig+0x490>)
 800267a:	4013      	ands	r3, r2
 800267c:	63a3      	str	r3, [r4, #56]	; 0x38
 800267e:	e677      	b.n	8002370 <HAL_RCC_OscConfig+0x94>
 8002680:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002682:	4a37      	ldr	r2, [pc, #220]	; (8002760 <HAL_RCC_OscConfig+0x484>)
 8002684:	4013      	ands	r3, r2
 8002686:	6523      	str	r3, [r4, #80]	; 0x50
 8002688:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800268a:	4a36      	ldr	r2, [pc, #216]	; (8002764 <HAL_RCC_OscConfig+0x488>)
 800268c:	4013      	ands	r3, r2
 800268e:	e797      	b.n	80025c0 <HAL_RCC_OscConfig+0x2e4>
 8002690:	f7ff f92a 	bl	80018e8 <HAL_GetTick>
 8002694:	4b34      	ldr	r3, [pc, #208]	; (8002768 <HAL_RCC_OscConfig+0x48c>)
 8002696:	1bc0      	subs	r0, r0, r7
 8002698:	4298      	cmp	r0, r3
 800269a:	d9e3      	bls.n	8002664 <HAL_RCC_OscConfig+0x388>
 800269c:	e690      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 800269e:	2e0c      	cmp	r6, #12
 80026a0:	d043      	beq.n	800272a <HAL_RCC_OscConfig+0x44e>
 80026a2:	4a33      	ldr	r2, [pc, #204]	; (8002770 <HAL_RCC_OscConfig+0x494>)
 80026a4:	2b02      	cmp	r3, #2
 80026a6:	d12e      	bne.n	8002706 <HAL_RCC_OscConfig+0x42a>
 80026a8:	6823      	ldr	r3, [r4, #0]
 80026aa:	2780      	movs	r7, #128	; 0x80
 80026ac:	4013      	ands	r3, r2
 80026ae:	6023      	str	r3, [r4, #0]
 80026b0:	f7ff f91a 	bl	80018e8 <HAL_GetTick>
 80026b4:	0006      	movs	r6, r0
 80026b6:	04bf      	lsls	r7, r7, #18
 80026b8:	6823      	ldr	r3, [r4, #0]
 80026ba:	423b      	tst	r3, r7
 80026bc:	d11d      	bne.n	80026fa <HAL_RCC_OscConfig+0x41e>
 80026be:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 80026c0:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80026c2:	68e2      	ldr	r2, [r4, #12]
 80026c4:	430b      	orrs	r3, r1
 80026c6:	492b      	ldr	r1, [pc, #172]	; (8002774 <HAL_RCC_OscConfig+0x498>)
 80026c8:	2680      	movs	r6, #128	; 0x80
 80026ca:	400a      	ands	r2, r1
 80026cc:	4313      	orrs	r3, r2
 80026ce:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 80026d0:	04b6      	lsls	r6, r6, #18
 80026d2:	4313      	orrs	r3, r2
 80026d4:	60e3      	str	r3, [r4, #12]
 80026d6:	2380      	movs	r3, #128	; 0x80
 80026d8:	6822      	ldr	r2, [r4, #0]
 80026da:	045b      	lsls	r3, r3, #17
 80026dc:	4313      	orrs	r3, r2
 80026de:	6023      	str	r3, [r4, #0]
 80026e0:	f7ff f902 	bl	80018e8 <HAL_GetTick>
 80026e4:	0005      	movs	r5, r0
 80026e6:	6823      	ldr	r3, [r4, #0]
 80026e8:	4233      	tst	r3, r6
 80026ea:	d000      	beq.n	80026ee <HAL_RCC_OscConfig+0x412>
 80026ec:	e644      	b.n	8002378 <HAL_RCC_OscConfig+0x9c>
 80026ee:	f7ff f8fb 	bl	80018e8 <HAL_GetTick>
 80026f2:	1b40      	subs	r0, r0, r5
 80026f4:	2802      	cmp	r0, #2
 80026f6:	d9f6      	bls.n	80026e6 <HAL_RCC_OscConfig+0x40a>
 80026f8:	e662      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 80026fa:	f7ff f8f5 	bl	80018e8 <HAL_GetTick>
 80026fe:	1b80      	subs	r0, r0, r6
 8002700:	2802      	cmp	r0, #2
 8002702:	d9d9      	bls.n	80026b8 <HAL_RCC_OscConfig+0x3dc>
 8002704:	e65c      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 8002706:	6823      	ldr	r3, [r4, #0]
 8002708:	2680      	movs	r6, #128	; 0x80
 800270a:	4013      	ands	r3, r2
 800270c:	6023      	str	r3, [r4, #0]
 800270e:	f7ff f8eb 	bl	80018e8 <HAL_GetTick>
 8002712:	0005      	movs	r5, r0
 8002714:	04b6      	lsls	r6, r6, #18
 8002716:	6823      	ldr	r3, [r4, #0]
 8002718:	4233      	tst	r3, r6
 800271a:	d100      	bne.n	800271e <HAL_RCC_OscConfig+0x442>
 800271c:	e62c      	b.n	8002378 <HAL_RCC_OscConfig+0x9c>
 800271e:	f7ff f8e3 	bl	80018e8 <HAL_GetTick>
 8002722:	1b40      	subs	r0, r0, r5
 8002724:	2802      	cmp	r0, #2
 8002726:	d9f6      	bls.n	8002716 <HAL_RCC_OscConfig+0x43a>
 8002728:	e64a      	b.n	80023c0 <HAL_RCC_OscConfig+0xe4>
 800272a:	0018      	movs	r0, r3
 800272c:	2b01      	cmp	r3, #1
 800272e:	d100      	bne.n	8002732 <HAL_RCC_OscConfig+0x456>
 8002730:	e647      	b.n	80023c2 <HAL_RCC_OscConfig+0xe6>
 8002732:	2280      	movs	r2, #128	; 0x80
 8002734:	68e3      	ldr	r3, [r4, #12]
 8002736:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 8002738:	0252      	lsls	r2, r2, #9
 800273a:	401a      	ands	r2, r3
 800273c:	428a      	cmp	r2, r1
 800273e:	d000      	beq.n	8002742 <HAL_RCC_OscConfig+0x466>
 8002740:	e628      	b.n	8002394 <HAL_RCC_OscConfig+0xb8>
 8002742:	22f0      	movs	r2, #240	; 0xf0
 8002744:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 8002746:	0392      	lsls	r2, r2, #14
 8002748:	401a      	ands	r2, r3
 800274a:	428a      	cmp	r2, r1
 800274c:	d000      	beq.n	8002750 <HAL_RCC_OscConfig+0x474>
 800274e:	e621      	b.n	8002394 <HAL_RCC_OscConfig+0xb8>
 8002750:	22c0      	movs	r2, #192	; 0xc0
 8002752:	0412      	lsls	r2, r2, #16
 8002754:	4013      	ands	r3, r2
 8002756:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 8002758:	4293      	cmp	r3, r2
 800275a:	d100      	bne.n	800275e <HAL_RCC_OscConfig+0x482>
 800275c:	e60c      	b.n	8002378 <HAL_RCC_OscConfig+0x9c>
 800275e:	e619      	b.n	8002394 <HAL_RCC_OscConfig+0xb8>
 8002760:	fffffeff 	.word	0xfffffeff
 8002764:	fffffbff 	.word	0xfffffbff
 8002768:	00001388 	.word	0x00001388
 800276c:	efffffff 	.word	0xefffffff
 8002770:	feffffff 	.word	0xfeffffff
 8002774:	ff02ffff 	.word	0xff02ffff

08002778 <HAL_RCC_ClockConfig>:
 8002778:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800277a:	1e04      	subs	r4, r0, #0
 800277c:	9101      	str	r1, [sp, #4]
 800277e:	d101      	bne.n	8002784 <HAL_RCC_ClockConfig+0xc>
 8002780:	2001      	movs	r0, #1
 8002782:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8002784:	2501      	movs	r5, #1
 8002786:	4e5b      	ldr	r6, [pc, #364]	; (80028f4 <HAL_RCC_ClockConfig+0x17c>)
 8002788:	9a01      	ldr	r2, [sp, #4]
 800278a:	6833      	ldr	r3, [r6, #0]
 800278c:	402b      	ands	r3, r5
 800278e:	4293      	cmp	r3, r2
 8002790:	d331      	bcc.n	80027f6 <HAL_RCC_ClockConfig+0x7e>
 8002792:	6822      	ldr	r2, [r4, #0]
 8002794:	0793      	lsls	r3, r2, #30
 8002796:	d443      	bmi.n	8002820 <HAL_RCC_ClockConfig+0xa8>
 8002798:	07d3      	lsls	r3, r2, #31
 800279a:	d449      	bmi.n	8002830 <HAL_RCC_ClockConfig+0xb8>
 800279c:	2501      	movs	r5, #1
 800279e:	6833      	ldr	r3, [r6, #0]
 80027a0:	9a01      	ldr	r2, [sp, #4]
 80027a2:	402b      	ands	r3, r5
 80027a4:	4293      	cmp	r3, r2
 80027a6:	d909      	bls.n	80027bc <HAL_RCC_ClockConfig+0x44>
 80027a8:	6833      	ldr	r3, [r6, #0]
 80027aa:	43ab      	bics	r3, r5
 80027ac:	6033      	str	r3, [r6, #0]
 80027ae:	f7ff f89b 	bl	80018e8 <HAL_GetTick>
 80027b2:	0007      	movs	r7, r0
 80027b4:	6833      	ldr	r3, [r6, #0]
 80027b6:	422b      	tst	r3, r5
 80027b8:	d000      	beq.n	80027bc <HAL_RCC_ClockConfig+0x44>
 80027ba:	e08c      	b.n	80028d6 <HAL_RCC_ClockConfig+0x15e>
 80027bc:	6822      	ldr	r2, [r4, #0]
 80027be:	4d4e      	ldr	r5, [pc, #312]	; (80028f8 <HAL_RCC_ClockConfig+0x180>)
 80027c0:	0753      	lsls	r3, r2, #29
 80027c2:	d500      	bpl.n	80027c6 <HAL_RCC_ClockConfig+0x4e>
 80027c4:	e08f      	b.n	80028e6 <HAL_RCC_ClockConfig+0x16e>
 80027c6:	0713      	lsls	r3, r2, #28
 80027c8:	d506      	bpl.n	80027d8 <HAL_RCC_ClockConfig+0x60>
 80027ca:	68e9      	ldr	r1, [r5, #12]
 80027cc:	6923      	ldr	r3, [r4, #16]
 80027ce:	4a4b      	ldr	r2, [pc, #300]	; (80028fc <HAL_RCC_ClockConfig+0x184>)
 80027d0:	00db      	lsls	r3, r3, #3
 80027d2:	400a      	ands	r2, r1
 80027d4:	4313      	orrs	r3, r2
 80027d6:	60eb      	str	r3, [r5, #12]
 80027d8:	f7ff fd38 	bl	800224c <HAL_RCC_GetSysClockFreq>
 80027dc:	68eb      	ldr	r3, [r5, #12]
 80027de:	4a48      	ldr	r2, [pc, #288]	; (8002900 <HAL_RCC_ClockConfig+0x188>)
 80027e0:	061b      	lsls	r3, r3, #24
 80027e2:	0f1b      	lsrs	r3, r3, #28
 80027e4:	5cd3      	ldrb	r3, [r2, r3]
 80027e6:	40d8      	lsrs	r0, r3
 80027e8:	4b46      	ldr	r3, [pc, #280]	; (8002904 <HAL_RCC_ClockConfig+0x18c>)
 80027ea:	6018      	str	r0, [r3, #0]
 80027ec:	4b46      	ldr	r3, [pc, #280]	; (8002908 <HAL_RCC_ClockConfig+0x190>)
 80027ee:	6818      	ldr	r0, [r3, #0]
 80027f0:	f7ff f836 	bl	8001860 <HAL_InitTick>
 80027f4:	e7c5      	b.n	8002782 <HAL_RCC_ClockConfig+0xa>
 80027f6:	6833      	ldr	r3, [r6, #0]
 80027f8:	9a01      	ldr	r2, [sp, #4]
 80027fa:	43ab      	bics	r3, r5
 80027fc:	4313      	orrs	r3, r2
 80027fe:	6033      	str	r3, [r6, #0]
 8002800:	f7ff f872 	bl	80018e8 <HAL_GetTick>
 8002804:	0007      	movs	r7, r0
 8002806:	6833      	ldr	r3, [r6, #0]
 8002808:	9a01      	ldr	r2, [sp, #4]
 800280a:	402b      	ands	r3, r5
 800280c:	4293      	cmp	r3, r2
 800280e:	d0c0      	beq.n	8002792 <HAL_RCC_ClockConfig+0x1a>
 8002810:	f7ff f86a 	bl	80018e8 <HAL_GetTick>
 8002814:	4b3d      	ldr	r3, [pc, #244]	; (800290c <HAL_RCC_ClockConfig+0x194>)
 8002816:	1bc0      	subs	r0, r0, r7
 8002818:	4298      	cmp	r0, r3
 800281a:	d9f4      	bls.n	8002806 <HAL_RCC_ClockConfig+0x8e>
 800281c:	2003      	movs	r0, #3
 800281e:	e7b0      	b.n	8002782 <HAL_RCC_ClockConfig+0xa>
 8002820:	20f0      	movs	r0, #240	; 0xf0
 8002822:	4935      	ldr	r1, [pc, #212]	; (80028f8 <HAL_RCC_ClockConfig+0x180>)
 8002824:	68cb      	ldr	r3, [r1, #12]
 8002826:	4383      	bics	r3, r0
 8002828:	68a0      	ldr	r0, [r4, #8]
 800282a:	4303      	orrs	r3, r0
 800282c:	60cb      	str	r3, [r1, #12]
 800282e:	e7b3      	b.n	8002798 <HAL_RCC_ClockConfig+0x20>
 8002830:	4d31      	ldr	r5, [pc, #196]	; (80028f8 <HAL_RCC_ClockConfig+0x180>)
 8002832:	6862      	ldr	r2, [r4, #4]
 8002834:	682b      	ldr	r3, [r5, #0]
 8002836:	2a02      	cmp	r2, #2
 8002838:	d118      	bne.n	800286c <HAL_RCC_ClockConfig+0xf4>
 800283a:	039b      	lsls	r3, r3, #14
 800283c:	d5a0      	bpl.n	8002780 <HAL_RCC_ClockConfig+0x8>
 800283e:	2103      	movs	r1, #3
 8002840:	68eb      	ldr	r3, [r5, #12]
 8002842:	438b      	bics	r3, r1
 8002844:	4313      	orrs	r3, r2
 8002846:	60eb      	str	r3, [r5, #12]
 8002848:	f7ff f84e 	bl	80018e8 <HAL_GetTick>
 800284c:	6863      	ldr	r3, [r4, #4]
 800284e:	0007      	movs	r7, r0
 8002850:	2b02      	cmp	r3, #2
 8002852:	d118      	bne.n	8002886 <HAL_RCC_ClockConfig+0x10e>
 8002854:	220c      	movs	r2, #12
 8002856:	68eb      	ldr	r3, [r5, #12]
 8002858:	4013      	ands	r3, r2
 800285a:	2b08      	cmp	r3, #8
 800285c:	d09e      	beq.n	800279c <HAL_RCC_ClockConfig+0x24>
 800285e:	f7ff f843 	bl	80018e8 <HAL_GetTick>
 8002862:	4b2a      	ldr	r3, [pc, #168]	; (800290c <HAL_RCC_ClockConfig+0x194>)
 8002864:	1bc0      	subs	r0, r0, r7
 8002866:	4298      	cmp	r0, r3
 8002868:	d9f4      	bls.n	8002854 <HAL_RCC_ClockConfig+0xdc>
 800286a:	e7d7      	b.n	800281c <HAL_RCC_ClockConfig+0xa4>
 800286c:	2a03      	cmp	r2, #3
 800286e:	d102      	bne.n	8002876 <HAL_RCC_ClockConfig+0xfe>
 8002870:	019b      	lsls	r3, r3, #6
 8002872:	d4e4      	bmi.n	800283e <HAL_RCC_ClockConfig+0xc6>
 8002874:	e784      	b.n	8002780 <HAL_RCC_ClockConfig+0x8>
 8002876:	2a01      	cmp	r2, #1
 8002878:	d102      	bne.n	8002880 <HAL_RCC_ClockConfig+0x108>
 800287a:	075b      	lsls	r3, r3, #29
 800287c:	d4df      	bmi.n	800283e <HAL_RCC_ClockConfig+0xc6>
 800287e:	e77f      	b.n	8002780 <HAL_RCC_ClockConfig+0x8>
 8002880:	059b      	lsls	r3, r3, #22
 8002882:	d4dc      	bmi.n	800283e <HAL_RCC_ClockConfig+0xc6>
 8002884:	e77c      	b.n	8002780 <HAL_RCC_ClockConfig+0x8>
 8002886:	2b03      	cmp	r3, #3
 8002888:	d10b      	bne.n	80028a2 <HAL_RCC_ClockConfig+0x12a>
 800288a:	220c      	movs	r2, #12
 800288c:	68eb      	ldr	r3, [r5, #12]
 800288e:	4013      	ands	r3, r2
 8002890:	4293      	cmp	r3, r2
 8002892:	d083      	beq.n	800279c <HAL_RCC_ClockConfig+0x24>
 8002894:	f7ff f828 	bl	80018e8 <HAL_GetTick>
 8002898:	4b1c      	ldr	r3, [pc, #112]	; (800290c <HAL_RCC_ClockConfig+0x194>)
 800289a:	1bc0      	subs	r0, r0, r7
 800289c:	4298      	cmp	r0, r3
 800289e:	d9f4      	bls.n	800288a <HAL_RCC_ClockConfig+0x112>
 80028a0:	e7bc      	b.n	800281c <HAL_RCC_ClockConfig+0xa4>
 80028a2:	2b01      	cmp	r3, #1
 80028a4:	d011      	beq.n	80028ca <HAL_RCC_ClockConfig+0x152>
 80028a6:	220c      	movs	r2, #12
 80028a8:	68eb      	ldr	r3, [r5, #12]
 80028aa:	4213      	tst	r3, r2
 80028ac:	d100      	bne.n	80028b0 <HAL_RCC_ClockConfig+0x138>
 80028ae:	e775      	b.n	800279c <HAL_RCC_ClockConfig+0x24>
 80028b0:	f7ff f81a 	bl	80018e8 <HAL_GetTick>
 80028b4:	4b15      	ldr	r3, [pc, #84]	; (800290c <HAL_RCC_ClockConfig+0x194>)
 80028b6:	1bc0      	subs	r0, r0, r7
 80028b8:	4298      	cmp	r0, r3
 80028ba:	d9f4      	bls.n	80028a6 <HAL_RCC_ClockConfig+0x12e>
 80028bc:	e7ae      	b.n	800281c <HAL_RCC_ClockConfig+0xa4>
 80028be:	f7ff f813 	bl	80018e8 <HAL_GetTick>
 80028c2:	4b12      	ldr	r3, [pc, #72]	; (800290c <HAL_RCC_ClockConfig+0x194>)
 80028c4:	1bc0      	subs	r0, r0, r7
 80028c6:	4298      	cmp	r0, r3
 80028c8:	d8a8      	bhi.n	800281c <HAL_RCC_ClockConfig+0xa4>
 80028ca:	220c      	movs	r2, #12
 80028cc:	68eb      	ldr	r3, [r5, #12]
 80028ce:	4013      	ands	r3, r2
 80028d0:	2b04      	cmp	r3, #4
 80028d2:	d1f4      	bne.n	80028be <HAL_RCC_ClockConfig+0x146>
 80028d4:	e762      	b.n	800279c <HAL_RCC_ClockConfig+0x24>
 80028d6:	f7ff f807 	bl	80018e8 <HAL_GetTick>
 80028da:	4b0c      	ldr	r3, [pc, #48]	; (800290c <HAL_RCC_ClockConfig+0x194>)
 80028dc:	1bc0      	subs	r0, r0, r7
 80028de:	4298      	cmp	r0, r3
 80028e0:	d800      	bhi.n	80028e4 <HAL_RCC_ClockConfig+0x16c>
 80028e2:	e767      	b.n	80027b4 <HAL_RCC_ClockConfig+0x3c>
 80028e4:	e79a      	b.n	800281c <HAL_RCC_ClockConfig+0xa4>
 80028e6:	68eb      	ldr	r3, [r5, #12]
 80028e8:	4909      	ldr	r1, [pc, #36]	; (8002910 <HAL_RCC_ClockConfig+0x198>)
 80028ea:	400b      	ands	r3, r1
 80028ec:	68e1      	ldr	r1, [r4, #12]
 80028ee:	430b      	orrs	r3, r1
 80028f0:	60eb      	str	r3, [r5, #12]
 80028f2:	e768      	b.n	80027c6 <HAL_RCC_ClockConfig+0x4e>
 80028f4:	40022000 	.word	0x40022000
 80028f8:	40021000 	.word	0x40021000
 80028fc:	ffffc7ff 	.word	0xffffc7ff
 8002900:	080037aa 	.word	0x080037aa
 8002904:	20000004 	.word	0x20000004
 8002908:	2000000c 	.word	0x2000000c
 800290c:	00001388 	.word	0x00001388
 8002910:	fffff8ff 	.word	0xfffff8ff

08002914 <HAL_RCC_GetHCLKFreq>:
 8002914:	4b01      	ldr	r3, [pc, #4]	; (800291c <HAL_RCC_GetHCLKFreq+0x8>)
 8002916:	6818      	ldr	r0, [r3, #0]
 8002918:	4770      	bx	lr
 800291a:	46c0      	nop			; (mov r8, r8)
 800291c:	20000004 	.word	0x20000004

08002920 <HAL_RCCEx_PeriphCLKConfig>:
 8002920:	6803      	ldr	r3, [r0, #0]
 8002922:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002924:	0005      	movs	r5, r0
 8002926:	069b      	lsls	r3, r3, #26
 8002928:	d53c      	bpl.n	80029a4 <HAL_RCCEx_PeriphCLKConfig+0x84>
 800292a:	2380      	movs	r3, #128	; 0x80
 800292c:	2100      	movs	r1, #0
 800292e:	4c4f      	ldr	r4, [pc, #316]	; (8002a6c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8002930:	055b      	lsls	r3, r3, #21
 8002932:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002934:	9100      	str	r1, [sp, #0]
 8002936:	421a      	tst	r2, r3
 8002938:	d104      	bne.n	8002944 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800293a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800293c:	4313      	orrs	r3, r2
 800293e:	63a3      	str	r3, [r4, #56]	; 0x38
 8002940:	2301      	movs	r3, #1
 8002942:	9300      	str	r3, [sp, #0]
 8002944:	2780      	movs	r7, #128	; 0x80
 8002946:	4e4a      	ldr	r6, [pc, #296]	; (8002a70 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8002948:	007f      	lsls	r7, r7, #1
 800294a:	6833      	ldr	r3, [r6, #0]
 800294c:	423b      	tst	r3, r7
 800294e:	d050      	beq.n	80029f2 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8002950:	686a      	ldr	r2, [r5, #4]
 8002952:	23c0      	movs	r3, #192	; 0xc0
 8002954:	20c0      	movs	r0, #192	; 0xc0
 8002956:	0016      	movs	r6, r2
 8002958:	6821      	ldr	r1, [r4, #0]
 800295a:	0380      	lsls	r0, r0, #14
 800295c:	029b      	lsls	r3, r3, #10
 800295e:	401e      	ands	r6, r3
 8002960:	4002      	ands	r2, r0
 8002962:	4001      	ands	r1, r0
 8002964:	428a      	cmp	r2, r1
 8002966:	d155      	bne.n	8002a14 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8002968:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800296a:	0011      	movs	r1, r2
 800296c:	4019      	ands	r1, r3
 800296e:	421a      	tst	r2, r3
 8002970:	d157      	bne.n	8002a22 <HAL_RCCEx_PeriphCLKConfig+0x102>
 8002972:	6869      	ldr	r1, [r5, #4]
 8002974:	23c0      	movs	r3, #192	; 0xc0
 8002976:	000a      	movs	r2, r1
 8002978:	029b      	lsls	r3, r3, #10
 800297a:	401a      	ands	r2, r3
 800297c:	429a      	cmp	r2, r3
 800297e:	d107      	bne.n	8002990 <HAL_RCCEx_PeriphCLKConfig+0x70>
 8002980:	6823      	ldr	r3, [r4, #0]
 8002982:	483c      	ldr	r0, [pc, #240]	; (8002a74 <HAL_RCCEx_PeriphCLKConfig+0x154>)
 8002984:	4003      	ands	r3, r0
 8002986:	20c0      	movs	r0, #192	; 0xc0
 8002988:	0380      	lsls	r0, r0, #14
 800298a:	4001      	ands	r1, r0
 800298c:	430b      	orrs	r3, r1
 800298e:	6023      	str	r3, [r4, #0]
 8002990:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002992:	431a      	orrs	r2, r3
 8002994:	9b00      	ldr	r3, [sp, #0]
 8002996:	6522      	str	r2, [r4, #80]	; 0x50
 8002998:	2b01      	cmp	r3, #1
 800299a:	d103      	bne.n	80029a4 <HAL_RCCEx_PeriphCLKConfig+0x84>
 800299c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800299e:	4a36      	ldr	r2, [pc, #216]	; (8002a78 <HAL_RCCEx_PeriphCLKConfig+0x158>)
 80029a0:	4013      	ands	r3, r2
 80029a2:	63a3      	str	r3, [r4, #56]	; 0x38
 80029a4:	682a      	ldr	r2, [r5, #0]
 80029a6:	0793      	lsls	r3, r2, #30
 80029a8:	d506      	bpl.n	80029b8 <HAL_RCCEx_PeriphCLKConfig+0x98>
 80029aa:	200c      	movs	r0, #12
 80029ac:	492f      	ldr	r1, [pc, #188]	; (8002a6c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80029ae:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
 80029b0:	4383      	bics	r3, r0
 80029b2:	68a8      	ldr	r0, [r5, #8]
 80029b4:	4303      	orrs	r3, r0
 80029b6:	64cb      	str	r3, [r1, #76]	; 0x4c
 80029b8:	0753      	lsls	r3, r2, #29
 80029ba:	d506      	bpl.n	80029ca <HAL_RCCEx_PeriphCLKConfig+0xaa>
 80029bc:	492b      	ldr	r1, [pc, #172]	; (8002a6c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80029be:	482f      	ldr	r0, [pc, #188]	; (8002a7c <HAL_RCCEx_PeriphCLKConfig+0x15c>)
 80029c0:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
 80029c2:	4003      	ands	r3, r0
 80029c4:	68e8      	ldr	r0, [r5, #12]
 80029c6:	4303      	orrs	r3, r0
 80029c8:	64cb      	str	r3, [r1, #76]	; 0x4c
 80029ca:	0713      	lsls	r3, r2, #28
 80029cc:	d506      	bpl.n	80029dc <HAL_RCCEx_PeriphCLKConfig+0xbc>
 80029ce:	4927      	ldr	r1, [pc, #156]	; (8002a6c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80029d0:	482b      	ldr	r0, [pc, #172]	; (8002a80 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80029d2:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
 80029d4:	4003      	ands	r3, r0
 80029d6:	6928      	ldr	r0, [r5, #16]
 80029d8:	4303      	orrs	r3, r0
 80029da:	64cb      	str	r3, [r1, #76]	; 0x4c
 80029dc:	2000      	movs	r0, #0
 80029de:	0613      	lsls	r3, r2, #24
 80029e0:	d517      	bpl.n	8002a12 <HAL_RCCEx_PeriphCLKConfig+0xf2>
 80029e2:	4a22      	ldr	r2, [pc, #136]	; (8002a6c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 80029e4:	4927      	ldr	r1, [pc, #156]	; (8002a84 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80029e6:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80029e8:	400b      	ands	r3, r1
 80029ea:	6969      	ldr	r1, [r5, #20]
 80029ec:	430b      	orrs	r3, r1
 80029ee:	64d3      	str	r3, [r2, #76]	; 0x4c
 80029f0:	e00f      	b.n	8002a12 <HAL_RCCEx_PeriphCLKConfig+0xf2>
 80029f2:	6833      	ldr	r3, [r6, #0]
 80029f4:	433b      	orrs	r3, r7
 80029f6:	6033      	str	r3, [r6, #0]
 80029f8:	f7fe ff76 	bl	80018e8 <HAL_GetTick>
 80029fc:	9001      	str	r0, [sp, #4]
 80029fe:	6833      	ldr	r3, [r6, #0]
 8002a00:	423b      	tst	r3, r7
 8002a02:	d1a5      	bne.n	8002950 <HAL_RCCEx_PeriphCLKConfig+0x30>
 8002a04:	f7fe ff70 	bl	80018e8 <HAL_GetTick>
 8002a08:	9b01      	ldr	r3, [sp, #4]
 8002a0a:	1ac0      	subs	r0, r0, r3
 8002a0c:	2864      	cmp	r0, #100	; 0x64
 8002a0e:	d9f6      	bls.n	80029fe <HAL_RCCEx_PeriphCLKConfig+0xde>
 8002a10:	2003      	movs	r0, #3
 8002a12:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8002a14:	429e      	cmp	r6, r3
 8002a16:	d1a7      	bne.n	8002968 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8002a18:	6822      	ldr	r2, [r4, #0]
 8002a1a:	2001      	movs	r0, #1
 8002a1c:	0392      	lsls	r2, r2, #14
 8002a1e:	d5a3      	bpl.n	8002968 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8002a20:	e7f7      	b.n	8002a12 <HAL_RCCEx_PeriphCLKConfig+0xf2>
 8002a22:	42b1      	cmp	r1, r6
 8002a24:	d0a5      	beq.n	8002972 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8002a26:	682b      	ldr	r3, [r5, #0]
 8002a28:	069b      	lsls	r3, r3, #26
 8002a2a:	d5a2      	bpl.n	8002972 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8002a2c:	2280      	movs	r2, #128	; 0x80
 8002a2e:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8002a30:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8002a32:	0312      	lsls	r2, r2, #12
 8002a34:	4302      	orrs	r2, r0
 8002a36:	6522      	str	r2, [r4, #80]	; 0x50
 8002a38:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002a3a:	4b13      	ldr	r3, [pc, #76]	; (8002a88 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8002a3c:	4813      	ldr	r0, [pc, #76]	; (8002a8c <HAL_RCCEx_PeriphCLKConfig+0x16c>)
 8002a3e:	400b      	ands	r3, r1
 8002a40:	4002      	ands	r2, r0
 8002a42:	6522      	str	r2, [r4, #80]	; 0x50
 8002a44:	6523      	str	r3, [r4, #80]	; 0x50
 8002a46:	05cb      	lsls	r3, r1, #23
 8002a48:	d400      	bmi.n	8002a4c <HAL_RCCEx_PeriphCLKConfig+0x12c>
 8002a4a:	e792      	b.n	8002972 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8002a4c:	f7fe ff4c 	bl	80018e8 <HAL_GetTick>
 8002a50:	2780      	movs	r7, #128	; 0x80
 8002a52:	0006      	movs	r6, r0
 8002a54:	00bf      	lsls	r7, r7, #2
 8002a56:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002a58:	423b      	tst	r3, r7
 8002a5a:	d000      	beq.n	8002a5e <HAL_RCCEx_PeriphCLKConfig+0x13e>
 8002a5c:	e789      	b.n	8002972 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8002a5e:	f7fe ff43 	bl	80018e8 <HAL_GetTick>
 8002a62:	4b0b      	ldr	r3, [pc, #44]	; (8002a90 <HAL_RCCEx_PeriphCLKConfig+0x170>)
 8002a64:	1b80      	subs	r0, r0, r6
 8002a66:	4298      	cmp	r0, r3
 8002a68:	d9f5      	bls.n	8002a56 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8002a6a:	e7d1      	b.n	8002a10 <HAL_RCCEx_PeriphCLKConfig+0xf0>
 8002a6c:	40021000 	.word	0x40021000
 8002a70:	40007000 	.word	0x40007000
 8002a74:	ffcfffff 	.word	0xffcfffff
 8002a78:	efffffff 	.word	0xefffffff
 8002a7c:	fffff3ff 	.word	0xfffff3ff
 8002a80:	ffffcfff 	.word	0xffffcfff
 8002a84:	fff3ffff 	.word	0xfff3ffff
 8002a88:	fffcffff 	.word	0xfffcffff
 8002a8c:	fff7ffff 	.word	0xfff7ffff
 8002a90:	00001388 	.word	0x00001388

08002a94 <LL_ADC_Init>:
 8002a94:	6882      	ldr	r2, [r0, #8]
 8002a96:	0003      	movs	r3, r0
 8002a98:	b530      	push	{r4, r5, lr}
 8002a9a:	2001      	movs	r0, #1
 8002a9c:	0014      	movs	r4, r2
 8002a9e:	4004      	ands	r4, r0
 8002aa0:	4202      	tst	r2, r0
 8002aa2:	d110      	bne.n	8002ac6 <LL_ADC_Init+0x32>
 8002aa4:	688d      	ldr	r5, [r1, #8]
 8002aa6:	684a      	ldr	r2, [r1, #4]
 8002aa8:	68d8      	ldr	r0, [r3, #12]
 8002aaa:	432a      	orrs	r2, r5
 8002aac:	68cd      	ldr	r5, [r1, #12]
 8002aae:	6809      	ldr	r1, [r1, #0]
 8002ab0:	432a      	orrs	r2, r5
 8002ab2:	4d05      	ldr	r5, [pc, #20]	; (8002ac8 <LL_ADC_Init+0x34>)
 8002ab4:	4028      	ands	r0, r5
 8002ab6:	4302      	orrs	r2, r0
 8002ab8:	0020      	movs	r0, r4
 8002aba:	60da      	str	r2, [r3, #12]
 8002abc:	691a      	ldr	r2, [r3, #16]
 8002abe:	0092      	lsls	r2, r2, #2
 8002ac0:	0892      	lsrs	r2, r2, #2
 8002ac2:	430a      	orrs	r2, r1
 8002ac4:	611a      	str	r2, [r3, #16]
 8002ac6:	bd30      	pop	{r4, r5, pc}
 8002ac8:	ffff3fc7 	.word	0xffff3fc7

08002acc <LL_ADC_REG_Init>:
 8002acc:	6883      	ldr	r3, [r0, #8]
 8002ace:	0002      	movs	r2, r0
 8002ad0:	b530      	push	{r4, r5, lr}
 8002ad2:	2001      	movs	r0, #1
 8002ad4:	001c      	movs	r4, r3
 8002ad6:	4004      	ands	r4, r0
 8002ad8:	4203      	tst	r3, r0
 8002ada:	d10e      	bne.n	8002afa <LL_ADC_REG_Init+0x2e>
 8002adc:	684d      	ldr	r5, [r1, #4]
 8002ade:	680b      	ldr	r3, [r1, #0]
 8002ae0:	68d0      	ldr	r0, [r2, #12]
 8002ae2:	432b      	orrs	r3, r5
 8002ae4:	688d      	ldr	r5, [r1, #8]
 8002ae6:	432b      	orrs	r3, r5
 8002ae8:	68cd      	ldr	r5, [r1, #12]
 8002aea:	6909      	ldr	r1, [r1, #16]
 8002aec:	432b      	orrs	r3, r5
 8002aee:	430b      	orrs	r3, r1
 8002af0:	4902      	ldr	r1, [pc, #8]	; (8002afc <LL_ADC_REG_Init+0x30>)
 8002af2:	4001      	ands	r1, r0
 8002af4:	0020      	movs	r0, r4
 8002af6:	430b      	orrs	r3, r1
 8002af8:	60d3      	str	r3, [r2, #12]
 8002afa:	bd30      	pop	{r4, r5, pc}
 8002afc:	fffec23c 	.word	0xfffec23c

08002b00 <LL_GPIO_Init>:
 8002b00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002b02:	2300      	movs	r3, #0
 8002b04:	0002      	movs	r2, r0
 8002b06:	680c      	ldr	r4, [r1, #0]
 8002b08:	9300      	str	r3, [sp, #0]
 8002b0a:	0020      	movs	r0, r4
 8002b0c:	9b00      	ldr	r3, [sp, #0]
 8002b0e:	40d8      	lsrs	r0, r3
 8002b10:	d100      	bne.n	8002b14 <LL_GPIO_Init+0x14>
 8002b12:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8002b14:	2001      	movs	r0, #1
 8002b16:	9b00      	ldr	r3, [sp, #0]
 8002b18:	4098      	lsls	r0, r3
 8002b1a:	0023      	movs	r3, r4
 8002b1c:	4003      	ands	r3, r0
 8002b1e:	4204      	tst	r4, r0
 8002b20:	d031      	beq.n	8002b86 <LL_GPIO_Init+0x86>
 8002b22:	6848      	ldr	r0, [r1, #4]
 8002b24:	2503      	movs	r5, #3
 8002b26:	9001      	str	r0, [sp, #4]
 8002b28:	0018      	movs	r0, r3
 8002b2a:	4358      	muls	r0, r3
 8002b2c:	4345      	muls	r5, r0
 8002b2e:	9e01      	ldr	r6, [sp, #4]
 8002b30:	43ed      	mvns	r5, r5
 8002b32:	1e77      	subs	r7, r6, #1
 8002b34:	2f01      	cmp	r7, #1
 8002b36:	d80b      	bhi.n	8002b50 <LL_GPIO_Init+0x50>
 8002b38:	688f      	ldr	r7, [r1, #8]
 8002b3a:	6896      	ldr	r6, [r2, #8]
 8002b3c:	4347      	muls	r7, r0
 8002b3e:	402e      	ands	r6, r5
 8002b40:	4337      	orrs	r7, r6
 8002b42:	6097      	str	r7, [r2, #8]
 8002b44:	6857      	ldr	r7, [r2, #4]
 8002b46:	68ce      	ldr	r6, [r1, #12]
 8002b48:	43a7      	bics	r7, r4
 8002b4a:	4374      	muls	r4, r6
 8002b4c:	433c      	orrs	r4, r7
 8002b4e:	6054      	str	r4, [r2, #4]
 8002b50:	690c      	ldr	r4, [r1, #16]
 8002b52:	68d7      	ldr	r7, [r2, #12]
 8002b54:	4344      	muls	r4, r0
 8002b56:	402f      	ands	r7, r5
 8002b58:	433c      	orrs	r4, r7
 8002b5a:	60d4      	str	r4, [r2, #12]
 8002b5c:	9c01      	ldr	r4, [sp, #4]
 8002b5e:	2c02      	cmp	r4, #2
 8002b60:	d10b      	bne.n	8002b7a <LL_GPIO_Init+0x7a>
 8002b62:	694f      	ldr	r7, [r1, #20]
 8002b64:	2bff      	cmp	r3, #255	; 0xff
 8002b66:	d811      	bhi.n	8002b8c <LL_GPIO_Init+0x8c>
 8002b68:	0004      	movs	r4, r0
 8002b6a:	260f      	movs	r6, #15
 8002b6c:	4344      	muls	r4, r0
 8002b6e:	4366      	muls	r6, r4
 8002b70:	437c      	muls	r4, r7
 8002b72:	6a13      	ldr	r3, [r2, #32]
 8002b74:	43b3      	bics	r3, r6
 8002b76:	4323      	orrs	r3, r4
 8002b78:	6213      	str	r3, [r2, #32]
 8002b7a:	9c01      	ldr	r4, [sp, #4]
 8002b7c:	6813      	ldr	r3, [r2, #0]
 8002b7e:	4360      	muls	r0, r4
 8002b80:	402b      	ands	r3, r5
 8002b82:	4303      	orrs	r3, r0
 8002b84:	6013      	str	r3, [r2, #0]
 8002b86:	9b00      	ldr	r3, [sp, #0]
 8002b88:	3301      	adds	r3, #1
 8002b8a:	e7bc      	b.n	8002b06 <LL_GPIO_Init+0x6>
 8002b8c:	260f      	movs	r6, #15
 8002b8e:	0a1b      	lsrs	r3, r3, #8
 8002b90:	435b      	muls	r3, r3
 8002b92:	435b      	muls	r3, r3
 8002b94:	435e      	muls	r6, r3
 8002b96:	437b      	muls	r3, r7
 8002b98:	6a54      	ldr	r4, [r2, #36]	; 0x24
 8002b9a:	43b4      	bics	r4, r6
 8002b9c:	431c      	orrs	r4, r3
 8002b9e:	6254      	str	r4, [r2, #36]	; 0x24
 8002ba0:	e7eb      	b.n	8002b7a <LL_GPIO_Init+0x7a>
	...

08002ba4 <LL_RCC_HSI_IsReady>:
 8002ba4:	4b02      	ldr	r3, [pc, #8]	; (8002bb0 <LL_RCC_HSI_IsReady+0xc>)
 8002ba6:	6818      	ldr	r0, [r3, #0]
 8002ba8:	0740      	lsls	r0, r0, #29
 8002baa:	0fc0      	lsrs	r0, r0, #31
 8002bac:	4770      	bx	lr
 8002bae:	46c0      	nop			; (mov r8, r8)
 8002bb0:	40021000 	.word	0x40021000

08002bb4 <LL_RCC_IsActiveFlag_HSIDIV>:
 8002bb4:	4b02      	ldr	r3, [pc, #8]	; (8002bc0 <LL_RCC_IsActiveFlag_HSIDIV+0xc>)
 8002bb6:	6818      	ldr	r0, [r3, #0]
 8002bb8:	06c0      	lsls	r0, r0, #27
 8002bba:	0fc0      	lsrs	r0, r0, #31
 8002bbc:	4770      	bx	lr
 8002bbe:	46c0      	nop			; (mov r8, r8)
 8002bc0:	40021000 	.word	0x40021000

08002bc4 <RCC_GetHCLKClockFreq>:
 8002bc4:	4b03      	ldr	r3, [pc, #12]	; (8002bd4 <RCC_GetHCLKClockFreq+0x10>)
 8002bc6:	4a04      	ldr	r2, [pc, #16]	; (8002bd8 <RCC_GetHCLKClockFreq+0x14>)
 8002bc8:	68db      	ldr	r3, [r3, #12]
 8002bca:	061b      	lsls	r3, r3, #24
 8002bcc:	0f1b      	lsrs	r3, r3, #28
 8002bce:	5cd3      	ldrb	r3, [r2, r3]
 8002bd0:	40d8      	lsrs	r0, r3
 8002bd2:	4770      	bx	lr
 8002bd4:	40021000 	.word	0x40021000
 8002bd8:	080037aa 	.word	0x080037aa

08002bdc <RCC_GetPCLK1ClockFreq>:
 8002bdc:	4b03      	ldr	r3, [pc, #12]	; (8002bec <RCC_GetPCLK1ClockFreq+0x10>)
 8002bde:	4a04      	ldr	r2, [pc, #16]	; (8002bf0 <RCC_GetPCLK1ClockFreq+0x14>)
 8002be0:	68db      	ldr	r3, [r3, #12]
 8002be2:	055b      	lsls	r3, r3, #21
 8002be4:	0f5b      	lsrs	r3, r3, #29
 8002be6:	5cd3      	ldrb	r3, [r2, r3]
 8002be8:	40d8      	lsrs	r0, r3
 8002bea:	4770      	bx	lr
 8002bec:	40021000 	.word	0x40021000
 8002bf0:	080037ba 	.word	0x080037ba

08002bf4 <RCC_GetSystemClockFreq>:
 8002bf4:	220c      	movs	r2, #12
 8002bf6:	b510      	push	{r4, lr}
 8002bf8:	4c1d      	ldr	r4, [pc, #116]	; (8002c70 <RCC_GetSystemClockFreq+0x7c>)
 8002bfa:	68e3      	ldr	r3, [r4, #12]
 8002bfc:	4013      	ands	r3, r2
 8002bfe:	2b08      	cmp	r3, #8
 8002c00:	d033      	beq.n	8002c6a <RCC_GetSystemClockFreq+0x76>
 8002c02:	d80b      	bhi.n	8002c1c <RCC_GetSystemClockFreq+0x28>
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	d001      	beq.n	8002c0c <RCC_GetSystemClockFreq+0x18>
 8002c08:	2b04      	cmp	r3, #4
 8002c0a:	d022      	beq.n	8002c52 <RCC_GetSystemClockFreq+0x5e>
 8002c0c:	2080      	movs	r0, #128	; 0x80
 8002c0e:	6863      	ldr	r3, [r4, #4]
 8002c10:	0200      	lsls	r0, r0, #8
 8002c12:	041b      	lsls	r3, r3, #16
 8002c14:	0f5b      	lsrs	r3, r3, #29
 8002c16:	3301      	adds	r3, #1
 8002c18:	4098      	lsls	r0, r3
 8002c1a:	e023      	b.n	8002c64 <RCC_GetSystemClockFreq+0x70>
 8002c1c:	2b0c      	cmp	r3, #12
 8002c1e:	d1f5      	bne.n	8002c0c <RCC_GetSystemClockFreq+0x18>
 8002c20:	68e3      	ldr	r3, [r4, #12]
 8002c22:	03db      	lsls	r3, r3, #15
 8002c24:	d41f      	bmi.n	8002c66 <RCC_GetSystemClockFreq+0x72>
 8002c26:	f7ff ffc5 	bl	8002bb4 <LL_RCC_IsActiveFlag_HSIDIV>
 8002c2a:	1e43      	subs	r3, r0, #1
 8002c2c:	4198      	sbcs	r0, r3
 8002c2e:	4b11      	ldr	r3, [pc, #68]	; (8002c74 <RCC_GetSystemClockFreq+0x80>)
 8002c30:	4240      	negs	r0, r0
 8002c32:	4018      	ands	r0, r3
 8002c34:	4b10      	ldr	r3, [pc, #64]	; (8002c78 <RCC_GetSystemClockFreq+0x84>)
 8002c36:	18c0      	adds	r0, r0, r3
 8002c38:	68e3      	ldr	r3, [r4, #12]
 8002c3a:	4a10      	ldr	r2, [pc, #64]	; (8002c7c <RCC_GetSystemClockFreq+0x88>)
 8002c3c:	68e1      	ldr	r1, [r4, #12]
 8002c3e:	029b      	lsls	r3, r3, #10
 8002c40:	0f1b      	lsrs	r3, r3, #28
 8002c42:	5cd3      	ldrb	r3, [r2, r3]
 8002c44:	0209      	lsls	r1, r1, #8
 8002c46:	0f89      	lsrs	r1, r1, #30
 8002c48:	4358      	muls	r0, r3
 8002c4a:	3101      	adds	r1, #1
 8002c4c:	f7fd fa70 	bl	8000130 <__udivsi3>
 8002c50:	e008      	b.n	8002c64 <RCC_GetSystemClockFreq+0x70>
 8002c52:	f7ff ffaf 	bl	8002bb4 <LL_RCC_IsActiveFlag_HSIDIV>
 8002c56:	1e43      	subs	r3, r0, #1
 8002c58:	4198      	sbcs	r0, r3
 8002c5a:	4b06      	ldr	r3, [pc, #24]	; (8002c74 <RCC_GetSystemClockFreq+0x80>)
 8002c5c:	4240      	negs	r0, r0
 8002c5e:	4018      	ands	r0, r3
 8002c60:	4b05      	ldr	r3, [pc, #20]	; (8002c78 <RCC_GetSystemClockFreq+0x84>)
 8002c62:	18c0      	adds	r0, r0, r3
 8002c64:	bd10      	pop	{r4, pc}
 8002c66:	4806      	ldr	r0, [pc, #24]	; (8002c80 <RCC_GetSystemClockFreq+0x8c>)
 8002c68:	e7e6      	b.n	8002c38 <RCC_GetSystemClockFreq+0x44>
 8002c6a:	4805      	ldr	r0, [pc, #20]	; (8002c80 <RCC_GetSystemClockFreq+0x8c>)
 8002c6c:	e7fa      	b.n	8002c64 <RCC_GetSystemClockFreq+0x70>
 8002c6e:	46c0      	nop			; (mov r8, r8)
 8002c70:	40021000 	.word	0x40021000
 8002c74:	ff48e500 	.word	0xff48e500
 8002c78:	00f42400 	.word	0x00f42400
 8002c7c:	080037c2 	.word	0x080037c2
 8002c80:	007a1200 	.word	0x007a1200

08002c84 <LL_RCC_GetUSARTClockFreq>:
 8002c84:	b510      	push	{r4, lr}
 8002c86:	280c      	cmp	r0, #12
 8002c88:	d122      	bne.n	8002cd0 <LL_RCC_GetUSARTClockFreq+0x4c>
 8002c8a:	4a17      	ldr	r2, [pc, #92]	; (8002ce8 <LL_RCC_GetUSARTClockFreq+0x64>)
 8002c8c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8002c8e:	4003      	ands	r3, r0
 8002c90:	20c0      	movs	r0, #192	; 0xc0
 8002c92:	0300      	lsls	r0, r0, #12
 8002c94:	4318      	orrs	r0, r3
 8002c96:	4b15      	ldr	r3, [pc, #84]	; (8002cec <LL_RCC_GetUSARTClockFreq+0x68>)
 8002c98:	4298      	cmp	r0, r3
 8002c9a:	d008      	beq.n	8002cae <LL_RCC_GetUSARTClockFreq+0x2a>
 8002c9c:	4b14      	ldr	r3, [pc, #80]	; (8002cf0 <LL_RCC_GetUSARTClockFreq+0x6c>)
 8002c9e:	4298      	cmp	r0, r3
 8002ca0:	d013      	beq.n	8002cca <LL_RCC_GetUSARTClockFreq+0x46>
 8002ca2:	4b14      	ldr	r3, [pc, #80]	; (8002cf4 <LL_RCC_GetUSARTClockFreq+0x70>)
 8002ca4:	4298      	cmp	r0, r3
 8002ca6:	d115      	bne.n	8002cd4 <LL_RCC_GetUSARTClockFreq+0x50>
 8002ca8:	f7ff ffa4 	bl	8002bf4 <RCC_GetSystemClockFreq>
 8002cac:	bd10      	pop	{r4, pc}
 8002cae:	f7ff ff79 	bl	8002ba4 <LL_RCC_HSI_IsReady>
 8002cb2:	2800      	cmp	r0, #0
 8002cb4:	d00c      	beq.n	8002cd0 <LL_RCC_GetUSARTClockFreq+0x4c>
 8002cb6:	f7ff ff7d 	bl	8002bb4 <LL_RCC_IsActiveFlag_HSIDIV>
 8002cba:	1e43      	subs	r3, r0, #1
 8002cbc:	4198      	sbcs	r0, r3
 8002cbe:	4b0e      	ldr	r3, [pc, #56]	; (8002cf8 <LL_RCC_GetUSARTClockFreq+0x74>)
 8002cc0:	4240      	negs	r0, r0
 8002cc2:	4018      	ands	r0, r3
 8002cc4:	4b0d      	ldr	r3, [pc, #52]	; (8002cfc <LL_RCC_GetUSARTClockFreq+0x78>)
 8002cc6:	18c0      	adds	r0, r0, r3
 8002cc8:	e7f0      	b.n	8002cac <LL_RCC_GetUSARTClockFreq+0x28>
 8002cca:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8002ccc:	059b      	lsls	r3, r3, #22
 8002cce:	d408      	bmi.n	8002ce2 <LL_RCC_GetUSARTClockFreq+0x5e>
 8002cd0:	2000      	movs	r0, #0
 8002cd2:	e7eb      	b.n	8002cac <LL_RCC_GetUSARTClockFreq+0x28>
 8002cd4:	f7ff ff8e 	bl	8002bf4 <RCC_GetSystemClockFreq>
 8002cd8:	f7ff ff74 	bl	8002bc4 <RCC_GetHCLKClockFreq>
 8002cdc:	f7ff ff7e 	bl	8002bdc <RCC_GetPCLK1ClockFreq>
 8002ce0:	e7e4      	b.n	8002cac <LL_RCC_GetUSARTClockFreq+0x28>
 8002ce2:	2080      	movs	r0, #128	; 0x80
 8002ce4:	0200      	lsls	r0, r0, #8
 8002ce6:	e7e1      	b.n	8002cac <LL_RCC_GetUSARTClockFreq+0x28>
 8002ce8:	40021000 	.word	0x40021000
 8002cec:	000c0008 	.word	0x000c0008
 8002cf0:	000c000c 	.word	0x000c000c
 8002cf4:	000c0004 	.word	0x000c0004
 8002cf8:	ff48e500 	.word	0xff48e500
 8002cfc:	00f42400 	.word	0x00f42400

08002d00 <LL_TIM_Init>:
 8002d00:	2280      	movs	r2, #128	; 0x80
 8002d02:	b510      	push	{r4, lr}
 8002d04:	6803      	ldr	r3, [r0, #0]
 8002d06:	05d2      	lsls	r2, r2, #23
 8002d08:	4290      	cmp	r0, r2
 8002d0a:	d002      	beq.n	8002d12 <LL_TIM_Init+0x12>
 8002d0c:	4c0d      	ldr	r4, [pc, #52]	; (8002d44 <LL_TIM_Init+0x44>)
 8002d0e:	42a0      	cmp	r0, r4
 8002d10:	d10c      	bne.n	8002d2c <LL_TIM_Init+0x2c>
 8002d12:	2470      	movs	r4, #112	; 0x70
 8002d14:	43a3      	bics	r3, r4
 8002d16:	684c      	ldr	r4, [r1, #4]
 8002d18:	4323      	orrs	r3, r4
 8002d1a:	4290      	cmp	r0, r2
 8002d1c:	d002      	beq.n	8002d24 <LL_TIM_Init+0x24>
 8002d1e:	4a09      	ldr	r2, [pc, #36]	; (8002d44 <LL_TIM_Init+0x44>)
 8002d20:	4290      	cmp	r0, r2
 8002d22:	d103      	bne.n	8002d2c <LL_TIM_Init+0x2c>
 8002d24:	4a08      	ldr	r2, [pc, #32]	; (8002d48 <LL_TIM_Init+0x48>)
 8002d26:	4013      	ands	r3, r2
 8002d28:	68ca      	ldr	r2, [r1, #12]
 8002d2a:	4313      	orrs	r3, r2
 8002d2c:	6003      	str	r3, [r0, #0]
 8002d2e:	688b      	ldr	r3, [r1, #8]
 8002d30:	62c3      	str	r3, [r0, #44]	; 0x2c
 8002d32:	880b      	ldrh	r3, [r1, #0]
 8002d34:	6283      	str	r3, [r0, #40]	; 0x28
 8002d36:	2301      	movs	r3, #1
 8002d38:	6942      	ldr	r2, [r0, #20]
 8002d3a:	4313      	orrs	r3, r2
 8002d3c:	6143      	str	r3, [r0, #20]
 8002d3e:	2000      	movs	r0, #0
 8002d40:	bd10      	pop	{r4, pc}
 8002d42:	46c0      	nop			; (mov r8, r8)
 8002d44:	40010800 	.word	0x40010800
 8002d48:	fffffcff 	.word	0xfffffcff

08002d4c <LL_USART_Init>:
 8002d4c:	6802      	ldr	r2, [r0, #0]
 8002d4e:	b570      	push	{r4, r5, r6, lr}
 8002d50:	2301      	movs	r3, #1
 8002d52:	0015      	movs	r5, r2
 8002d54:	0004      	movs	r4, r0
 8002d56:	000e      	movs	r6, r1
 8002d58:	401d      	ands	r5, r3
 8002d5a:	421a      	tst	r2, r3
 8002d5c:	d001      	beq.n	8002d62 <LL_USART_Init+0x16>
 8002d5e:	2001      	movs	r0, #1
 8002d60:	bd70      	pop	{r4, r5, r6, pc}
 8002d62:	684b      	ldr	r3, [r1, #4]
 8002d64:	68c9      	ldr	r1, [r1, #12]
 8002d66:	6802      	ldr	r2, [r0, #0]
 8002d68:	430b      	orrs	r3, r1
 8002d6a:	6931      	ldr	r1, [r6, #16]
 8002d6c:	430b      	orrs	r3, r1
 8002d6e:	69b1      	ldr	r1, [r6, #24]
 8002d70:	430b      	orrs	r3, r1
 8002d72:	4919      	ldr	r1, [pc, #100]	; (8002dd8 <LL_USART_Init+0x8c>)
 8002d74:	400a      	ands	r2, r1
 8002d76:	4313      	orrs	r3, r2
 8002d78:	6003      	str	r3, [r0, #0]
 8002d7a:	6843      	ldr	r3, [r0, #4]
 8002d7c:	4a17      	ldr	r2, [pc, #92]	; (8002ddc <LL_USART_Init+0x90>)
 8002d7e:	4013      	ands	r3, r2
 8002d80:	68b2      	ldr	r2, [r6, #8]
 8002d82:	4313      	orrs	r3, r2
 8002d84:	6043      	str	r3, [r0, #4]
 8002d86:	6883      	ldr	r3, [r0, #8]
 8002d88:	4a15      	ldr	r2, [pc, #84]	; (8002de0 <LL_USART_Init+0x94>)
 8002d8a:	4013      	ands	r3, r2
 8002d8c:	6972      	ldr	r2, [r6, #20]
 8002d8e:	4313      	orrs	r3, r2
 8002d90:	6083      	str	r3, [r0, #8]
 8002d92:	4b14      	ldr	r3, [pc, #80]	; (8002de4 <LL_USART_Init+0x98>)
 8002d94:	4298      	cmp	r0, r3
 8002d96:	d1e2      	bne.n	8002d5e <LL_USART_Init+0x12>
 8002d98:	200c      	movs	r0, #12
 8002d9a:	f7ff ff73 	bl	8002c84 <LL_RCC_GetUSARTClockFreq>
 8002d9e:	2800      	cmp	r0, #0
 8002da0:	d0dd      	beq.n	8002d5e <LL_USART_Init+0x12>
 8002da2:	6831      	ldr	r1, [r6, #0]
 8002da4:	2900      	cmp	r1, #0
 8002da6:	d0da      	beq.n	8002d5e <LL_USART_Init+0x12>
 8002da8:	2280      	movs	r2, #128	; 0x80
 8002daa:	69b6      	ldr	r6, [r6, #24]
 8002dac:	084b      	lsrs	r3, r1, #1
 8002dae:	0212      	lsls	r2, r2, #8
 8002db0:	4296      	cmp	r6, r2
 8002db2:	d10b      	bne.n	8002dcc <LL_USART_Init+0x80>
 8002db4:	0040      	lsls	r0, r0, #1
 8002db6:	18c0      	adds	r0, r0, r3
 8002db8:	f7fd f9ba 	bl	8000130 <__udivsi3>
 8002dbc:	4b0a      	ldr	r3, [pc, #40]	; (8002de8 <LL_USART_Init+0x9c>)
 8002dbe:	4003      	ands	r3, r0
 8002dc0:	0700      	lsls	r0, r0, #28
 8002dc2:	0f40      	lsrs	r0, r0, #29
 8002dc4:	4318      	orrs	r0, r3
 8002dc6:	60e0      	str	r0, [r4, #12]
 8002dc8:	0028      	movs	r0, r5
 8002dca:	e7c9      	b.n	8002d60 <LL_USART_Init+0x14>
 8002dcc:	18c0      	adds	r0, r0, r3
 8002dce:	f7fd f9af 	bl	8000130 <__udivsi3>
 8002dd2:	b280      	uxth	r0, r0
 8002dd4:	e7f7      	b.n	8002dc6 <LL_USART_Init+0x7a>
 8002dd6:	46c0      	nop			; (mov r8, r8)
 8002dd8:	efff69f3 	.word	0xefff69f3
 8002ddc:	ffffcfff 	.word	0xffffcfff
 8002de0:	fffffcff 	.word	0xfffffcff
 8002de4:	40004400 	.word	0x40004400
 8002de8:	0000fff0 	.word	0x0000fff0

08002dec <LL_mDelay>:
 8002dec:	4a09      	ldr	r2, [pc, #36]	; (8002e14 <LL_mDelay+0x28>)
 8002dee:	b082      	sub	sp, #8
 8002df0:	6813      	ldr	r3, [r2, #0]
 8002df2:	9301      	str	r3, [sp, #4]
 8002df4:	9b01      	ldr	r3, [sp, #4]
 8002df6:	1c43      	adds	r3, r0, #1
 8002df8:	1e59      	subs	r1, r3, #1
 8002dfa:	418b      	sbcs	r3, r1
 8002dfc:	18c0      	adds	r0, r0, r3
 8002dfe:	2380      	movs	r3, #128	; 0x80
 8002e00:	025b      	lsls	r3, r3, #9
 8002e02:	2800      	cmp	r0, #0
 8002e04:	d101      	bne.n	8002e0a <LL_mDelay+0x1e>
 8002e06:	b002      	add	sp, #8
 8002e08:	4770      	bx	lr
 8002e0a:	6811      	ldr	r1, [r2, #0]
 8002e0c:	4219      	tst	r1, r3
 8002e0e:	d0f8      	beq.n	8002e02 <LL_mDelay+0x16>
 8002e10:	3801      	subs	r0, #1
 8002e12:	e7f6      	b.n	8002e02 <LL_mDelay+0x16>
 8002e14:	e000e010 	.word	0xe000e010

08002e18 <__errno>:
 8002e18:	4b01      	ldr	r3, [pc, #4]	; (8002e20 <__errno+0x8>)
 8002e1a:	6818      	ldr	r0, [r3, #0]
 8002e1c:	4770      	bx	lr
 8002e1e:	46c0      	nop			; (mov r8, r8)
 8002e20:	20000010 	.word	0x20000010

08002e24 <__libc_init_array>:
 8002e24:	b570      	push	{r4, r5, r6, lr}
 8002e26:	2600      	movs	r6, #0
 8002e28:	4d0c      	ldr	r5, [pc, #48]	; (8002e5c <__libc_init_array+0x38>)
 8002e2a:	4c0d      	ldr	r4, [pc, #52]	; (8002e60 <__libc_init_array+0x3c>)
 8002e2c:	1b64      	subs	r4, r4, r5
 8002e2e:	10a4      	asrs	r4, r4, #2
 8002e30:	42a6      	cmp	r6, r4
 8002e32:	d109      	bne.n	8002e48 <__libc_init_array+0x24>
 8002e34:	2600      	movs	r6, #0
 8002e36:	f000 fc8b 	bl	8003750 <_init>
 8002e3a:	4d0a      	ldr	r5, [pc, #40]	; (8002e64 <__libc_init_array+0x40>)
 8002e3c:	4c0a      	ldr	r4, [pc, #40]	; (8002e68 <__libc_init_array+0x44>)
 8002e3e:	1b64      	subs	r4, r4, r5
 8002e40:	10a4      	asrs	r4, r4, #2
 8002e42:	42a6      	cmp	r6, r4
 8002e44:	d105      	bne.n	8002e52 <__libc_init_array+0x2e>
 8002e46:	bd70      	pop	{r4, r5, r6, pc}
 8002e48:	00b3      	lsls	r3, r6, #2
 8002e4a:	58eb      	ldr	r3, [r5, r3]
 8002e4c:	4798      	blx	r3
 8002e4e:	3601      	adds	r6, #1
 8002e50:	e7ee      	b.n	8002e30 <__libc_init_array+0xc>
 8002e52:	00b3      	lsls	r3, r6, #2
 8002e54:	58eb      	ldr	r3, [r5, r3]
 8002e56:	4798      	blx	r3
 8002e58:	3601      	adds	r6, #1
 8002e5a:	e7f2      	b.n	8002e42 <__libc_init_array+0x1e>
 8002e5c:	08003808 	.word	0x08003808
 8002e60:	08003808 	.word	0x08003808
 8002e64:	08003808 	.word	0x08003808
 8002e68:	0800380c 	.word	0x0800380c

08002e6c <memset>:
 8002e6c:	0003      	movs	r3, r0
 8002e6e:	1882      	adds	r2, r0, r2
 8002e70:	4293      	cmp	r3, r2
 8002e72:	d100      	bne.n	8002e76 <memset+0xa>
 8002e74:	4770      	bx	lr
 8002e76:	7019      	strb	r1, [r3, #0]
 8002e78:	3301      	adds	r3, #1
 8002e7a:	e7f9      	b.n	8002e70 <memset+0x4>

08002e7c <siprintf>:
 8002e7c:	b40e      	push	{r1, r2, r3}
 8002e7e:	b500      	push	{lr}
 8002e80:	490b      	ldr	r1, [pc, #44]	; (8002eb0 <siprintf+0x34>)
 8002e82:	b09c      	sub	sp, #112	; 0x70
 8002e84:	ab1d      	add	r3, sp, #116	; 0x74
 8002e86:	9002      	str	r0, [sp, #8]
 8002e88:	9006      	str	r0, [sp, #24]
 8002e8a:	9107      	str	r1, [sp, #28]
 8002e8c:	9104      	str	r1, [sp, #16]
 8002e8e:	4809      	ldr	r0, [pc, #36]	; (8002eb4 <siprintf+0x38>)
 8002e90:	4909      	ldr	r1, [pc, #36]	; (8002eb8 <siprintf+0x3c>)
 8002e92:	cb04      	ldmia	r3!, {r2}
 8002e94:	9105      	str	r1, [sp, #20]
 8002e96:	6800      	ldr	r0, [r0, #0]
 8002e98:	a902      	add	r1, sp, #8
 8002e9a:	9301      	str	r3, [sp, #4]
 8002e9c:	f000 f870 	bl	8002f80 <_svfiprintf_r>
 8002ea0:	2300      	movs	r3, #0
 8002ea2:	9a02      	ldr	r2, [sp, #8]
 8002ea4:	7013      	strb	r3, [r2, #0]
 8002ea6:	b01c      	add	sp, #112	; 0x70
 8002ea8:	bc08      	pop	{r3}
 8002eaa:	b003      	add	sp, #12
 8002eac:	4718      	bx	r3
 8002eae:	46c0      	nop			; (mov r8, r8)
 8002eb0:	7fffffff 	.word	0x7fffffff
 8002eb4:	20000010 	.word	0x20000010
 8002eb8:	ffff0208 	.word	0xffff0208

08002ebc <__ssputs_r>:
 8002ebc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002ebe:	688e      	ldr	r6, [r1, #8]
 8002ec0:	b085      	sub	sp, #20
 8002ec2:	0007      	movs	r7, r0
 8002ec4:	000c      	movs	r4, r1
 8002ec6:	9203      	str	r2, [sp, #12]
 8002ec8:	9301      	str	r3, [sp, #4]
 8002eca:	429e      	cmp	r6, r3
 8002ecc:	d83c      	bhi.n	8002f48 <__ssputs_r+0x8c>
 8002ece:	2390      	movs	r3, #144	; 0x90
 8002ed0:	898a      	ldrh	r2, [r1, #12]
 8002ed2:	00db      	lsls	r3, r3, #3
 8002ed4:	421a      	tst	r2, r3
 8002ed6:	d034      	beq.n	8002f42 <__ssputs_r+0x86>
 8002ed8:	6909      	ldr	r1, [r1, #16]
 8002eda:	6823      	ldr	r3, [r4, #0]
 8002edc:	6960      	ldr	r0, [r4, #20]
 8002ede:	1a5b      	subs	r3, r3, r1
 8002ee0:	9302      	str	r3, [sp, #8]
 8002ee2:	2303      	movs	r3, #3
 8002ee4:	4343      	muls	r3, r0
 8002ee6:	0fdd      	lsrs	r5, r3, #31
 8002ee8:	18ed      	adds	r5, r5, r3
 8002eea:	9b01      	ldr	r3, [sp, #4]
 8002eec:	9802      	ldr	r0, [sp, #8]
 8002eee:	3301      	adds	r3, #1
 8002ef0:	181b      	adds	r3, r3, r0
 8002ef2:	106d      	asrs	r5, r5, #1
 8002ef4:	42ab      	cmp	r3, r5
 8002ef6:	d900      	bls.n	8002efa <__ssputs_r+0x3e>
 8002ef8:	001d      	movs	r5, r3
 8002efa:	0553      	lsls	r3, r2, #21
 8002efc:	d532      	bpl.n	8002f64 <__ssputs_r+0xa8>
 8002efe:	0029      	movs	r1, r5
 8002f00:	0038      	movs	r0, r7
 8002f02:	f000 fb53 	bl	80035ac <_malloc_r>
 8002f06:	1e06      	subs	r6, r0, #0
 8002f08:	d109      	bne.n	8002f1e <__ssputs_r+0x62>
 8002f0a:	230c      	movs	r3, #12
 8002f0c:	603b      	str	r3, [r7, #0]
 8002f0e:	2340      	movs	r3, #64	; 0x40
 8002f10:	2001      	movs	r0, #1
 8002f12:	89a2      	ldrh	r2, [r4, #12]
 8002f14:	4240      	negs	r0, r0
 8002f16:	4313      	orrs	r3, r2
 8002f18:	81a3      	strh	r3, [r4, #12]
 8002f1a:	b005      	add	sp, #20
 8002f1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f1e:	9a02      	ldr	r2, [sp, #8]
 8002f20:	6921      	ldr	r1, [r4, #16]
 8002f22:	f000 faba 	bl	800349a <memcpy>
 8002f26:	89a3      	ldrh	r3, [r4, #12]
 8002f28:	4a14      	ldr	r2, [pc, #80]	; (8002f7c <__ssputs_r+0xc0>)
 8002f2a:	401a      	ands	r2, r3
 8002f2c:	2380      	movs	r3, #128	; 0x80
 8002f2e:	4313      	orrs	r3, r2
 8002f30:	81a3      	strh	r3, [r4, #12]
 8002f32:	9b02      	ldr	r3, [sp, #8]
 8002f34:	6126      	str	r6, [r4, #16]
 8002f36:	18f6      	adds	r6, r6, r3
 8002f38:	6026      	str	r6, [r4, #0]
 8002f3a:	6165      	str	r5, [r4, #20]
 8002f3c:	9e01      	ldr	r6, [sp, #4]
 8002f3e:	1aed      	subs	r5, r5, r3
 8002f40:	60a5      	str	r5, [r4, #8]
 8002f42:	9b01      	ldr	r3, [sp, #4]
 8002f44:	429e      	cmp	r6, r3
 8002f46:	d900      	bls.n	8002f4a <__ssputs_r+0x8e>
 8002f48:	9e01      	ldr	r6, [sp, #4]
 8002f4a:	0032      	movs	r2, r6
 8002f4c:	9903      	ldr	r1, [sp, #12]
 8002f4e:	6820      	ldr	r0, [r4, #0]
 8002f50:	f000 faac 	bl	80034ac <memmove>
 8002f54:	68a3      	ldr	r3, [r4, #8]
 8002f56:	2000      	movs	r0, #0
 8002f58:	1b9b      	subs	r3, r3, r6
 8002f5a:	60a3      	str	r3, [r4, #8]
 8002f5c:	6823      	ldr	r3, [r4, #0]
 8002f5e:	199e      	adds	r6, r3, r6
 8002f60:	6026      	str	r6, [r4, #0]
 8002f62:	e7da      	b.n	8002f1a <__ssputs_r+0x5e>
 8002f64:	002a      	movs	r2, r5
 8002f66:	0038      	movs	r0, r7
 8002f68:	f000 fb96 	bl	8003698 <_realloc_r>
 8002f6c:	1e06      	subs	r6, r0, #0
 8002f6e:	d1e0      	bne.n	8002f32 <__ssputs_r+0x76>
 8002f70:	0038      	movs	r0, r7
 8002f72:	6921      	ldr	r1, [r4, #16]
 8002f74:	f000 faae 	bl	80034d4 <_free_r>
 8002f78:	e7c7      	b.n	8002f0a <__ssputs_r+0x4e>
 8002f7a:	46c0      	nop			; (mov r8, r8)
 8002f7c:	fffffb7f 	.word	0xfffffb7f

08002f80 <_svfiprintf_r>:
 8002f80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002f82:	b0a1      	sub	sp, #132	; 0x84
 8002f84:	9003      	str	r0, [sp, #12]
 8002f86:	001d      	movs	r5, r3
 8002f88:	898b      	ldrh	r3, [r1, #12]
 8002f8a:	000f      	movs	r7, r1
 8002f8c:	0016      	movs	r6, r2
 8002f8e:	061b      	lsls	r3, r3, #24
 8002f90:	d511      	bpl.n	8002fb6 <_svfiprintf_r+0x36>
 8002f92:	690b      	ldr	r3, [r1, #16]
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	d10e      	bne.n	8002fb6 <_svfiprintf_r+0x36>
 8002f98:	2140      	movs	r1, #64	; 0x40
 8002f9a:	f000 fb07 	bl	80035ac <_malloc_r>
 8002f9e:	6038      	str	r0, [r7, #0]
 8002fa0:	6138      	str	r0, [r7, #16]
 8002fa2:	2800      	cmp	r0, #0
 8002fa4:	d105      	bne.n	8002fb2 <_svfiprintf_r+0x32>
 8002fa6:	230c      	movs	r3, #12
 8002fa8:	9a03      	ldr	r2, [sp, #12]
 8002faa:	3801      	subs	r0, #1
 8002fac:	6013      	str	r3, [r2, #0]
 8002fae:	b021      	add	sp, #132	; 0x84
 8002fb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002fb2:	2340      	movs	r3, #64	; 0x40
 8002fb4:	617b      	str	r3, [r7, #20]
 8002fb6:	2300      	movs	r3, #0
 8002fb8:	ac08      	add	r4, sp, #32
 8002fba:	6163      	str	r3, [r4, #20]
 8002fbc:	3320      	adds	r3, #32
 8002fbe:	7663      	strb	r3, [r4, #25]
 8002fc0:	3310      	adds	r3, #16
 8002fc2:	76a3      	strb	r3, [r4, #26]
 8002fc4:	9507      	str	r5, [sp, #28]
 8002fc6:	0035      	movs	r5, r6
 8002fc8:	782b      	ldrb	r3, [r5, #0]
 8002fca:	2b00      	cmp	r3, #0
 8002fcc:	d001      	beq.n	8002fd2 <_svfiprintf_r+0x52>
 8002fce:	2b25      	cmp	r3, #37	; 0x25
 8002fd0:	d147      	bne.n	8003062 <_svfiprintf_r+0xe2>
 8002fd2:	1bab      	subs	r3, r5, r6
 8002fd4:	9305      	str	r3, [sp, #20]
 8002fd6:	42b5      	cmp	r5, r6
 8002fd8:	d00c      	beq.n	8002ff4 <_svfiprintf_r+0x74>
 8002fda:	0032      	movs	r2, r6
 8002fdc:	0039      	movs	r1, r7
 8002fde:	9803      	ldr	r0, [sp, #12]
 8002fe0:	f7ff ff6c 	bl	8002ebc <__ssputs_r>
 8002fe4:	1c43      	adds	r3, r0, #1
 8002fe6:	d100      	bne.n	8002fea <_svfiprintf_r+0x6a>
 8002fe8:	e0ae      	b.n	8003148 <_svfiprintf_r+0x1c8>
 8002fea:	6962      	ldr	r2, [r4, #20]
 8002fec:	9b05      	ldr	r3, [sp, #20]
 8002fee:	4694      	mov	ip, r2
 8002ff0:	4463      	add	r3, ip
 8002ff2:	6163      	str	r3, [r4, #20]
 8002ff4:	782b      	ldrb	r3, [r5, #0]
 8002ff6:	2b00      	cmp	r3, #0
 8002ff8:	d100      	bne.n	8002ffc <_svfiprintf_r+0x7c>
 8002ffa:	e0a5      	b.n	8003148 <_svfiprintf_r+0x1c8>
 8002ffc:	2201      	movs	r2, #1
 8002ffe:	2300      	movs	r3, #0
 8003000:	4252      	negs	r2, r2
 8003002:	6062      	str	r2, [r4, #4]
 8003004:	a904      	add	r1, sp, #16
 8003006:	3254      	adds	r2, #84	; 0x54
 8003008:	1852      	adds	r2, r2, r1
 800300a:	1c6e      	adds	r6, r5, #1
 800300c:	6023      	str	r3, [r4, #0]
 800300e:	60e3      	str	r3, [r4, #12]
 8003010:	60a3      	str	r3, [r4, #8]
 8003012:	7013      	strb	r3, [r2, #0]
 8003014:	65a3      	str	r3, [r4, #88]	; 0x58
 8003016:	2205      	movs	r2, #5
 8003018:	7831      	ldrb	r1, [r6, #0]
 800301a:	4854      	ldr	r0, [pc, #336]	; (800316c <_svfiprintf_r+0x1ec>)
 800301c:	f000 fa32 	bl	8003484 <memchr>
 8003020:	1c75      	adds	r5, r6, #1
 8003022:	2800      	cmp	r0, #0
 8003024:	d11f      	bne.n	8003066 <_svfiprintf_r+0xe6>
 8003026:	6822      	ldr	r2, [r4, #0]
 8003028:	06d3      	lsls	r3, r2, #27
 800302a:	d504      	bpl.n	8003036 <_svfiprintf_r+0xb6>
 800302c:	2353      	movs	r3, #83	; 0x53
 800302e:	a904      	add	r1, sp, #16
 8003030:	185b      	adds	r3, r3, r1
 8003032:	2120      	movs	r1, #32
 8003034:	7019      	strb	r1, [r3, #0]
 8003036:	0713      	lsls	r3, r2, #28
 8003038:	d504      	bpl.n	8003044 <_svfiprintf_r+0xc4>
 800303a:	2353      	movs	r3, #83	; 0x53
 800303c:	a904      	add	r1, sp, #16
 800303e:	185b      	adds	r3, r3, r1
 8003040:	212b      	movs	r1, #43	; 0x2b
 8003042:	7019      	strb	r1, [r3, #0]
 8003044:	7833      	ldrb	r3, [r6, #0]
 8003046:	2b2a      	cmp	r3, #42	; 0x2a
 8003048:	d016      	beq.n	8003078 <_svfiprintf_r+0xf8>
 800304a:	0035      	movs	r5, r6
 800304c:	2100      	movs	r1, #0
 800304e:	200a      	movs	r0, #10
 8003050:	68e3      	ldr	r3, [r4, #12]
 8003052:	782a      	ldrb	r2, [r5, #0]
 8003054:	1c6e      	adds	r6, r5, #1
 8003056:	3a30      	subs	r2, #48	; 0x30
 8003058:	2a09      	cmp	r2, #9
 800305a:	d94e      	bls.n	80030fa <_svfiprintf_r+0x17a>
 800305c:	2900      	cmp	r1, #0
 800305e:	d111      	bne.n	8003084 <_svfiprintf_r+0x104>
 8003060:	e017      	b.n	8003092 <_svfiprintf_r+0x112>
 8003062:	3501      	adds	r5, #1
 8003064:	e7b0      	b.n	8002fc8 <_svfiprintf_r+0x48>
 8003066:	4b41      	ldr	r3, [pc, #260]	; (800316c <_svfiprintf_r+0x1ec>)
 8003068:	6822      	ldr	r2, [r4, #0]
 800306a:	1ac0      	subs	r0, r0, r3
 800306c:	2301      	movs	r3, #1
 800306e:	4083      	lsls	r3, r0
 8003070:	4313      	orrs	r3, r2
 8003072:	002e      	movs	r6, r5
 8003074:	6023      	str	r3, [r4, #0]
 8003076:	e7ce      	b.n	8003016 <_svfiprintf_r+0x96>
 8003078:	9b07      	ldr	r3, [sp, #28]
 800307a:	1d19      	adds	r1, r3, #4
 800307c:	681b      	ldr	r3, [r3, #0]
 800307e:	9107      	str	r1, [sp, #28]
 8003080:	2b00      	cmp	r3, #0
 8003082:	db01      	blt.n	8003088 <_svfiprintf_r+0x108>
 8003084:	930b      	str	r3, [sp, #44]	; 0x2c
 8003086:	e004      	b.n	8003092 <_svfiprintf_r+0x112>
 8003088:	425b      	negs	r3, r3
 800308a:	60e3      	str	r3, [r4, #12]
 800308c:	2302      	movs	r3, #2
 800308e:	4313      	orrs	r3, r2
 8003090:	6023      	str	r3, [r4, #0]
 8003092:	782b      	ldrb	r3, [r5, #0]
 8003094:	2b2e      	cmp	r3, #46	; 0x2e
 8003096:	d10a      	bne.n	80030ae <_svfiprintf_r+0x12e>
 8003098:	786b      	ldrb	r3, [r5, #1]
 800309a:	2b2a      	cmp	r3, #42	; 0x2a
 800309c:	d135      	bne.n	800310a <_svfiprintf_r+0x18a>
 800309e:	9b07      	ldr	r3, [sp, #28]
 80030a0:	3502      	adds	r5, #2
 80030a2:	1d1a      	adds	r2, r3, #4
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	9207      	str	r2, [sp, #28]
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	db2b      	blt.n	8003104 <_svfiprintf_r+0x184>
 80030ac:	9309      	str	r3, [sp, #36]	; 0x24
 80030ae:	4e30      	ldr	r6, [pc, #192]	; (8003170 <_svfiprintf_r+0x1f0>)
 80030b0:	2203      	movs	r2, #3
 80030b2:	0030      	movs	r0, r6
 80030b4:	7829      	ldrb	r1, [r5, #0]
 80030b6:	f000 f9e5 	bl	8003484 <memchr>
 80030ba:	2800      	cmp	r0, #0
 80030bc:	d006      	beq.n	80030cc <_svfiprintf_r+0x14c>
 80030be:	2340      	movs	r3, #64	; 0x40
 80030c0:	1b80      	subs	r0, r0, r6
 80030c2:	4083      	lsls	r3, r0
 80030c4:	6822      	ldr	r2, [r4, #0]
 80030c6:	3501      	adds	r5, #1
 80030c8:	4313      	orrs	r3, r2
 80030ca:	6023      	str	r3, [r4, #0]
 80030cc:	7829      	ldrb	r1, [r5, #0]
 80030ce:	2206      	movs	r2, #6
 80030d0:	4828      	ldr	r0, [pc, #160]	; (8003174 <_svfiprintf_r+0x1f4>)
 80030d2:	1c6e      	adds	r6, r5, #1
 80030d4:	7621      	strb	r1, [r4, #24]
 80030d6:	f000 f9d5 	bl	8003484 <memchr>
 80030da:	2800      	cmp	r0, #0
 80030dc:	d03c      	beq.n	8003158 <_svfiprintf_r+0x1d8>
 80030de:	4b26      	ldr	r3, [pc, #152]	; (8003178 <_svfiprintf_r+0x1f8>)
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d125      	bne.n	8003130 <_svfiprintf_r+0x1b0>
 80030e4:	2207      	movs	r2, #7
 80030e6:	9b07      	ldr	r3, [sp, #28]
 80030e8:	3307      	adds	r3, #7
 80030ea:	4393      	bics	r3, r2
 80030ec:	3308      	adds	r3, #8
 80030ee:	9307      	str	r3, [sp, #28]
 80030f0:	6963      	ldr	r3, [r4, #20]
 80030f2:	9a04      	ldr	r2, [sp, #16]
 80030f4:	189b      	adds	r3, r3, r2
 80030f6:	6163      	str	r3, [r4, #20]
 80030f8:	e765      	b.n	8002fc6 <_svfiprintf_r+0x46>
 80030fa:	4343      	muls	r3, r0
 80030fc:	0035      	movs	r5, r6
 80030fe:	2101      	movs	r1, #1
 8003100:	189b      	adds	r3, r3, r2
 8003102:	e7a6      	b.n	8003052 <_svfiprintf_r+0xd2>
 8003104:	2301      	movs	r3, #1
 8003106:	425b      	negs	r3, r3
 8003108:	e7d0      	b.n	80030ac <_svfiprintf_r+0x12c>
 800310a:	2300      	movs	r3, #0
 800310c:	200a      	movs	r0, #10
 800310e:	001a      	movs	r2, r3
 8003110:	3501      	adds	r5, #1
 8003112:	6063      	str	r3, [r4, #4]
 8003114:	7829      	ldrb	r1, [r5, #0]
 8003116:	1c6e      	adds	r6, r5, #1
 8003118:	3930      	subs	r1, #48	; 0x30
 800311a:	2909      	cmp	r1, #9
 800311c:	d903      	bls.n	8003126 <_svfiprintf_r+0x1a6>
 800311e:	2b00      	cmp	r3, #0
 8003120:	d0c5      	beq.n	80030ae <_svfiprintf_r+0x12e>
 8003122:	9209      	str	r2, [sp, #36]	; 0x24
 8003124:	e7c3      	b.n	80030ae <_svfiprintf_r+0x12e>
 8003126:	4342      	muls	r2, r0
 8003128:	0035      	movs	r5, r6
 800312a:	2301      	movs	r3, #1
 800312c:	1852      	adds	r2, r2, r1
 800312e:	e7f1      	b.n	8003114 <_svfiprintf_r+0x194>
 8003130:	ab07      	add	r3, sp, #28
 8003132:	9300      	str	r3, [sp, #0]
 8003134:	003a      	movs	r2, r7
 8003136:	0021      	movs	r1, r4
 8003138:	4b10      	ldr	r3, [pc, #64]	; (800317c <_svfiprintf_r+0x1fc>)
 800313a:	9803      	ldr	r0, [sp, #12]
 800313c:	e000      	b.n	8003140 <_svfiprintf_r+0x1c0>
 800313e:	bf00      	nop
 8003140:	9004      	str	r0, [sp, #16]
 8003142:	9b04      	ldr	r3, [sp, #16]
 8003144:	3301      	adds	r3, #1
 8003146:	d1d3      	bne.n	80030f0 <_svfiprintf_r+0x170>
 8003148:	89bb      	ldrh	r3, [r7, #12]
 800314a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800314c:	065b      	lsls	r3, r3, #25
 800314e:	d400      	bmi.n	8003152 <_svfiprintf_r+0x1d2>
 8003150:	e72d      	b.n	8002fae <_svfiprintf_r+0x2e>
 8003152:	2001      	movs	r0, #1
 8003154:	4240      	negs	r0, r0
 8003156:	e72a      	b.n	8002fae <_svfiprintf_r+0x2e>
 8003158:	ab07      	add	r3, sp, #28
 800315a:	9300      	str	r3, [sp, #0]
 800315c:	003a      	movs	r2, r7
 800315e:	0021      	movs	r1, r4
 8003160:	4b06      	ldr	r3, [pc, #24]	; (800317c <_svfiprintf_r+0x1fc>)
 8003162:	9803      	ldr	r0, [sp, #12]
 8003164:	f000 f87c 	bl	8003260 <_printf_i>
 8003168:	e7ea      	b.n	8003140 <_svfiprintf_r+0x1c0>
 800316a:	46c0      	nop			; (mov r8, r8)
 800316c:	080037cb 	.word	0x080037cb
 8003170:	080037d1 	.word	0x080037d1
 8003174:	080037d5 	.word	0x080037d5
 8003178:	00000000 	.word	0x00000000
 800317c:	08002ebd 	.word	0x08002ebd

08003180 <_printf_common>:
 8003180:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003182:	0015      	movs	r5, r2
 8003184:	9301      	str	r3, [sp, #4]
 8003186:	688a      	ldr	r2, [r1, #8]
 8003188:	690b      	ldr	r3, [r1, #16]
 800318a:	000c      	movs	r4, r1
 800318c:	9000      	str	r0, [sp, #0]
 800318e:	4293      	cmp	r3, r2
 8003190:	da00      	bge.n	8003194 <_printf_common+0x14>
 8003192:	0013      	movs	r3, r2
 8003194:	0022      	movs	r2, r4
 8003196:	602b      	str	r3, [r5, #0]
 8003198:	3243      	adds	r2, #67	; 0x43
 800319a:	7812      	ldrb	r2, [r2, #0]
 800319c:	2a00      	cmp	r2, #0
 800319e:	d001      	beq.n	80031a4 <_printf_common+0x24>
 80031a0:	3301      	adds	r3, #1
 80031a2:	602b      	str	r3, [r5, #0]
 80031a4:	6823      	ldr	r3, [r4, #0]
 80031a6:	069b      	lsls	r3, r3, #26
 80031a8:	d502      	bpl.n	80031b0 <_printf_common+0x30>
 80031aa:	682b      	ldr	r3, [r5, #0]
 80031ac:	3302      	adds	r3, #2
 80031ae:	602b      	str	r3, [r5, #0]
 80031b0:	6822      	ldr	r2, [r4, #0]
 80031b2:	2306      	movs	r3, #6
 80031b4:	0017      	movs	r7, r2
 80031b6:	401f      	ands	r7, r3
 80031b8:	421a      	tst	r2, r3
 80031ba:	d027      	beq.n	800320c <_printf_common+0x8c>
 80031bc:	0023      	movs	r3, r4
 80031be:	3343      	adds	r3, #67	; 0x43
 80031c0:	781b      	ldrb	r3, [r3, #0]
 80031c2:	1e5a      	subs	r2, r3, #1
 80031c4:	4193      	sbcs	r3, r2
 80031c6:	6822      	ldr	r2, [r4, #0]
 80031c8:	0692      	lsls	r2, r2, #26
 80031ca:	d430      	bmi.n	800322e <_printf_common+0xae>
 80031cc:	0022      	movs	r2, r4
 80031ce:	9901      	ldr	r1, [sp, #4]
 80031d0:	9800      	ldr	r0, [sp, #0]
 80031d2:	9e08      	ldr	r6, [sp, #32]
 80031d4:	3243      	adds	r2, #67	; 0x43
 80031d6:	47b0      	blx	r6
 80031d8:	1c43      	adds	r3, r0, #1
 80031da:	d025      	beq.n	8003228 <_printf_common+0xa8>
 80031dc:	2306      	movs	r3, #6
 80031de:	6820      	ldr	r0, [r4, #0]
 80031e0:	682a      	ldr	r2, [r5, #0]
 80031e2:	68e1      	ldr	r1, [r4, #12]
 80031e4:	2500      	movs	r5, #0
 80031e6:	4003      	ands	r3, r0
 80031e8:	2b04      	cmp	r3, #4
 80031ea:	d103      	bne.n	80031f4 <_printf_common+0x74>
 80031ec:	1a8d      	subs	r5, r1, r2
 80031ee:	43eb      	mvns	r3, r5
 80031f0:	17db      	asrs	r3, r3, #31
 80031f2:	401d      	ands	r5, r3
 80031f4:	68a3      	ldr	r3, [r4, #8]
 80031f6:	6922      	ldr	r2, [r4, #16]
 80031f8:	4293      	cmp	r3, r2
 80031fa:	dd01      	ble.n	8003200 <_printf_common+0x80>
 80031fc:	1a9b      	subs	r3, r3, r2
 80031fe:	18ed      	adds	r5, r5, r3
 8003200:	2700      	movs	r7, #0
 8003202:	42bd      	cmp	r5, r7
 8003204:	d120      	bne.n	8003248 <_printf_common+0xc8>
 8003206:	2000      	movs	r0, #0
 8003208:	e010      	b.n	800322c <_printf_common+0xac>
 800320a:	3701      	adds	r7, #1
 800320c:	68e3      	ldr	r3, [r4, #12]
 800320e:	682a      	ldr	r2, [r5, #0]
 8003210:	1a9b      	subs	r3, r3, r2
 8003212:	42bb      	cmp	r3, r7
 8003214:	ddd2      	ble.n	80031bc <_printf_common+0x3c>
 8003216:	0022      	movs	r2, r4
 8003218:	2301      	movs	r3, #1
 800321a:	9901      	ldr	r1, [sp, #4]
 800321c:	9800      	ldr	r0, [sp, #0]
 800321e:	9e08      	ldr	r6, [sp, #32]
 8003220:	3219      	adds	r2, #25
 8003222:	47b0      	blx	r6
 8003224:	1c43      	adds	r3, r0, #1
 8003226:	d1f0      	bne.n	800320a <_printf_common+0x8a>
 8003228:	2001      	movs	r0, #1
 800322a:	4240      	negs	r0, r0
 800322c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800322e:	2030      	movs	r0, #48	; 0x30
 8003230:	18e1      	adds	r1, r4, r3
 8003232:	3143      	adds	r1, #67	; 0x43
 8003234:	7008      	strb	r0, [r1, #0]
 8003236:	0021      	movs	r1, r4
 8003238:	1c5a      	adds	r2, r3, #1
 800323a:	3145      	adds	r1, #69	; 0x45
 800323c:	7809      	ldrb	r1, [r1, #0]
 800323e:	18a2      	adds	r2, r4, r2
 8003240:	3243      	adds	r2, #67	; 0x43
 8003242:	3302      	adds	r3, #2
 8003244:	7011      	strb	r1, [r2, #0]
 8003246:	e7c1      	b.n	80031cc <_printf_common+0x4c>
 8003248:	0022      	movs	r2, r4
 800324a:	2301      	movs	r3, #1
 800324c:	9901      	ldr	r1, [sp, #4]
 800324e:	9800      	ldr	r0, [sp, #0]
 8003250:	9e08      	ldr	r6, [sp, #32]
 8003252:	321a      	adds	r2, #26
 8003254:	47b0      	blx	r6
 8003256:	1c43      	adds	r3, r0, #1
 8003258:	d0e6      	beq.n	8003228 <_printf_common+0xa8>
 800325a:	3701      	adds	r7, #1
 800325c:	e7d1      	b.n	8003202 <_printf_common+0x82>
	...

08003260 <_printf_i>:
 8003260:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003262:	b08b      	sub	sp, #44	; 0x2c
 8003264:	9206      	str	r2, [sp, #24]
 8003266:	000a      	movs	r2, r1
 8003268:	3243      	adds	r2, #67	; 0x43
 800326a:	9307      	str	r3, [sp, #28]
 800326c:	9005      	str	r0, [sp, #20]
 800326e:	9204      	str	r2, [sp, #16]
 8003270:	7e0a      	ldrb	r2, [r1, #24]
 8003272:	000c      	movs	r4, r1
 8003274:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003276:	2a78      	cmp	r2, #120	; 0x78
 8003278:	d807      	bhi.n	800328a <_printf_i+0x2a>
 800327a:	2a62      	cmp	r2, #98	; 0x62
 800327c:	d809      	bhi.n	8003292 <_printf_i+0x32>
 800327e:	2a00      	cmp	r2, #0
 8003280:	d100      	bne.n	8003284 <_printf_i+0x24>
 8003282:	e0c1      	b.n	8003408 <_printf_i+0x1a8>
 8003284:	2a58      	cmp	r2, #88	; 0x58
 8003286:	d100      	bne.n	800328a <_printf_i+0x2a>
 8003288:	e08c      	b.n	80033a4 <_printf_i+0x144>
 800328a:	0026      	movs	r6, r4
 800328c:	3642      	adds	r6, #66	; 0x42
 800328e:	7032      	strb	r2, [r6, #0]
 8003290:	e022      	b.n	80032d8 <_printf_i+0x78>
 8003292:	0010      	movs	r0, r2
 8003294:	3863      	subs	r0, #99	; 0x63
 8003296:	2815      	cmp	r0, #21
 8003298:	d8f7      	bhi.n	800328a <_printf_i+0x2a>
 800329a:	f7fc ff3f 	bl	800011c <__gnu_thumb1_case_shi>
 800329e:	0016      	.short	0x0016
 80032a0:	fff6001f 	.word	0xfff6001f
 80032a4:	fff6fff6 	.word	0xfff6fff6
 80032a8:	001ffff6 	.word	0x001ffff6
 80032ac:	fff6fff6 	.word	0xfff6fff6
 80032b0:	fff6fff6 	.word	0xfff6fff6
 80032b4:	003600a8 	.word	0x003600a8
 80032b8:	fff6009a 	.word	0xfff6009a
 80032bc:	00b9fff6 	.word	0x00b9fff6
 80032c0:	0036fff6 	.word	0x0036fff6
 80032c4:	fff6fff6 	.word	0xfff6fff6
 80032c8:	009e      	.short	0x009e
 80032ca:	0026      	movs	r6, r4
 80032cc:	681a      	ldr	r2, [r3, #0]
 80032ce:	3642      	adds	r6, #66	; 0x42
 80032d0:	1d11      	adds	r1, r2, #4
 80032d2:	6019      	str	r1, [r3, #0]
 80032d4:	6813      	ldr	r3, [r2, #0]
 80032d6:	7033      	strb	r3, [r6, #0]
 80032d8:	2301      	movs	r3, #1
 80032da:	e0a7      	b.n	800342c <_printf_i+0x1cc>
 80032dc:	6808      	ldr	r0, [r1, #0]
 80032de:	6819      	ldr	r1, [r3, #0]
 80032e0:	1d0a      	adds	r2, r1, #4
 80032e2:	0605      	lsls	r5, r0, #24
 80032e4:	d50b      	bpl.n	80032fe <_printf_i+0x9e>
 80032e6:	680d      	ldr	r5, [r1, #0]
 80032e8:	601a      	str	r2, [r3, #0]
 80032ea:	2d00      	cmp	r5, #0
 80032ec:	da03      	bge.n	80032f6 <_printf_i+0x96>
 80032ee:	232d      	movs	r3, #45	; 0x2d
 80032f0:	9a04      	ldr	r2, [sp, #16]
 80032f2:	426d      	negs	r5, r5
 80032f4:	7013      	strb	r3, [r2, #0]
 80032f6:	4b61      	ldr	r3, [pc, #388]	; (800347c <_printf_i+0x21c>)
 80032f8:	270a      	movs	r7, #10
 80032fa:	9303      	str	r3, [sp, #12]
 80032fc:	e01b      	b.n	8003336 <_printf_i+0xd6>
 80032fe:	680d      	ldr	r5, [r1, #0]
 8003300:	601a      	str	r2, [r3, #0]
 8003302:	0641      	lsls	r1, r0, #25
 8003304:	d5f1      	bpl.n	80032ea <_printf_i+0x8a>
 8003306:	b22d      	sxth	r5, r5
 8003308:	e7ef      	b.n	80032ea <_printf_i+0x8a>
 800330a:	680d      	ldr	r5, [r1, #0]
 800330c:	6819      	ldr	r1, [r3, #0]
 800330e:	1d08      	adds	r0, r1, #4
 8003310:	6018      	str	r0, [r3, #0]
 8003312:	062e      	lsls	r6, r5, #24
 8003314:	d501      	bpl.n	800331a <_printf_i+0xba>
 8003316:	680d      	ldr	r5, [r1, #0]
 8003318:	e003      	b.n	8003322 <_printf_i+0xc2>
 800331a:	066d      	lsls	r5, r5, #25
 800331c:	d5fb      	bpl.n	8003316 <_printf_i+0xb6>
 800331e:	680d      	ldr	r5, [r1, #0]
 8003320:	b2ad      	uxth	r5, r5
 8003322:	4b56      	ldr	r3, [pc, #344]	; (800347c <_printf_i+0x21c>)
 8003324:	2708      	movs	r7, #8
 8003326:	9303      	str	r3, [sp, #12]
 8003328:	2a6f      	cmp	r2, #111	; 0x6f
 800332a:	d000      	beq.n	800332e <_printf_i+0xce>
 800332c:	3702      	adds	r7, #2
 800332e:	0023      	movs	r3, r4
 8003330:	2200      	movs	r2, #0
 8003332:	3343      	adds	r3, #67	; 0x43
 8003334:	701a      	strb	r2, [r3, #0]
 8003336:	6863      	ldr	r3, [r4, #4]
 8003338:	60a3      	str	r3, [r4, #8]
 800333a:	2b00      	cmp	r3, #0
 800333c:	db03      	blt.n	8003346 <_printf_i+0xe6>
 800333e:	2204      	movs	r2, #4
 8003340:	6821      	ldr	r1, [r4, #0]
 8003342:	4391      	bics	r1, r2
 8003344:	6021      	str	r1, [r4, #0]
 8003346:	2d00      	cmp	r5, #0
 8003348:	d102      	bne.n	8003350 <_printf_i+0xf0>
 800334a:	9e04      	ldr	r6, [sp, #16]
 800334c:	2b00      	cmp	r3, #0
 800334e:	d00c      	beq.n	800336a <_printf_i+0x10a>
 8003350:	9e04      	ldr	r6, [sp, #16]
 8003352:	0028      	movs	r0, r5
 8003354:	0039      	movs	r1, r7
 8003356:	f7fc ff71 	bl	800023c <__aeabi_uidivmod>
 800335a:	9b03      	ldr	r3, [sp, #12]
 800335c:	3e01      	subs	r6, #1
 800335e:	5c5b      	ldrb	r3, [r3, r1]
 8003360:	7033      	strb	r3, [r6, #0]
 8003362:	002b      	movs	r3, r5
 8003364:	0005      	movs	r5, r0
 8003366:	429f      	cmp	r7, r3
 8003368:	d9f3      	bls.n	8003352 <_printf_i+0xf2>
 800336a:	2f08      	cmp	r7, #8
 800336c:	d109      	bne.n	8003382 <_printf_i+0x122>
 800336e:	6823      	ldr	r3, [r4, #0]
 8003370:	07db      	lsls	r3, r3, #31
 8003372:	d506      	bpl.n	8003382 <_printf_i+0x122>
 8003374:	6863      	ldr	r3, [r4, #4]
 8003376:	6922      	ldr	r2, [r4, #16]
 8003378:	4293      	cmp	r3, r2
 800337a:	dc02      	bgt.n	8003382 <_printf_i+0x122>
 800337c:	2330      	movs	r3, #48	; 0x30
 800337e:	3e01      	subs	r6, #1
 8003380:	7033      	strb	r3, [r6, #0]
 8003382:	9b04      	ldr	r3, [sp, #16]
 8003384:	1b9b      	subs	r3, r3, r6
 8003386:	6123      	str	r3, [r4, #16]
 8003388:	9b07      	ldr	r3, [sp, #28]
 800338a:	0021      	movs	r1, r4
 800338c:	9300      	str	r3, [sp, #0]
 800338e:	9805      	ldr	r0, [sp, #20]
 8003390:	9b06      	ldr	r3, [sp, #24]
 8003392:	aa09      	add	r2, sp, #36	; 0x24
 8003394:	f7ff fef4 	bl	8003180 <_printf_common>
 8003398:	1c43      	adds	r3, r0, #1
 800339a:	d14c      	bne.n	8003436 <_printf_i+0x1d6>
 800339c:	2001      	movs	r0, #1
 800339e:	4240      	negs	r0, r0
 80033a0:	b00b      	add	sp, #44	; 0x2c
 80033a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80033a4:	3145      	adds	r1, #69	; 0x45
 80033a6:	700a      	strb	r2, [r1, #0]
 80033a8:	4a34      	ldr	r2, [pc, #208]	; (800347c <_printf_i+0x21c>)
 80033aa:	9203      	str	r2, [sp, #12]
 80033ac:	681a      	ldr	r2, [r3, #0]
 80033ae:	6821      	ldr	r1, [r4, #0]
 80033b0:	ca20      	ldmia	r2!, {r5}
 80033b2:	601a      	str	r2, [r3, #0]
 80033b4:	0608      	lsls	r0, r1, #24
 80033b6:	d516      	bpl.n	80033e6 <_printf_i+0x186>
 80033b8:	07cb      	lsls	r3, r1, #31
 80033ba:	d502      	bpl.n	80033c2 <_printf_i+0x162>
 80033bc:	2320      	movs	r3, #32
 80033be:	4319      	orrs	r1, r3
 80033c0:	6021      	str	r1, [r4, #0]
 80033c2:	2710      	movs	r7, #16
 80033c4:	2d00      	cmp	r5, #0
 80033c6:	d1b2      	bne.n	800332e <_printf_i+0xce>
 80033c8:	2320      	movs	r3, #32
 80033ca:	6822      	ldr	r2, [r4, #0]
 80033cc:	439a      	bics	r2, r3
 80033ce:	6022      	str	r2, [r4, #0]
 80033d0:	e7ad      	b.n	800332e <_printf_i+0xce>
 80033d2:	2220      	movs	r2, #32
 80033d4:	6809      	ldr	r1, [r1, #0]
 80033d6:	430a      	orrs	r2, r1
 80033d8:	6022      	str	r2, [r4, #0]
 80033da:	0022      	movs	r2, r4
 80033dc:	2178      	movs	r1, #120	; 0x78
 80033de:	3245      	adds	r2, #69	; 0x45
 80033e0:	7011      	strb	r1, [r2, #0]
 80033e2:	4a27      	ldr	r2, [pc, #156]	; (8003480 <_printf_i+0x220>)
 80033e4:	e7e1      	b.n	80033aa <_printf_i+0x14a>
 80033e6:	0648      	lsls	r0, r1, #25
 80033e8:	d5e6      	bpl.n	80033b8 <_printf_i+0x158>
 80033ea:	b2ad      	uxth	r5, r5
 80033ec:	e7e4      	b.n	80033b8 <_printf_i+0x158>
 80033ee:	681a      	ldr	r2, [r3, #0]
 80033f0:	680d      	ldr	r5, [r1, #0]
 80033f2:	1d10      	adds	r0, r2, #4
 80033f4:	6949      	ldr	r1, [r1, #20]
 80033f6:	6018      	str	r0, [r3, #0]
 80033f8:	6813      	ldr	r3, [r2, #0]
 80033fa:	062e      	lsls	r6, r5, #24
 80033fc:	d501      	bpl.n	8003402 <_printf_i+0x1a2>
 80033fe:	6019      	str	r1, [r3, #0]
 8003400:	e002      	b.n	8003408 <_printf_i+0x1a8>
 8003402:	066d      	lsls	r5, r5, #25
 8003404:	d5fb      	bpl.n	80033fe <_printf_i+0x19e>
 8003406:	8019      	strh	r1, [r3, #0]
 8003408:	2300      	movs	r3, #0
 800340a:	9e04      	ldr	r6, [sp, #16]
 800340c:	6123      	str	r3, [r4, #16]
 800340e:	e7bb      	b.n	8003388 <_printf_i+0x128>
 8003410:	681a      	ldr	r2, [r3, #0]
 8003412:	1d11      	adds	r1, r2, #4
 8003414:	6019      	str	r1, [r3, #0]
 8003416:	6816      	ldr	r6, [r2, #0]
 8003418:	2100      	movs	r1, #0
 800341a:	0030      	movs	r0, r6
 800341c:	6862      	ldr	r2, [r4, #4]
 800341e:	f000 f831 	bl	8003484 <memchr>
 8003422:	2800      	cmp	r0, #0
 8003424:	d001      	beq.n	800342a <_printf_i+0x1ca>
 8003426:	1b80      	subs	r0, r0, r6
 8003428:	6060      	str	r0, [r4, #4]
 800342a:	6863      	ldr	r3, [r4, #4]
 800342c:	6123      	str	r3, [r4, #16]
 800342e:	2300      	movs	r3, #0
 8003430:	9a04      	ldr	r2, [sp, #16]
 8003432:	7013      	strb	r3, [r2, #0]
 8003434:	e7a8      	b.n	8003388 <_printf_i+0x128>
 8003436:	6923      	ldr	r3, [r4, #16]
 8003438:	0032      	movs	r2, r6
 800343a:	9906      	ldr	r1, [sp, #24]
 800343c:	9805      	ldr	r0, [sp, #20]
 800343e:	9d07      	ldr	r5, [sp, #28]
 8003440:	47a8      	blx	r5
 8003442:	1c43      	adds	r3, r0, #1
 8003444:	d0aa      	beq.n	800339c <_printf_i+0x13c>
 8003446:	6823      	ldr	r3, [r4, #0]
 8003448:	079b      	lsls	r3, r3, #30
 800344a:	d415      	bmi.n	8003478 <_printf_i+0x218>
 800344c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800344e:	68e0      	ldr	r0, [r4, #12]
 8003450:	4298      	cmp	r0, r3
 8003452:	daa5      	bge.n	80033a0 <_printf_i+0x140>
 8003454:	0018      	movs	r0, r3
 8003456:	e7a3      	b.n	80033a0 <_printf_i+0x140>
 8003458:	0022      	movs	r2, r4
 800345a:	2301      	movs	r3, #1
 800345c:	9906      	ldr	r1, [sp, #24]
 800345e:	9805      	ldr	r0, [sp, #20]
 8003460:	9e07      	ldr	r6, [sp, #28]
 8003462:	3219      	adds	r2, #25
 8003464:	47b0      	blx	r6
 8003466:	1c43      	adds	r3, r0, #1
 8003468:	d098      	beq.n	800339c <_printf_i+0x13c>
 800346a:	3501      	adds	r5, #1
 800346c:	68e3      	ldr	r3, [r4, #12]
 800346e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003470:	1a9b      	subs	r3, r3, r2
 8003472:	42ab      	cmp	r3, r5
 8003474:	dcf0      	bgt.n	8003458 <_printf_i+0x1f8>
 8003476:	e7e9      	b.n	800344c <_printf_i+0x1ec>
 8003478:	2500      	movs	r5, #0
 800347a:	e7f7      	b.n	800346c <_printf_i+0x20c>
 800347c:	080037dc 	.word	0x080037dc
 8003480:	080037ed 	.word	0x080037ed

08003484 <memchr>:
 8003484:	b2c9      	uxtb	r1, r1
 8003486:	1882      	adds	r2, r0, r2
 8003488:	4290      	cmp	r0, r2
 800348a:	d101      	bne.n	8003490 <memchr+0xc>
 800348c:	2000      	movs	r0, #0
 800348e:	4770      	bx	lr
 8003490:	7803      	ldrb	r3, [r0, #0]
 8003492:	428b      	cmp	r3, r1
 8003494:	d0fb      	beq.n	800348e <memchr+0xa>
 8003496:	3001      	adds	r0, #1
 8003498:	e7f6      	b.n	8003488 <memchr+0x4>

0800349a <memcpy>:
 800349a:	2300      	movs	r3, #0
 800349c:	b510      	push	{r4, lr}
 800349e:	429a      	cmp	r2, r3
 80034a0:	d100      	bne.n	80034a4 <memcpy+0xa>
 80034a2:	bd10      	pop	{r4, pc}
 80034a4:	5ccc      	ldrb	r4, [r1, r3]
 80034a6:	54c4      	strb	r4, [r0, r3]
 80034a8:	3301      	adds	r3, #1
 80034aa:	e7f8      	b.n	800349e <memcpy+0x4>

080034ac <memmove>:
 80034ac:	b510      	push	{r4, lr}
 80034ae:	4288      	cmp	r0, r1
 80034b0:	d902      	bls.n	80034b8 <memmove+0xc>
 80034b2:	188b      	adds	r3, r1, r2
 80034b4:	4298      	cmp	r0, r3
 80034b6:	d303      	bcc.n	80034c0 <memmove+0x14>
 80034b8:	2300      	movs	r3, #0
 80034ba:	e007      	b.n	80034cc <memmove+0x20>
 80034bc:	5c8b      	ldrb	r3, [r1, r2]
 80034be:	5483      	strb	r3, [r0, r2]
 80034c0:	3a01      	subs	r2, #1
 80034c2:	d2fb      	bcs.n	80034bc <memmove+0x10>
 80034c4:	bd10      	pop	{r4, pc}
 80034c6:	5ccc      	ldrb	r4, [r1, r3]
 80034c8:	54c4      	strb	r4, [r0, r3]
 80034ca:	3301      	adds	r3, #1
 80034cc:	429a      	cmp	r2, r3
 80034ce:	d1fa      	bne.n	80034c6 <memmove+0x1a>
 80034d0:	e7f8      	b.n	80034c4 <memmove+0x18>
	...

080034d4 <_free_r>:
 80034d4:	b570      	push	{r4, r5, r6, lr}
 80034d6:	0005      	movs	r5, r0
 80034d8:	2900      	cmp	r1, #0
 80034da:	d010      	beq.n	80034fe <_free_r+0x2a>
 80034dc:	1f0c      	subs	r4, r1, #4
 80034de:	6823      	ldr	r3, [r4, #0]
 80034e0:	2b00      	cmp	r3, #0
 80034e2:	da00      	bge.n	80034e6 <_free_r+0x12>
 80034e4:	18e4      	adds	r4, r4, r3
 80034e6:	0028      	movs	r0, r5
 80034e8:	f000 f918 	bl	800371c <__malloc_lock>
 80034ec:	4a1d      	ldr	r2, [pc, #116]	; (8003564 <_free_r+0x90>)
 80034ee:	6813      	ldr	r3, [r2, #0]
 80034f0:	2b00      	cmp	r3, #0
 80034f2:	d105      	bne.n	8003500 <_free_r+0x2c>
 80034f4:	6063      	str	r3, [r4, #4]
 80034f6:	6014      	str	r4, [r2, #0]
 80034f8:	0028      	movs	r0, r5
 80034fa:	f000 f917 	bl	800372c <__malloc_unlock>
 80034fe:	bd70      	pop	{r4, r5, r6, pc}
 8003500:	42a3      	cmp	r3, r4
 8003502:	d908      	bls.n	8003516 <_free_r+0x42>
 8003504:	6821      	ldr	r1, [r4, #0]
 8003506:	1860      	adds	r0, r4, r1
 8003508:	4283      	cmp	r3, r0
 800350a:	d1f3      	bne.n	80034f4 <_free_r+0x20>
 800350c:	6818      	ldr	r0, [r3, #0]
 800350e:	685b      	ldr	r3, [r3, #4]
 8003510:	1841      	adds	r1, r0, r1
 8003512:	6021      	str	r1, [r4, #0]
 8003514:	e7ee      	b.n	80034f4 <_free_r+0x20>
 8003516:	001a      	movs	r2, r3
 8003518:	685b      	ldr	r3, [r3, #4]
 800351a:	2b00      	cmp	r3, #0
 800351c:	d001      	beq.n	8003522 <_free_r+0x4e>
 800351e:	42a3      	cmp	r3, r4
 8003520:	d9f9      	bls.n	8003516 <_free_r+0x42>
 8003522:	6811      	ldr	r1, [r2, #0]
 8003524:	1850      	adds	r0, r2, r1
 8003526:	42a0      	cmp	r0, r4
 8003528:	d10b      	bne.n	8003542 <_free_r+0x6e>
 800352a:	6820      	ldr	r0, [r4, #0]
 800352c:	1809      	adds	r1, r1, r0
 800352e:	1850      	adds	r0, r2, r1
 8003530:	6011      	str	r1, [r2, #0]
 8003532:	4283      	cmp	r3, r0
 8003534:	d1e0      	bne.n	80034f8 <_free_r+0x24>
 8003536:	6818      	ldr	r0, [r3, #0]
 8003538:	685b      	ldr	r3, [r3, #4]
 800353a:	1841      	adds	r1, r0, r1
 800353c:	6011      	str	r1, [r2, #0]
 800353e:	6053      	str	r3, [r2, #4]
 8003540:	e7da      	b.n	80034f8 <_free_r+0x24>
 8003542:	42a0      	cmp	r0, r4
 8003544:	d902      	bls.n	800354c <_free_r+0x78>
 8003546:	230c      	movs	r3, #12
 8003548:	602b      	str	r3, [r5, #0]
 800354a:	e7d5      	b.n	80034f8 <_free_r+0x24>
 800354c:	6821      	ldr	r1, [r4, #0]
 800354e:	1860      	adds	r0, r4, r1
 8003550:	4283      	cmp	r3, r0
 8003552:	d103      	bne.n	800355c <_free_r+0x88>
 8003554:	6818      	ldr	r0, [r3, #0]
 8003556:	685b      	ldr	r3, [r3, #4]
 8003558:	1841      	adds	r1, r0, r1
 800355a:	6021      	str	r1, [r4, #0]
 800355c:	6063      	str	r3, [r4, #4]
 800355e:	6054      	str	r4, [r2, #4]
 8003560:	e7ca      	b.n	80034f8 <_free_r+0x24>
 8003562:	46c0      	nop			; (mov r8, r8)
 8003564:	2000014c 	.word	0x2000014c

08003568 <sbrk_aligned>:
 8003568:	b570      	push	{r4, r5, r6, lr}
 800356a:	4e0f      	ldr	r6, [pc, #60]	; (80035a8 <sbrk_aligned+0x40>)
 800356c:	000d      	movs	r5, r1
 800356e:	6831      	ldr	r1, [r6, #0]
 8003570:	0004      	movs	r4, r0
 8003572:	2900      	cmp	r1, #0
 8003574:	d102      	bne.n	800357c <sbrk_aligned+0x14>
 8003576:	f000 f8bf 	bl	80036f8 <_sbrk_r>
 800357a:	6030      	str	r0, [r6, #0]
 800357c:	0029      	movs	r1, r5
 800357e:	0020      	movs	r0, r4
 8003580:	f000 f8ba 	bl	80036f8 <_sbrk_r>
 8003584:	1c43      	adds	r3, r0, #1
 8003586:	d00a      	beq.n	800359e <sbrk_aligned+0x36>
 8003588:	2303      	movs	r3, #3
 800358a:	1cc5      	adds	r5, r0, #3
 800358c:	439d      	bics	r5, r3
 800358e:	42a8      	cmp	r0, r5
 8003590:	d007      	beq.n	80035a2 <sbrk_aligned+0x3a>
 8003592:	1a29      	subs	r1, r5, r0
 8003594:	0020      	movs	r0, r4
 8003596:	f000 f8af 	bl	80036f8 <_sbrk_r>
 800359a:	1c43      	adds	r3, r0, #1
 800359c:	d101      	bne.n	80035a2 <sbrk_aligned+0x3a>
 800359e:	2501      	movs	r5, #1
 80035a0:	426d      	negs	r5, r5
 80035a2:	0028      	movs	r0, r5
 80035a4:	bd70      	pop	{r4, r5, r6, pc}
 80035a6:	46c0      	nop			; (mov r8, r8)
 80035a8:	20000150 	.word	0x20000150

080035ac <_malloc_r>:
 80035ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80035ae:	2203      	movs	r2, #3
 80035b0:	1ccb      	adds	r3, r1, #3
 80035b2:	4393      	bics	r3, r2
 80035b4:	3308      	adds	r3, #8
 80035b6:	0006      	movs	r6, r0
 80035b8:	001f      	movs	r7, r3
 80035ba:	2b0c      	cmp	r3, #12
 80035bc:	d232      	bcs.n	8003624 <_malloc_r+0x78>
 80035be:	270c      	movs	r7, #12
 80035c0:	42b9      	cmp	r1, r7
 80035c2:	d831      	bhi.n	8003628 <_malloc_r+0x7c>
 80035c4:	0030      	movs	r0, r6
 80035c6:	f000 f8a9 	bl	800371c <__malloc_lock>
 80035ca:	4d32      	ldr	r5, [pc, #200]	; (8003694 <_malloc_r+0xe8>)
 80035cc:	682b      	ldr	r3, [r5, #0]
 80035ce:	001c      	movs	r4, r3
 80035d0:	2c00      	cmp	r4, #0
 80035d2:	d12e      	bne.n	8003632 <_malloc_r+0x86>
 80035d4:	0039      	movs	r1, r7
 80035d6:	0030      	movs	r0, r6
 80035d8:	f7ff ffc6 	bl	8003568 <sbrk_aligned>
 80035dc:	0004      	movs	r4, r0
 80035de:	1c43      	adds	r3, r0, #1
 80035e0:	d11e      	bne.n	8003620 <_malloc_r+0x74>
 80035e2:	682c      	ldr	r4, [r5, #0]
 80035e4:	0025      	movs	r5, r4
 80035e6:	2d00      	cmp	r5, #0
 80035e8:	d14a      	bne.n	8003680 <_malloc_r+0xd4>
 80035ea:	6823      	ldr	r3, [r4, #0]
 80035ec:	0029      	movs	r1, r5
 80035ee:	18e3      	adds	r3, r4, r3
 80035f0:	0030      	movs	r0, r6
 80035f2:	9301      	str	r3, [sp, #4]
 80035f4:	f000 f880 	bl	80036f8 <_sbrk_r>
 80035f8:	9b01      	ldr	r3, [sp, #4]
 80035fa:	4283      	cmp	r3, r0
 80035fc:	d143      	bne.n	8003686 <_malloc_r+0xda>
 80035fe:	6823      	ldr	r3, [r4, #0]
 8003600:	3703      	adds	r7, #3
 8003602:	1aff      	subs	r7, r7, r3
 8003604:	2303      	movs	r3, #3
 8003606:	439f      	bics	r7, r3
 8003608:	3708      	adds	r7, #8
 800360a:	2f0c      	cmp	r7, #12
 800360c:	d200      	bcs.n	8003610 <_malloc_r+0x64>
 800360e:	270c      	movs	r7, #12
 8003610:	0039      	movs	r1, r7
 8003612:	0030      	movs	r0, r6
 8003614:	f7ff ffa8 	bl	8003568 <sbrk_aligned>
 8003618:	1c43      	adds	r3, r0, #1
 800361a:	d034      	beq.n	8003686 <_malloc_r+0xda>
 800361c:	6823      	ldr	r3, [r4, #0]
 800361e:	19df      	adds	r7, r3, r7
 8003620:	6027      	str	r7, [r4, #0]
 8003622:	e013      	b.n	800364c <_malloc_r+0xa0>
 8003624:	2b00      	cmp	r3, #0
 8003626:	dacb      	bge.n	80035c0 <_malloc_r+0x14>
 8003628:	230c      	movs	r3, #12
 800362a:	2500      	movs	r5, #0
 800362c:	6033      	str	r3, [r6, #0]
 800362e:	0028      	movs	r0, r5
 8003630:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003632:	6822      	ldr	r2, [r4, #0]
 8003634:	1bd1      	subs	r1, r2, r7
 8003636:	d420      	bmi.n	800367a <_malloc_r+0xce>
 8003638:	290b      	cmp	r1, #11
 800363a:	d917      	bls.n	800366c <_malloc_r+0xc0>
 800363c:	19e2      	adds	r2, r4, r7
 800363e:	6027      	str	r7, [r4, #0]
 8003640:	42a3      	cmp	r3, r4
 8003642:	d111      	bne.n	8003668 <_malloc_r+0xbc>
 8003644:	602a      	str	r2, [r5, #0]
 8003646:	6863      	ldr	r3, [r4, #4]
 8003648:	6011      	str	r1, [r2, #0]
 800364a:	6053      	str	r3, [r2, #4]
 800364c:	0030      	movs	r0, r6
 800364e:	0025      	movs	r5, r4
 8003650:	f000 f86c 	bl	800372c <__malloc_unlock>
 8003654:	2207      	movs	r2, #7
 8003656:	350b      	adds	r5, #11
 8003658:	1d23      	adds	r3, r4, #4
 800365a:	4395      	bics	r5, r2
 800365c:	1aea      	subs	r2, r5, r3
 800365e:	429d      	cmp	r5, r3
 8003660:	d0e5      	beq.n	800362e <_malloc_r+0x82>
 8003662:	1b5b      	subs	r3, r3, r5
 8003664:	50a3      	str	r3, [r4, r2]
 8003666:	e7e2      	b.n	800362e <_malloc_r+0x82>
 8003668:	605a      	str	r2, [r3, #4]
 800366a:	e7ec      	b.n	8003646 <_malloc_r+0x9a>
 800366c:	6862      	ldr	r2, [r4, #4]
 800366e:	42a3      	cmp	r3, r4
 8003670:	d101      	bne.n	8003676 <_malloc_r+0xca>
 8003672:	602a      	str	r2, [r5, #0]
 8003674:	e7ea      	b.n	800364c <_malloc_r+0xa0>
 8003676:	605a      	str	r2, [r3, #4]
 8003678:	e7e8      	b.n	800364c <_malloc_r+0xa0>
 800367a:	0023      	movs	r3, r4
 800367c:	6864      	ldr	r4, [r4, #4]
 800367e:	e7a7      	b.n	80035d0 <_malloc_r+0x24>
 8003680:	002c      	movs	r4, r5
 8003682:	686d      	ldr	r5, [r5, #4]
 8003684:	e7af      	b.n	80035e6 <_malloc_r+0x3a>
 8003686:	230c      	movs	r3, #12
 8003688:	0030      	movs	r0, r6
 800368a:	6033      	str	r3, [r6, #0]
 800368c:	f000 f84e 	bl	800372c <__malloc_unlock>
 8003690:	e7cd      	b.n	800362e <_malloc_r+0x82>
 8003692:	46c0      	nop			; (mov r8, r8)
 8003694:	2000014c 	.word	0x2000014c

08003698 <_realloc_r>:
 8003698:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800369a:	0007      	movs	r7, r0
 800369c:	000e      	movs	r6, r1
 800369e:	0014      	movs	r4, r2
 80036a0:	2900      	cmp	r1, #0
 80036a2:	d105      	bne.n	80036b0 <_realloc_r+0x18>
 80036a4:	0011      	movs	r1, r2
 80036a6:	f7ff ff81 	bl	80035ac <_malloc_r>
 80036aa:	0005      	movs	r5, r0
 80036ac:	0028      	movs	r0, r5
 80036ae:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80036b0:	2a00      	cmp	r2, #0
 80036b2:	d103      	bne.n	80036bc <_realloc_r+0x24>
 80036b4:	f7ff ff0e 	bl	80034d4 <_free_r>
 80036b8:	0025      	movs	r5, r4
 80036ba:	e7f7      	b.n	80036ac <_realloc_r+0x14>
 80036bc:	f000 f83e 	bl	800373c <_malloc_usable_size_r>
 80036c0:	9001      	str	r0, [sp, #4]
 80036c2:	4284      	cmp	r4, r0
 80036c4:	d803      	bhi.n	80036ce <_realloc_r+0x36>
 80036c6:	0035      	movs	r5, r6
 80036c8:	0843      	lsrs	r3, r0, #1
 80036ca:	42a3      	cmp	r3, r4
 80036cc:	d3ee      	bcc.n	80036ac <_realloc_r+0x14>
 80036ce:	0021      	movs	r1, r4
 80036d0:	0038      	movs	r0, r7
 80036d2:	f7ff ff6b 	bl	80035ac <_malloc_r>
 80036d6:	1e05      	subs	r5, r0, #0
 80036d8:	d0e8      	beq.n	80036ac <_realloc_r+0x14>
 80036da:	9b01      	ldr	r3, [sp, #4]
 80036dc:	0022      	movs	r2, r4
 80036de:	429c      	cmp	r4, r3
 80036e0:	d900      	bls.n	80036e4 <_realloc_r+0x4c>
 80036e2:	001a      	movs	r2, r3
 80036e4:	0031      	movs	r1, r6
 80036e6:	0028      	movs	r0, r5
 80036e8:	f7ff fed7 	bl	800349a <memcpy>
 80036ec:	0031      	movs	r1, r6
 80036ee:	0038      	movs	r0, r7
 80036f0:	f7ff fef0 	bl	80034d4 <_free_r>
 80036f4:	e7da      	b.n	80036ac <_realloc_r+0x14>
	...

080036f8 <_sbrk_r>:
 80036f8:	2300      	movs	r3, #0
 80036fa:	b570      	push	{r4, r5, r6, lr}
 80036fc:	4d06      	ldr	r5, [pc, #24]	; (8003718 <_sbrk_r+0x20>)
 80036fe:	0004      	movs	r4, r0
 8003700:	0008      	movs	r0, r1
 8003702:	602b      	str	r3, [r5, #0]
 8003704:	f7fe f848 	bl	8001798 <_sbrk>
 8003708:	1c43      	adds	r3, r0, #1
 800370a:	d103      	bne.n	8003714 <_sbrk_r+0x1c>
 800370c:	682b      	ldr	r3, [r5, #0]
 800370e:	2b00      	cmp	r3, #0
 8003710:	d000      	beq.n	8003714 <_sbrk_r+0x1c>
 8003712:	6023      	str	r3, [r4, #0]
 8003714:	bd70      	pop	{r4, r5, r6, pc}
 8003716:	46c0      	nop			; (mov r8, r8)
 8003718:	20000154 	.word	0x20000154

0800371c <__malloc_lock>:
 800371c:	b510      	push	{r4, lr}
 800371e:	4802      	ldr	r0, [pc, #8]	; (8003728 <__malloc_lock+0xc>)
 8003720:	f000 f814 	bl	800374c <__retarget_lock_acquire_recursive>
 8003724:	bd10      	pop	{r4, pc}
 8003726:	46c0      	nop			; (mov r8, r8)
 8003728:	20000158 	.word	0x20000158

0800372c <__malloc_unlock>:
 800372c:	b510      	push	{r4, lr}
 800372e:	4802      	ldr	r0, [pc, #8]	; (8003738 <__malloc_unlock+0xc>)
 8003730:	f000 f80d 	bl	800374e <__retarget_lock_release_recursive>
 8003734:	bd10      	pop	{r4, pc}
 8003736:	46c0      	nop			; (mov r8, r8)
 8003738:	20000158 	.word	0x20000158

0800373c <_malloc_usable_size_r>:
 800373c:	1f0b      	subs	r3, r1, #4
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	1f18      	subs	r0, r3, #4
 8003742:	2b00      	cmp	r3, #0
 8003744:	da01      	bge.n	800374a <_malloc_usable_size_r+0xe>
 8003746:	580b      	ldr	r3, [r1, r0]
 8003748:	18c0      	adds	r0, r0, r3
 800374a:	4770      	bx	lr

0800374c <__retarget_lock_acquire_recursive>:
 800374c:	4770      	bx	lr

0800374e <__retarget_lock_release_recursive>:
 800374e:	4770      	bx	lr

08003750 <_init>:
 8003750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003752:	46c0      	nop			; (mov r8, r8)
 8003754:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003756:	bc08      	pop	{r3}
 8003758:	469e      	mov	lr, r3
 800375a:	4770      	bx	lr

0800375c <_fini>:
 800375c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800375e:	46c0      	nop			; (mov r8, r8)
 8003760:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003762:	bc08      	pop	{r3}
 8003764:	469e      	mov	lr, r3
 8003766:	4770      	bx	lr
